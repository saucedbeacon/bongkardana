package o;

import id.dana.di.PerActivity;
import javax.inject.Inject;
import o.AppPreDownloadManager;
import o.NetworkUtils;
import o.isUserInputEnabled;

@PerActivity
public final class onPageScrollStateChanged implements isUserInputEnabled.getMax {
    private static int Grayscale$Algorithm = 0;
    public static final byte[] getMax;
    private static int onNavigationEvent = 1;
    public static final int setMin = 56;
    private AppPreDownloadManager.AnonymousClass2 FastBitmap$CoordinateSystem;
    private final isUserInputEnabled.length IsOverlapping;
    private Boolean Mean$Arithmetic;
    private syncJsApi equals;
    private final getDelay getMin;
    private uploadMonitorEvent hashCode;
    private GriverAppVirtualHostProxy<String> invoke;
    private FragmentStateAdapter$2<GriverRpcExtension> invokeSuspend;
    private getAppPreDownloadCacheManager isInside;
    private final appConfigIsEnable length;
    private final NetworkUtils.NetworkDetailCallback setMax;
    private isAppIdInPreDownloadConfig toDoubleRange;
    private copyBackForwardList toFloatRange;
    private setRetryCount toIntRange;
    private AppPreDownloadManager.AnonymousClass1 toString;
    private FragmentStateAdapter$2<AppPreDownloadManager.AnonymousClass3> valueOf;
    private GriverAppVirtualHostProxy<Boolean> values;

    static {
        byte[] bArr = new byte[7930];
        System.arraycopy("P\u0013G,õ\u0013éË<ó\u000b÷Å$\u0012\bû\u0006èÿ\b÷õ\u0013éË<ó\u000b÷Å\u0019!þ÷\u0000ø\tå\u001fë\u0011ïÞ1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\u0019#ôÿ\u0011Õ$ýÙ\u0015Ú+\u0004÷ô\rÐ1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\u0019#\u0004ï\u0000ü\u000bõ\u0013éË<ó\u000b÷Å\u0013'ó\u0010þÎ\u001c\u0010ÿÏ1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\u001e%õþâ\u001dø\u0003\u0004ï\u000bÑ1é\u0000\t\u0002ó\u0004ý\u0002ù\u0007ùúÿ\u0003ø\u0006\u0002òÿ\u0004÷\u0004\u0002ô\u0004\u0005ñ\u0003\u0002õÿ\u0005öÿ\u0006õÿ\u0007ô\u000býò\u0003\u0001ö\u0003\u0002õ\u000bþñ\u0003ýþú\u0005þ÷\u0004\u0003óÿ\bó\u0004\u0005ñÿ\tòÿ\nñÿ\u0002ýú\u0005÷ÿ\u0002þù\u0005÷ÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002\u0003ô\u0003ùÿ\u0004÷ÿ\u0002\u0001ö\u0007úù\u0003ýÿùÿ\u0002\u0002õÿ\u0007ô\u0003ý\u0000ø\u0003\u0003ô\u0003ý\u0001÷\u0004üú\u0003ý\u0002ö\u0003\u0001ö\u0003ý\u0003õ\u0004üú\u0004ýù\u000bþñ\tú÷\u0003\u0003ô\tú÷\u0004üú\u0003ý\u0004ô\u0003ý\u0005ó\u0003ý\u0006ò\u0003ýþú\u0005þ÷\u0004\u0003óÿ\bó\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0002\u0003ôÿ\u0002\u0006\u0002ù\nÿñÿ\u0003ø\u0007ùú\u0007úùÿ\u0004÷\u0003\u0002õÿ\u0005öÿ\u0006õÿ\u0006õÿ\u0006õ\u0005÷ÿ\u0007ô\u0005÷ÿ\bóÿ\tòÿ\nñ\u0007ùúÿ\u0005öÿ\u0002ýú\tùø\tú÷\u0005ýø\u000bõú\u0005\u0003ò\u000böù\u000b÷ø\u0005\u0003ò\u000bø÷\u000bùö\u0003\u0002õ\bøú\u0003ù\tú÷\u000búõ\u0003\u0001ö\u000bûô\u0004\u0000öÿ\u0002þù\u0004\u0002ô\u0004\u0003óÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001ö\u000büóÿ\u0003ø\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0002\u0002õÿ\u0002\u0003\u0002ùÿ\u0003øÿ\u0004÷\u0005÷ÿ\u0005ö\u0004ü\u0004ôÿ\u0006õÿ\u0007ôÿ\bóÿ\u0003ø\u0004\u0002ô\u0004\u0002ô\bÿóÿ\tò\u0007ùúÿ\nñÿ\u0002ýú\u0004ü\u0005ó\u0005\u0002ó\u0005\u0003ò\u0004üú\nüô\u0003ù\bøú\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0002ô\u0004\u0003óÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0004\u0002ù\u0004ý\u0004ó\u0004\u0002ô\u0004ý\u0005ò\u0003\u0002õÿ\u0003ø\u0005÷ÿ\u0004÷ÿ\u0005öÿ\u0006õÿ\u0003øÿ\u0007ôÿ\bóÿ\tòÿ\nñ\u0003\u0000\u0000õ\u0003\u0003ô\u0003\u0002úù\u0004þø\u0003ý\u0004ô\u0004üú\bøú\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002ýú\u0004\u0002ô\u0004\u0003óÿ\u0002þùÿ\u0002ÿøÿ\u0007ôÿ\u0002\u0000÷\u0004þüú\tú÷\u0003\u0004ýô\u000bþñ\u0003ù\u0004þýù\u0007\u0000ó\u0003\u0003ô\u0004þþø\u0003\u0001ö\u0003ÿø\u0004þÿ÷\u0003ÿ\u0000ö\nüô\u0004þ\u0000ö\u0005þ÷\u0004\u0003óÿ\u0002\u0001ö\u0004\u0002ô\u0004\u0003óÿ\u0002\u0002õÿ\u0002\u0003ôÿ\tòÿ\u0002\u0000÷\u0004þ\u0001õ\tú÷\u0003\u0003ô\u0003ý\u0001÷\u0004üú\u0003ý\u0002ö\u0003\u0002ÿô\u0003þ\u0000÷\u0003\u0001ö\u0003\u0002õ\u0003\u0000÷\u000bþñ\u0003ýþú\büöÿ\u0002\u0001ö\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0006ñÿ\nñ\u0004þ\u0002ô\u0003\u0006ûô\u0003\u0001ö\u0003\u0002õ\tú÷\u000bþñ\u0004ÿ÷\u0005ýø\büöÿ\u0002ýú\u0004\u0005ñÿ\u0003üúÿ\u0003ýùÿ\u0003þø\u0003\u0001üø\u0003\u0002õÿ\u0003ø\u0004þ\u0003óÿ\u0003ÿ÷\u0005÷ÿ\u0004÷ÿ\u0003\u0000ö\u0004þ\u0004òÿ\u0003\u0001õ\u0005÷ÿ\u0003\u0002ôÿ\u0003\u0003óÿ\u0003\u0004ò\u0007ùúÿ\u0003\u0005ñ\bþô\u0004\u0003ó\u0003\u0002õÿ\u0004ûúÿ\u0004üùÿ\u0004ýøÿ\u0004þ÷ÿ\bó\u0003\u0005øøÿ\u0003ÿ÷ÿ\u0003þûúû\t\u0002ùÿ\u0003øÿ\u0004÷\u0004þüú\u0003\u0003ô\u0003\u0002úù\u0007\u0002ñ\u0004üú\u0003\u0003ô\tú÷\u000bþñ\u0003ù\u0004þø\u0003\u0002ÿô\u0004üú\nýó\u0004\u0003óÿ\u0005ö\u0004\u0002ô\u0004\u0003óÿ\u0006õÿ\u0007ôÿ\bó\u0005÷ÿ\tòÿ\nñÿ\u0003ø\u0003ùÿ\u0002ýúÿ\u0004÷\u0003\u0006üó\u0004\u0000\u0002ò\u0003\u0003ô\u0004üú\u0004ýù\u000bþñ\u0003\u0003ÿó\u0003\u0002õ\tú÷\u0003\u0003ô\u0003ÿ\u0000ö\u0003\u0000÷\u0003ý\u0004ô\u0003\u0000\u0002ó\u0004üú\u0003\u0000÷\u0003\u0000\u0003ò\u0003\u0003ô\u0003þýú\u0003þÿø\u0004ÿ÷\t\u0000ñ\u0004\u0003óÿ\u0005ö\u0004\u0005ñÿ\u0002þùÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0003ø\u0005÷ÿ\tòÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002\u0003ô\u0007ùú\u0007úùÿ\u0002\u0004ó\u0003\u0002õÿ\u0002\u0005ò\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0002\u0006ñ\u0007ùúÿ\u0002\u0005ò\u0005÷\u0005÷ÿ\u0003üúÿ\u0003ýùÿ\u0003þøÿ\u0003ÿ÷\u0003\u0001üø\u0003\u0002õÿ\u0002\u0003ôÿ\u0002\u0000÷ÿ\u0003\u0000öÿ\u0004÷\u0004\u0000\u0003ñ\u0004\u0000\u0002ò\u000bþñ\u0003ý\u0006ò\u0003\u0002ÿô\u0003\u0003ô\u0005\u0003ò\u0004üú\u0006úú\u0003\u0002õ\u0007þõ\u0003þ\u0004ó\u0004ý\u0002õ\u0003ý\u0004ô\u0003\u0000÷\u0003ù\u0004þø\u0003\u0004ûö\u0004\u0003óÿ\u0005ö\u0004\u0005ñÿ\u0003\u0001õÿ\u0003\u0002ôÿ\u0003\u0000ö\u0006\u0002òÿ\u0002ý\u0002ùÿ\u0003øÿ\u0004÷ÿ\u0005ö\u0003\u0005ÿñ\u0003\u0003ô\tú÷\u0003\u0003ô\u0003\u0004ó\u0003\u0002õ\u0006úú\u0003\u0002õ\bû÷\u0004\u0000öÿ\u0006õ\u0004\u0002ô\u0004\u0003óÿ\u0007ôÿ\bóÿ\tò\u0006\u0002òÿ\nñÿ\u0004÷\u0007ùúÿ\u0002ýú\u0004ü\u0004ô\u0004\u0002ùùÿ\u0002þùÿ\u0002ÿøÿ\u0004÷\u0003ùÿ\nñ\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0002\u0000÷\u0004ü\u0004ô\u0004\u0002ùùÿ\u0002þù\u0007úù\u0003ýÿùÿ\u0002ÿ\u0002ùÿ\u0003øÿ\u0004÷\u0004þ\u0005ñ\u0004üú\u0004ýù\u0003\u0002úù\u0004þýù\u0003\u0002õ\u0003\u0003ô\u0005\u0003ò\u000böù\u0003\u0002õ\u000bùö\u0003\u0002ü÷\u000bþñ\u0003\u0004ýô\u0003\u0002úù\u0004þø\u0003\u0002ÿô\u0004ÿûú\u0005þ÷\u0004\u0003óÿ\u0005ö\u0004\u0005ñÿ\u0006õÿ\u0007ôÿ\bó\u0004\u0002ô\u0004\u0005ñ\u0003\u0002õÿ\tò\u0005÷ÿ\nñÿ\u0002ýúÿ\u0002þùÿ\tòÿ\u0002ÿø\u0003\u0005ÿñ\u0003\u0004ýô\u0003\u0003ô\u0005\u0003ò\u0004üú\u0003ý\u0002ö\u0003\u0001ö\u0003\u0002õ\tú÷\u0004ÿüù\u0005þ÷\u0004\u0003óÿ\u0002\u0000÷\u0004\u0002ô\u0004\u0003óÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002\u0003ô\u0004þ\u0004òÿ\u0002\u0004ó\u0005÷ÿ\u0002\u0005ò\u0003\u0001ý÷ÿ\u0002\u0006ñÿ\u0003üúÿ\u0002ÿø\u0004ÿýø\u0003\u0003ô\u0003\u0002\u0000ó\u0004üú\u0003\u0000÷\u0003ý\u0004ô\u000bùö\u0005\u0003ò\u000bø÷\u0004ýù\u0004ÿþ÷\u0003\u0003ô\tú÷\u0003þýú\tú÷\u0003\u0000÷\u0003ý\u0006ò\u0003\u0004ûö\u0004\u0003óÿ\u0002\u0000÷\u0004\u0002ô\u0004\u0003óÿ\u0003ýùÿ\u0003þøÿ\u0003ÿ÷ÿ\u0002\u0003ôÿ\u0003\u0000öÿ\u0003ÿ÷ÿ\u0002ÿø\u0004ÿÿö\u0004üú\u0003\u0001ö\u0003\u0002õ\u0003\u0000÷\u000bþñ\u0003\u0003ÿó\u0004ÿ\u0000õ\tú÷\u0003þù\u0007\u0000ó\nù÷\u0005üù\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002\u0000÷\u0004\u0002ô\u0004\u0003óÿ\u0003\u0001õÿ\u0003\u0002ôÿ\u0003øÿ\u0003\u0003óÿ\u0003\u0004ò\u0004\u0002ô\u0004\u0002ô\bÿóÿ\u0003\u0005ñ\u0005÷ÿ\nñÿ\u0004ûúÿ\u0003\u0000ö\u0007ùúÿ\u0004üùÿ\bõ\u0013éË<ó\u000b÷Å\u0012+þû÷ú\u000bõ\u0013éË<ó\u000b÷Å#\u001füõ\u0003÷\u0002ù\u0004\u0002ô\u0004\u0002ô\bÿóÿ\u0003øÿ\u0004÷\nöú\u0004üú\n÷ù\u0003\u0003ô\nøø\u0003\u0001ö\u0007\u0000ó\nù÷\núö\nûõ\u0005\u0003ò\u0004üú\nüô\u0003ù\nýó\u0004\u0003óÿ\u0005ö\u0004\u0002ô\u0004\u0003óÿ\u0006õÿ\u0007ôÿ\bóÿ\tòÿ\tò\u0005÷ÿ\nñ\u0005÷ÿ\u0002ýúÿ\u0002þùÿ\u0002ÿø\u0007ùúÿ\u0002\u0000÷ÿ\b\u0002ùÿ\u0003ø\u0007ü÷\u0007ýö\u0005\u0004ñ\u0006úú\u0003\u0002õ\u0007þõ\u0007ÿô\u0007\u0000ó\u0007\u0001ò\u0003ù\u0007\u0002ñ\u0004üú\bøú\bùù\búø\bû÷\u0005ýø\büöÿ\u0004÷\u0004\u0002ô\u0004\u0003óÿ\u0005öÿ\u0006õÿ\u0007ô\u0006\u0002òÿ\bóÿ\tòÿ\nñÿ\tò\býõ\u0003\u0002õÿ\nñÿ\u0002ýú\bþô\bÿóÿ\u0002þùÿ\u0002ÿø\u0005÷\bôÿ\u0002\u0000÷\u0005÷\tóÿ\u0002\u0001ö\b\u0000òÿ\u0002\u0002õÿ\u0002\u0003ô\u0005÷\b\u0001ñÿ\u0002\u0004ó\u0005÷\t÷úÿ\u0002\u0005ò\u0003ùÿ\u0002\u0006ñ\u0007ùúÿ\u0003üúÿ\u0003ýù\u0003ùÿ\bóÿ\u0002ýú\u0005÷\bôÿ\u0002\u0000÷\u0005÷\tóÿ\u0002\u0001ö\b\u0000ò\tøù\u0003\u0002õÿ\u0002\u0002õÿ\u0002ýúÿ\u0003þø\tùø\tú÷\u0003\u0003ô\tú÷\tûö\tüõ\u0003ù\u0007\u0002ñ\týô\tþó\u0004þø\u0003\u0001ö\u0003\u0002õ\tú÷\tÿò\t\u0000ñ\u0004\u0003óÿ\u0003ÿ÷\u0004\u0005ñÿ\u0003\u0000öÿ\u0003\u0001õÿ\u0003\u0002ô\u0006\u0002òÿ\u0002\u0006ñÿ\u0002ýõ\u0013éË<ó\u000b÷Å%\u0017\u0003\u0000ùþý\u0001\u0000ïýé\u001fó\u000bí\u0011ó\u0004ýÕ1é\u0000\t\u0002ó\u0004ý\u0002ù\u0003\u0003\u0001ñÿ\u0003ø\u0007ùúÿ\u0004÷\u0003\u0001üø\u0003\u0002õÿ\u0005öÿ\u0006õ\u0005÷ÿ\u0007ôÿ\bóÿ\tòÿ\u0005ö\u0004ÿ\u0001ôÿ\nñÿ\u0002ýú\u0004ü\u0003õ\u0003þ\u0002õ\u0003ÿ\u0000ö\u0004üú\u0004ÿ\u0002ó\u0003\u0002õ\u0003\u0003ô\u0003þù\tüõ\u0003\u0004ûö\u0004\u0003óÿ\u0002þù\u0004\u0005ñÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002\u0003ô\u0005÷ÿ\u0007ôÿ\u0002\u0004ó\u0005÷\u0005÷ÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0003üúÿ\u0002\u0003ô\u0003ÿ\u0004òÿ\nñÿ\u0002ýú\u0004ÿ\u0003ò\u0005\u0004ñ\u0003\u0000÷\u0003\u0001ö\u0003\u0002õ\u0007þõ\u0003\u0000÷\u0006ý÷\u0003\u0002õ\u0004ÿ\u0004ñ\u0003ù\u0004þýù\u0003\u0002õ\u0004\u0000úú\u0003ù\bøú\u0004\u0000öÿ\u0002þù\u0004\u0005ñÿ\u0003ýùÿ\u0003þøÿ\u0003ÿ÷\u0004ý\u0004ó\u0004ý\u0004ó\u0003\u0003ô\u000bþñ\u0003ù\u0004þýù\u0003\u0002õ\u0003\u0003ô\u0004þþø\u0003\u0001ö\u0003\u0002õ\u0004\u0000ûù\bøú\u0003\u0002õÿ\u0005ö\u0005÷ÿ\u0007ô\u0003ÿ\u0005ñÿ\u0003\u0000öÿ\tòÿ\u0005öÿ\u0003\u0001õÿ\u0002ýú\u0004\u0000üø\nûõ\u0004\u0000ý÷\u0004\u0000þö\u0003þù\u0004\u0000ÿõ\u000bùö\u0004\u0000\u0000ô\u0004\u0000\u0001ó\u0003þýú\u0003\u0000÷\u0006\u0001ó\t\u0000ñ\u0004\u0003óÿ\u0002þù\u0004\u0005ñÿ\u0003\u0002ôÿ\u0003\u0003óÿ\u0002\u0002õ\bþô\bÿóÿ\u0003\u0004ò\u0003\u0000\u0000õÿ\u0003øÿ\u0002\u0003\u0002ù\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0003ø\u0006\u0002òÿ\u0004÷ÿ\u0005öÿ\u0006õÿ\u0007ôÿ\bó\u0007ùúÿ\tò\u0006\u0002òÿ\nñÿ\u0005ö\u0007ùú\u0007úù\u0003ýÿùÿ\tòÿ\u0002ýú\u0003\u0002ûø\u0003\u0003ô\tú÷\u0003\u0003ô\u0003\u0002ü÷\u0003\u0002ýö\u0003ÿ\u0000ö\u0003\u0000÷\u0003\u0002þõ\u0003\u0002õ\tú÷\u0003þÿø\tú÷\u0003\u0001\u0001ó\u0003\u0002ÿô\u0003þÿø\u0003ýþú\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0005ñÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001ö\u0003ùÿ\nñÿ\u0005öÿ\u0002\u0002õ\tùø\u0003\u0003ô\u0003\u0002\u0000ó\u000böù\u0003\u0002õ\u000bùö\u0003\u0002ü÷\u000bþñ\u0003\u0001ö\u0003\u0002õ\u0003\u0000÷\u0003\u0002\u0001ò\u0003\u0002\u0002ñ\u0003\u0002õ\bøú\u0003ù\bøú\u0005ýø\büöÿ\u0002\u0003ô\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0002\u0002õ\u0003\u0003øú\u0003\u0003ùù\tú÷\u0003\u0003úø\u0005\u0003ò\u0003þù\u0003\u0002õ\u000bþñ\u0003\u0000÷\u000bùö\u0003\u0002õ\bøú\u0003ù\nýó\u0004\u0003óÿ\u0002\u0003ô\u0004\u0002ô\u0004\u0003óÿ\u0003üúÿ\u0003ýùÿ\u0003þøÿ\u0005öÿ\u0006õ\tøù\u0003\u0002õÿ\u0007ôÿ\u0005öÿ\u0003ÿ÷ÿ\u0003\u0000ö\u0003ùÿ\u0004÷\u0006\u0002òÿ\u0003\u0001õ\u0003ùÿ\u0003\u0001õ\u0005÷ÿ\u0003\u0002ô\u0005÷ÿ\u0003\u0003ó\u0005÷ÿ\u0003\u0004ò\u0003\u0003û÷\u0003\u0003üö\u0003\u0002õÿ\u0003\u0005ñ\u0005÷ÿ\u0003\u0002ô\u0005÷ÿ\u0003\u0003ó\u0005÷ÿ\u0003\u0004òÿ\u0003\u0005é\t\u0007îè\u0015\u0003\u0004à\t\t\u0007î\u0002ùÿ\u0003øÿ\u0004÷\u0003ý\u0007ñ\u0003\u0003ô\tú÷\u0003þýú\u0003ý\u0001÷\u0003þþù\u0003\u0002õ\u0003þÿø\u0003þ\u0000÷\u0003\u0001ö\u0003\u0002õ\u0003\u0000÷\u0003ý\u0006ò\u0004ÿ÷\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0005ö\u0004\u0002ô\u0004\u0003óÿ\u0006õÿ\u0007ôÿ\bóÿ\tòÿ\u0003ø\u0007ùú\u0007úùÿ\nñ\u0003\u0002õÿ\u0002ýú\u0006\u0002òÿ\u0002þù\bþô\u0004\u0003ó\u0003\u0002õÿ\u0002ÿøÿ\u0002\u0000÷\u0003þ\u0001ö\u0003þ\u0002õ\u0005\u0003ò\u0003þþù\u0003\u0005ò\u0003\u0001ö\u0003þ\u0003ô\u0004üú\u0003\u0001ö\u0003\u0002õ\u0003þ\u0004ó\u0003\u0003ô\u0003\u0000÷\u0003ý\u0004ô\u0003þ\u0005ò\u0005ýø\büöÿ\u0002\u0001ö\u0004\u0002ô\u0004\u0003óÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002\u0004ó\u0003þ\u0006ñÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0003üú\u0005÷ÿ\u0003ýùÿ\u0003þøÿ\u0003ÿ÷ÿ\u0003\u0000öÿ\u0003ÿ÷ÿ\u0003\u0001õ\bôÿ\u0003\u0002ô\u0005÷ÿ\u0003\u0003ó\bôÿ\u0003\u0004òÿ\u0003\u0005ñÿ\u0002ýúÿ\u0003øÿ\bó\u0003ùÿ\u0002þù\u0007ùúÿ\u0002ýú\u0005÷ÿ\u0004ûúÿ\u0004üù\u0003\u0002õ\u0005÷ÿ\u0003\u0003óÿ\u0004ýøÿ\u0004þ\u0002ùÿ\u0003ø\u0007ùúÿ\u0004÷\u0003ÿüúÿ\u0005ö\u0005÷ÿ\u0006õÿ\u0007ô\u0003\u0002õ\u0005÷ÿ\bóÿ\tòÿ\nñÿ\u0003øÿ\u0003øÿ\u0002ýú\u0003ÿýùÿ\u0005ö\u0005÷ÿ\u0006õÿ\u0007ô\u0003\u0002õ\u0005÷ÿ\bóÿ\tò\u0007úùÿ\u0002þù\u0003\u0002õÿ\nñ\u0003þ\u0006ñÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001ö\u0005÷ÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0004óÿ\u0002\u0006ñ\bôÿ\u0003üú\u0005÷ÿ\bó\bôÿ\u0003ýùÿ\u0003þøÿ\u0004÷ÿ\u0003ÿ÷\u0003ÿþø\u0003ÿÿ÷\u0004üú\u0004ýù\u000bþñ\u0003ý\u0006ò\u0003ý\u0004ô\tú÷\u000búõ\u0003ÿ\u0000ö\u0003ÿ\u0001õ\u0003ÿ\u0002ô\u0003\u0000÷\u0003\u0001ö\u0003\u0002õ\bû÷\t\u0000ñ\u0004\u0003óÿ\u0003\u0000ö\u0004\u0005ñÿ\u0003\u0001õÿ\u0003\u0002ôÿ\u0003\u0003ó\bþô\bÿóÿ\u0003\u0004\u0002ù\u0003\u0004øùÿ\u0003øÿ\u0004÷ÿ\u0005ö\u0003\u0004ùø\nøø\u0003ý\u0004ô\tú÷\u0005\u0004ñ\u0003ý\u0002ö\u0003\u0004ú÷\u0004üú\u0003\u0001ö\u0003\u0005ò\u0003ù\u0004þø\u0003\u0004ûö\u0004\u0003óÿ\u0006õ\u0004\u0002ô\u0004\u0003óÿ\u0007ôÿ\bóÿ\tòÿ\nñ\bþô\bÿóÿ\u0002ýúÿ\u0002þùÿ\u0005ö\u0003\u0004üõ\tú÷\u0003\u0004ýô\u0003\u0000÷\u0003\u0001ö\u0003\u0002õ\u0003\u0004þó\tú÷\u0003\u0003ô\tú÷\u0004üú\u0003ý\u0004ô\tú÷\u0003þÿø\u0004ÿ÷\u0004\u0000öÿ\u0006õ\u0004\u0005ñÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001ö\u0003\u0004ÿò\u0003\u0002õÿ\u0002\u0002õ\u0005÷ÿ\u0002\u0003ôÿ\u0002\u0004ó\u0005÷\u0007úùÿ\u0002\u0005òÿ\u0002\u0006ñ\u0006\u0002òÿ\u0003üú\u0003ùÿ\u0003ýù\u0005÷ÿ\u0003þøÿ\u0002\u0004ó\u0005÷\u0007úùÿ\u0003ÿ÷ÿ\u0003\u0000öÿ\u0003\u0001õÿ\u0004÷ÿ\u0003\u0002ô\u0005÷ÿ\u0003\u0003óÿ\u0002\u0004ó\u0005÷\u0007úùÿ\u0003\u0004òÿ\u0003\u0005ñ\u0006\u0002òÿ\u0003ýù\u0007ùú\u0003\u0004\u0000ñ\u0003\u0005öú\u0003\u0002õÿ\u0004ûú\u0003\u0005÷ùÿ\u0004üù\u0003\u0005øøÿ\u0004ýø\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0004þ÷\u0003\u0005ù÷ÿ\u0004ÿö\u0005÷ÿ\u0002\u0003ôÿ\u0002\u0004ó\u0003\u0005úöÿ\u0002\u0005ò\u0007úù\u0003\u0005ûõ\u0003\u0002õÿ\u0002\u0006ñÿ\u0004\u0000õ\u0006\u0002òÿ\u0004\u0001ôÿ\u0005ö\u0003\u0005üô\tú÷\u0005\u0004ñ\u0004üú\u0003\u0002õ\u0003\u0000÷\u0003ý\u0004ô\tú÷\u0003\u0003ô\u0003þù\u0003\u0002õ\u0003\u0000÷\u000bþñ\u0007ýö\u0003\u0005ýó\u0003\u0005þò\u0003\u0001\u0003ñ\u0005þ÷\u0004\u0003óÿ\u0006õ\u0004\u0005ñÿ\u0004\u0002óÿ\u0004\u0003òÿ\u0004\u0004ñÿ\u0004÷ÿ\u0005úú\u0003\u0005ÿñ\u0003\u0003ô\u0003ÿÿ÷\u0004üú\u0004ýù\u0003\u0000\u0001ô\u0003\u0001ö\u0003\u0002õ\tú÷\u0005\u0004ñ\u0003\u0000÷\u0003\u0002ýö\u0005\u0003ò\u000bø÷\bøú\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0005ûù\u0004\u0002ô\u0004\u0003óÿ\u0005üøÿ\u0005ý÷ÿ\u0005þöÿ\u0002\u0001ö\u0003ùÿ\u0005ÿõ\u0005÷ÿ\u0003þøÿ\u0002\u0004ó\u0003\u0005úöÿ\u0003ÿ÷\u0003ÿ\u0005ñÿ\u0003\u0000ö\u0003\u0006õúÿ\u0003øÿ\u0004÷\u0003ùÿ\u0004\u0001ôÿ\u0005\u0000ô\u0007ùúÿ\u0004ûúÿ\u0005ö\u0003\u0000\u0000õ\u0003ÿÿ÷\tú÷\u0004üú\u0003\u0001ö\u0003\u0002õ\tú÷\u0003\u0000÷\u0003ý\u0006ò\u0004ÿ÷\u0005ýø\büöÿ\u0006õ\u0004\u0002ô\u0004\u0003óÿ\u0005\u0001óÿ\u0005\u0002òÿ\u0005\u0003ñ\u0005÷ÿ\u0003\u0003óÿ\u0006ùúÿ\u0006úùÿ\u0006ûøÿ\u0005úú\u0003\u0006÷ø\u0003\u0006ø÷\u0005\u0003ò\u0004üú\u0003\u0000÷\u0003ý\u0004ô\u0003\u0000\u0002ó\u0004üú\u0003\u0000÷\u000bþñ\u0003\u0006ùö\u0003ý\u0005ó\u0003\u0002ÿô\u0003\u0006úõ\u0003\u0006ûô\u0003\u0001ö\u0003\u0000ýø\u0003ýþú\büöÿ\u0005ûù\u0004\u0002ô\u0004\u0003óÿ\u0006ü÷ÿ\u0006ýöÿ\u0006þõÿ\u0006ÿôÿ\u0006\u0000ó\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0006\u0001òÿ\u0005ö\u0003\u0006üó\tú÷\u0003\u0003ô\u0003ÿÿ÷\u0003þýú\u0003\u0006ýò\u0004þø\u0003\u0001ö\u0003\u0002õ\tú÷\u0004üú\tú÷\tûö\u0003\u0006þñ\u0004þø\u0004ÿ÷\t\u0000ñ\u0004\u0003óÿ\u0006õ\u0004\u0005ñÿ\u0006\u0002ñÿ\u0007øúÿ\u0007ùù\u0004üþúÿ\u0004üù\u0004üÿùÿ\u0004ÿö\u0006\u0002òÿ\u0005ÿõ\u0005÷ÿ\u0002\u0003ôÿ\u0007úøÿ\u0007û÷ÿ\u0007üöÿ\u0007ýõ\bþô\bÿóÿ\u0002\u0002õ\u0003ùÿ\u0003üú\u0004ü\u0000ø\u0004ü\u0001÷\u0004ü\u0002öÿ\u0002ýú\u0004ü\u0003õÿ\u0004ýøÿ\u0007ùù\u0005÷ÿ\u0003þøÿ\u0007þôÿ\u0007ÿóÿ\u0007\u0000òÿ\u0004ü\r×\u0016\fþì\u0004ü\u0002ù\u0004\u0002ô\u0004\u0003þóÿ\u0003øÿ\u0004÷\u0005÷ÿ\u0005öÿ\u0006õÿ\u0004÷\u0005÷ÿ\u0005ö\u0007úùÿ\u0007ô\u0003\u0002õÿ\u0006õ\u0004ÿýøÿ\bó\u0007ùúÿ\tòÿ\nñ\u0004\u0003ÿòÿ\bóÿ\u0002ýú\u0004\u0003\u0000ñ\u0003þù\u0003\u0002õ\u0003\u0006ýò\u0007\u0002ñ\u0003ýú\u0004üú\u0003\u0001ö\u0004\u0000ÿõ\u0003\u0004ýô\u0006úú\u0003\u0002õ\bû÷\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0002ô\u0004\u0003óÿ\u0002ÿøÿ\u0002\u0000÷ÿ\nñÿ\u0002\u0001öÿ\u0002\u0002õ\u0004\u0004öú\u0006úú\u0003þ\u0003ô\u0003þýú\u0004\u0004÷ù\u0003\u0001\u0001ó\u0003\u0001ö\u0003\u0002õ\u0004\u0001ÿô\u0004þø\u0004ÿ÷\u0005ýø\büöÿ\u0002\u0003ô\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0004\u0002ù\u0003ùÿ\u0003øÿ\u0004÷\u0005÷\bôÿ\u0005ö\u0005÷\tóÿ\u0006õ\u0005÷ÿ\u0007ôÿ\bóÿ\u0004÷ÿ\tò\u000bñ\u0003ýú\u0003þù\u0003ÿø\u0003\u0000÷\u0003\u0001ö\u0003\u0002õ\u0003\u0003ô\u0003\u0004ó\u0003\u0005ò\u0003ù\u0003\u0006ñ\u0004üú\u0004ýù\u0003ù\u0004þø\u0004ÿ÷\u0004\u0000öÿ\nñ\u0004\u0002ô\u0004\u0003óÿ\u0002ýúÿ\u0002þùÿ\u0002ÿø\u0004\u0002ô\u0004\u0005ñ\u0003\u0002õÿ\u0002\u0000÷ÿ\u0004÷ÿ\u0002\u0001ö\u0005ûú\u0004ýù\u0003ù\u0005üù\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002\u0002õ\u0004\u0002ô\u0004\u0003óÿ\u0002\u0003ôÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0002\u0005òÿ\u0002\u0001ö\u0005\u0001ô\u0005\u0002ó\u0005\u0003ò\u0005\u0004ñ\u0006úú\u0006ûù\u0006üø\u0006ý÷\u0006þö\u0003þù\u0006ÿõ\u0003ù\u0004þø\u0004ÿ÷\u0006\u0000ô\u0003\u0003ô\u0003þù\u0003\u0005ò\u0006\u0001ó\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002\u0002õ\u0004\u0005ñÿ\u0003üúÿ\u0003ýùÿ\bó\u0006\u0002òÿ\u0003ø\u0006\u0003ñÿ\u0003þøÿ\u0003ÿ÷\u0007ùú\u0007úùÿ\u0003\u0000ö\u0003\u0002õÿ\u0003\u0001õ\u0007ùúÿ\u0003\u0001õ\u0013éË<ó\u000b÷Å\u001e%öó\u0001\u000bÒ'\u0001ùò\u0011Ï1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\"!÷\u0004ó\u0002öÞ1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\u0019!þ÷\u0000ø\tÓ/ó\föö\u0007\u0004Ï1é\u0000\t\u0002ó\u0004ýõ\u0013éË<ó\u000b÷Å\u00151é\u0000\t\u0002ó\u0004ý\u0002ùÿ\u0003ø\u0004\u0002ô\u0004\u0005ñ\u0003\u0002õÿ\u0004÷ÿ\u0005ö\u0007ùúÿ\u0006õ\u0003\u0005øøÿ\u0007ôÿ\bó\u0005÷ÿ\tòÿ\nñÿ\u0002ýú\u0004\u0003üõ\tú÷\u0003\u0003ô\tú÷\u0003\u0002\u0000ó\u0004\u0003ýô\u0006úú\u0003\u0002õ\u0004ý\u0002õ\u0003\u0001ö\u0003\u0002õ\u0003\u0000÷\u000bþñ\tú÷\u0003\u0003ô\tú÷\u0003\u0002úù\u0004þø\u0003\u0001ö\u0007\u0000ó\u0004üú\u0003\u0001\u0003ñ\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0002ô\u0004\u0003óÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001ö\u0007ùú\u0003ÿ\u0005ñÿ\u0006õ\u0004ÿ\u0001ôÿ\u0007ôÿ\u0003øÿ\u0002\u0002õ\u0003ÿýù\u0005ýø\u0004\u0000ý÷\u0003ÿ\u0000ö\u0003\u0000÷\u0003\u0002ýö\u0003ÿ\u0000ö\u0003þ\u0004ó\u000bùö\u0003\u0002õ\u0004\u0002ÿó\u0004üú\u000bùö\u0004\u0000\u0000ô\u0004\u0001ü÷\u0003ù\tú÷\u0003\u0003ô\u000bþñ\u0003\u0003ÿó\u0003\u0003\u0000ò\bøú\u0004\u0000öÿ\u0002\u0003ô\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0005öÿ\u0003\u0002ù\u0003ùÿ\u0003øÿ\u0004÷\u0006\u0002òÿ\u0005ö\u0005÷ÿ\u0006õÿ\u0007ô\u0005÷ÿ\bóÿ\u0007ô\u0007úùÿ\tò\u0003\u0002õÿ\nñÿ\u0002ýú\u0004\u0001ùú\u0005ýø\u0003\u0003úø\u0004\u0001úù\u0003\u0002õ\u0004\u0000ûù\u000bùö\u0003\u0002õ\tú÷\u000búõ\u0003\u0001ö\u0003\u0002õ\u000bþñ\u0004\u0001ûø\u0005ýø\u0005\u0003ò\u0004üú\u000bùö\u0004\u0000\u0000ô\u0004\u0001ü÷\u0005ýø\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0005ñÿ\u0002ÿøÿ\u0002\u0000÷ÿ\u0002\u0001öÿ\u0002\u0002õ\u0004ý\u0000÷ÿ\u0002\u0003ôÿ\u0002\u0002õ\u0005÷ÿ\u0002\u0004óÿ\u0007ô\u0005÷ÿ\u0002\u0005òÿ\u0007ô\tøù\u0003\u0002õÿ\u0002\u0006ñ\u0005÷ÿ\u0003üúÿ\u0007ô\u0005÷ÿ\u0003ýùÿ\u0007ôÿ\u0003þøÿ\u0002ýú\u0004\u0001ýö\tú÷\nûõ\u0004\u0001þõ\u000böù\u000b÷ø\u0005\u0003ò\u0004üú\u0003þ\u0004ó\u000bùö\u0003þ\u0003ô\tú÷\u0004üú\u0003\u0001ö\u0003\u0002õ\u0004\u0001ÿô\u0004þø\u0004ÿ÷\u0004þ\u0000ö\u0005þ÷\u0004\u0003óÿ\u0002þù\u0004\u0002ô\u0004\u0003óÿ\u0003ÿ÷ÿ\u0003\u0000öÿ\u0003\u0001õ\u0003ùÿ\u0005öÿ\u0003\u0002ô\u0004\u0001\u0000ó\u0003\u0004ýô\u000bþñ\u0003ù\u0007\u0002ñ\u0004\u0000úú\t\u0000ñ\u0004\u0003óÿ\u0003\u0003ó\u0004\u0005ñÿ\u0003\u0004òÿ\u0003\u0005ñÿ\u0004ûú\u0005÷ÿ\u0002\u0004óÿ\u0007ô\u0005÷ÿ\u0002\u0005òÿ\u0007ôÿ\u0002\u0006ñ\u0005÷ÿ\u0004üùÿ\u0007ôÿ\u0004ýø\u0007ùúÿ\u0004þ÷ÿ\u0004ÿöÿ\u0004\u0000õÿ\u0002\u0002õÿ\u0003\u0002ô\u0004\u0001\u0001ò\u0003\u0000÷\u0003\u0001ö\u0003ÿø\u0004ÿ÷\t\u0000ñ\u0004\u0003óÿ\u0003\u0003ó\u0004\u0005ñÿ\u0004\u0001ôÿ\u0004\u0002óÿ\u0004\u0003òÿ\u0002\u0002õ\u0006\u0002òÿ\u0003øÿ\u0003\u0001õ\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0004\u0004ñÿ\u0002\u0002õ\u0005÷ÿ\u0005úúÿ\u0007ô\u0005÷ÿ\u0005ûùÿ\u0007ôÿ\u0005üø\u0003\u0003øúÿ\u0002\u0003ô\u0005÷ÿ\u0006õÿ\u0007ô\u0005÷ÿ\bóÿ\u0007ôÿ\nñÿ\u0005ý÷ÿ\u0003\u0002ô\u0004\u0001\u0002ñ\u0003ýú\u0003þýú\u0004\u0002øú\u0004\u0000\u0000ô\u0004þ\u0000ö\büöÿ\u0003\u0003ó\u0004\u0005ñÿ\u0005þöÿ\u0005ÿõÿ\u0004\u0000õ\u0007ùú\u0007úùÿ\tò\u0003\u0002õÿ\u0004þ\u0002ùÿ\u0003ø\u0005÷ÿ\u0004÷\u0005÷ÿ\u0005ö\u0005÷ÿ\u0006õÿ\u0007ôÿ\bó\u0003ÿ\u0003óÿ\tò\u0003ÿ\u0004òÿ\nñÿ\u0002ýú\bþô\u0004\u0003ó\u0003\u0002õÿ\u0002þù\u0007ùúÿ\u0002ÿø\u0003ÿýùÿ\tòÿ\u0002\u0000÷\u0007ùú\u0003ÿ\u0005ñÿ\u0002ÿøÿ\u0002\u0001ö\u0003\u0000ûú\u0005ýø\u0003\u0000üù\u0003ýú\u0004üú\u0003ÿ\u0001õ\u0003\u0000÷\u000bùö\u0006þö\u0003\u0000÷\u0003\u0001ö\u0003\u0000ýø\u0003\u0000þ÷\u0004\u0000öÿ\u0002\u0002õ\u0004\u0002ô\u0004\u0003óÿ\u0002\u0003ôÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002ýú\u0003\u0000ÿöÿ\nñÿ\u0002\u0006ñ\u0003\u0000\u0000õ\tú÷\u0003\u0003ô\u0003ÿÿ÷\u0004üú\u0003ý\u0004ô\u0003\u0000÷\u0003\u0000\u0001ô\u0003ý\u0004ô\u0003ý\u0001÷\u0006üø\u0003ý\u0004ô\u0003\u0000\u0002ó\u0006üø\u0003\u0000\u0003ò\u0007ýö\u0003\u0000\u0004ñ\u0003\u0001úú\nýó\u0004\u0003óÿ\u0003üú\u0004\u0005ñÿ\u0003ýùÿ\u0003þøÿ\u0003ÿ÷ÿ\u0002ýúÿ\u0002ýú\u0005÷ÿ\u0004÷\u0005÷ÿ\u0005ö\u0005÷ÿ\u0006õÿ\u0007ô\u0003\u0001ûù\u0003\u0002õÿ\b\u0002ùÿ\u0003øÿ\u0004÷ÿ\u0005ö\u0007ùúÿ\u0006õ\u0003\u0001üø\u0003\u0002õÿ\u0007ô\u0005÷ÿ\bó\u0005÷ÿ\tò\u0005÷\u0003\u0001ý÷ÿ\nñÿ\u0002ýúÿ\u0002þù\u0003\u0001þö\u0003\u0001ö\u000bûô\u0004\u0000öÿ\u0002ÿø\u0004\u0005ñÿ\u0002\u0000÷ÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002þù\u0003\u0001ÿõ\u0005\u0003ò\u0003ýú\u0004üú\u0003ÿ\u0001õ\u0003\u0001\u0000ô\u0003\u0002õ\u0003\u0001\u0001ó\u0003ý\u0004ô\tú÷\u0003þÿø\u0004ÿ÷\u0003\u0001\u0002ò\u0003ÿ\u0000ö\nüô\u0003ù\u0003\u0001\u0003ñ\büöÿ\u0002ÿø\u0004\u0005ñÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0003øÿ\u0002\u0002õÿ\u0002\u0006ñÿ\u0002\u0003ôÿ\u0003üú\u0003\u0002ùú\u0003\u0003ô\u0004üú\u0003ý\u0004ô\u0003þ\u0004ó\u0003ý\u0006ò\u0003ý\u0004ô\u0003ýú\u0003þýú\u000bþñ\u0003\u0000÷\u0003ÿÿ÷\u0003\u0002úù\u0007\u0002ñ\tÿò\t\u0000ñ\u0004\u0003óÿ\u0003ýù\u0004\u0002ô\u0004\u0003óÿ\u0003þøÿ\u0003ÿ÷ÿ\u0002\u0006\u0002ù\u0005÷ÿ\u0003ø\u0005÷ÿ\u0004÷ÿ\u0005öÿ\u0006õÿ\u0007ô\u0003\u0003ýõ\tú÷\u0006úú\u0007\u0000ó\u0003\u0003ô\u0004üú\u0004ýù\u0003\u0003þô\u0003\u0003ÿó\u0003\u0003\u0000ò\nýó\u0004\u0003óÿ\bó\u0004\u0005ñÿ\tòÿ\nñÿ\u0002ýúÿ\u0002þù\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\u0002ÿøÿ\u0002ýúÿ\u0002þù\u0007ùúÿ\u0002\u0000÷ÿ\u0002\u0001ö\u0003\u0003\u0001ñ\u0003\u0004÷ú\u000bùö\u0003\u0001úú\bøú\u0004\u0000öÿ\u0002\u0002õ\u0004\u0005ñÿ\u0002\u0003ôÿ\u0002\u0004óÿ\u0002\u0005òÿ\u0002\u0005\u0002ùÿ\u0003øÿ\u0003ø\u0007ùúÿ\u0004÷ÿ\u0003øÿ\u0005ö\u0004\u0002úøÿ\u0006õÿ\u0007ô\u0004\u0002û÷\u0003\u0001\u0001ó\u0003ý\u0004ô\u0003ÿÿ÷\u0005\u0003ò\u0003þþù\u0003\u0005ò\u0003ý\u0006ò\tú÷\u0003\u0003ô\u0004\u0002üö\u0003\u0000ýø\u0003\u0004ûö\u0004\u0003óÿ\bó\u0004\u0002ô\u0004\u0003óÿ\tòÿ\nñÿ\u0002ýú\u0005÷ÿ\u0002þùÿ\u0002ÿø\u0004\u0002ýõÿ\u0006õÿ\u0007ô\u0004\u0002þô\u0003\u0003ô\u0003þ\u0000÷\u0004ýù\u0003\u0000\u0001ô\u0003ý\u0004ô\u0003\u0003ô\u0004þþø\u0003ý\u0004ô\u0004\u0000ûù\u0004\u0002ÿó\u0004üú\n÷ù\bøú\u0003ù\nýó\u0004\u0003óÿ\bó\u0004\u0005ñÿ\u0002\u0000÷ÿ\u0002\u0001öÿ\u0002\u0002õÿ\u0002ýú\u0005÷ÿ\u0002þù\u0004\u0002\u0000ò\u0003\u0002õÿ\u0002ÿø\u0004\u0002ô\u0004\u0002ô\bÿóÿ\u0002\u0003\u0002ù\u0007ùúÿ\u0003øÿ\u0004÷\u0004\u0002\u0001ñÿ\u0005öÿ\u0006õ\u0005÷ÿ\u0007ô\u0004\u0003÷ú\u0004ü\u0002öÿ\bó\u0004\u0002ô\u0004\u0002ô\u0004\u0003ó\u0003\u0002õÿ\tòÿ\nñ\u0003\u0006õú\u0003ÿÿ÷\u0003ÿÿ÷\u0003ÿ\u0000ö\búø\u000bùö\u0005\u0003ò\u0004üú\u0004\u0003øù\u0007\u0000ó\u0003\u0002\u0000ó\u0003þþù\u0003\u0006þñ\u0004\u0003ùø\u0004\u0002ÿó\u0004üú\nüô\u0003ù\bøú\t\u0000ñ\u0004\u0003óÿ\u0002ýú\u0004\u0002ô\u0004\u0003óÿ\u0002þùÿ\u0002ÿøÿ\u0002\u0000÷\u0005÷ÿ\u0007ôÿ\bóÿ\u0002\u0001öÿ\u0006õ\u0004\u0003ú÷ÿ\u0005öÿ\u0006õÿ\nñ\u0004\u0003ûö\u0003\u0003ô\u0005\u0004ñ\u0003ý\u0002ö\u0003\u0001ö\u0003\u0002õ\u000bþñ\u0005\u0002ó\u0005\u0003ò\u0004üú\n÷ù\u0003\u0005þò\bøú\t\u0000ñ\u0004\u0003óÿ\u0002ýú\u0004\u0005ñÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002\u0001õ\u0013éË<ó\u000b÷Å#\u001füõ\u0003÷Ù1ò\u0001öÿ\u000b\u000bþû÷ú\u000bæ\t\t\u0007îõ\u0013éË<ó\u000b÷Å\u0011/þí\u0016Ø\u001fù\u0001ñÞ1é\u0000\t\u0002ó\u0004ý\u0002ù\u0004ü\u0006òÿ\u0003øÿ\u0004÷ÿ\u0005ö\bþô\bÿóÿ\u0006õ\u0007ùú\u0004ü\u0007ñ\u0003\u0005öú\u0003\u0002õÿ\u0007ôÿ\u0004÷ÿ\bó\u0004ýþùÿ\u0003ø\u0004ýÿøÿ\tòÿ\u0004÷\u0005÷ÿ\nñÿ\u0002ýúÿ\u0002þù\u0004ý\u0000÷ÿ\tò\u0005÷ÿ\nñÿ\u0002ýú\u0007úùÿ\u0002ÿø\u0003\u0002õÿ\u0002þùÿ\u0004÷ÿ\u0002\u0000÷\u0004ý\u0001ö\u0003þù\u0003\u0005ò\u000bþñ\u0003\u0003ÿó\u0003\u0002õ\u0003\u0003ô\u0003\u0000÷\u0003ÿ\u0000ö\u0003ÿ\u0001õ\u0003\u0000÷\u0004ý\u0002õ\u0003\u0001ö\u0003\u0005ò\u0003ù\u0004þø\u0003ýþú\büöÿ\u0002\u0001ö\u0004\u0005ñÿ\u0002\u0002õÿ\u0002\u0003ôÿ\u0002\u0004óÿ\u0002\u0000÷\u0004ý\u0003ô\u0003\u0000\u0004ñ\u0003\u0002õ\tú÷\u0005ýø\u0003ÿ\u0000ö\n÷ù\bøú\u0003ù\u0003\u0005þò\tú÷\u0003\u0003ô\u0006úú\u0003\u0002õ\u000bþñ\u0004ÿ÷\u0005ýø\büöÿ\u0002\u0001ö\u0004\u0005ñÿ\u0002\u0005òÿ\u0002\u0006ñÿ\u0003üú\u0007ùúÿ\u0007\rþó\u0007ô".getBytes("ISO-8859-1"), 0, bArr, 0, 7930);
        getMax = bArr;
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:114:0x02f9, code lost:
        if (r15 <= 47) goto L_0x02d8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:132:0x0351, code lost:
        if (r15 <= 90) goto L_0x02da;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x014e, code lost:
        r1.getMax(88);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.GriverAppVirtualHostProxy<java.lang.Boolean> FastBitmap$CoordinateSystem() {
        /*
            r20 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r20
            r1.<init>(r2)
            r0 = 2468(0x9a4, float:3.458E-42)
            short r0 = (short) r0
            r3 = 609(0x261, float:8.53E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x03a7 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x03a7 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x03a7 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x03a7 }
            byte[] r8 = getMax     // Catch:{ all -> 0x03a7 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x03a7 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x03a7 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x03a7 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x03a7 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x03a7 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x03a7 }
            byte[] r12 = getMax     // Catch:{ all -> 0x03a7 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x03a7 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x03a7 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x03a7 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x03a7 }
            byte[] r12 = getMax     // Catch:{ all -> 0x03a7 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x03a7 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x03a7 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x03a7 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x03a7 }
            r11[r6] = r12     // Catch:{ all -> 0x03a7 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x03a7 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x03a7 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x03a7 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r12[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r13 = r10 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r13, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r15[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r13, r14, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fa }
            r13[r6] = r14     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r13)     // Catch:{ all -> 0x00fa }
            r11 = 0
            java.lang.Object r10 = r10.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x00f1 }
            int r12 = r12 + r4
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = r12 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r12 = r12.getMethod(r13, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r12.invoke(r10, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r3 = 38
            r10 = 33
        L_0x0107:
            r12 = 16
        L_0x0109:
            int r15 = r6 + 1
            r17 = 68
            r7 = 28
            r0 = r5[r6]     // Catch:{ all -> 0x0222 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x0222 }
            r6 = 219(0xdb, float:3.07E-43)
            r14 = 2
            r13 = 4
            r8 = 5
            switch(r0) {
                case -28: goto L_0x021b;
                case -27: goto L_0x0217;
                case -26: goto L_0x020a;
                case -25: goto L_0x01f3;
                case -24: goto L_0x01e6;
                case -23: goto L_0x01e2;
                case -22: goto L_0x01df;
                case -21: goto L_0x01d4;
                case -20: goto L_0x01d0;
                case -19: goto L_0x01ba;
                case -18: goto L_0x01a6;
                case -17: goto L_0x01a2;
                case -16: goto L_0x019a;
                case -15: goto L_0x0197;
                case -14: goto L_0x0193;
                case -13: goto L_0x018f;
                case -12: goto L_0x0182;
                case -11: goto L_0x0172;
                case -10: goto L_0x0167;
                case -9: goto L_0x0164;
                case -8: goto L_0x0161;
                case -7: goto L_0x0155;
                case -6: goto L_0x013e;
                case -5: goto L_0x0130;
                case -4: goto L_0x012d;
                case -3: goto L_0x0125;
                case -2: goto L_0x0122;
                case -1: goto L_0x011f;
                default: goto L_0x011d;
            }     // Catch:{ all -> 0x0222 }
        L_0x011d:
            goto L_0x021f
        L_0x011f:
            r6 = 111(0x6f, float:1.56E-43)
            goto L_0x0109
        L_0x0122:
            r6 = 8
            goto L_0x0109
        L_0x0125:
            r1.getMax(r14)     // Catch:{ all -> 0x0222 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            o.GriverAppVirtualHostProxy r0 = (o.GriverAppVirtualHostProxy) r0     // Catch:{ all -> 0x0222 }
            return r0
        L_0x012d:
            r6 = 35
            goto L_0x0109
        L_0x0130:
            r1.getMax(r11)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 == r11) goto L_0x013c
            r6 = 77
            r6 = 69
            goto L_0x0109
        L_0x013c:
            r6 = 5
            goto L_0x0109
        L_0x013e:
            r1.length = r4     // Catch:{ all -> 0x0222 }
            r1.getMax(r13)     // Catch:{ all -> 0x0222 }
            r1.getMax(r8)     // Catch:{ all -> 0x0222 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0222 }
            o.GriverAppVirtualHostProxy<java.lang.Boolean> r0 = r0.values     // Catch:{ all -> 0x0222 }
            r1.isInside = r0     // Catch:{ all -> 0x0222 }
        L_0x014e:
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x0222 }
            goto L_0x021f
        L_0x0155:
            r1.getMax(r6)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 != 0) goto L_0x021f
            r0 = 13
            r6 = 13
            goto L_0x0109
        L_0x0161:
            r6 = 38
            goto L_0x0109
        L_0x0164:
            r6 = 90
            goto L_0x0109
        L_0x0167:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0222 }
            r1.length = r0     // Catch:{ all -> 0x0222 }
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x0222 }
            goto L_0x021f
        L_0x0172:
            r1.length = r4     // Catch:{ all -> 0x0222 }
            r1.getMax(r13)     // Catch:{ all -> 0x0222 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0222 }
            goto L_0x021f
        L_0x0182:
            r1.getMax(r7)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 != 0) goto L_0x021f
            r0 = 32
            r6 = 32
            goto L_0x0109
        L_0x018f:
            r6 = 44
            goto L_0x0109
        L_0x0193:
            r6 = 14
            goto L_0x0109
        L_0x0197:
            r6 = 3
            goto L_0x0109
        L_0x019a:
            r1.getMax(r14)     // Catch:{ all -> 0x0222 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0222 }
            throw r0     // Catch:{ all -> 0x0222 }
        L_0x01a2:
            r6 = 91
            goto L_0x0109
        L_0x01a6:
            o.onPageScrollStateChanged$9 r0 = new o.onPageScrollStateChanged$9     // Catch:{ all -> 0x0222 }
            r1.length = r4     // Catch:{ all -> 0x0222 }
            r1.getMax(r13)     // Catch:{ all -> 0x0222 }
            r1.getMax(r8)     // Catch:{ all -> 0x0222 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            o.onPageScrollStateChanged r6 = (o.onPageScrollStateChanged) r6     // Catch:{ all -> 0x0222 }
            r0.<init>()     // Catch:{ all -> 0x0222 }
            r1.isInside = r0     // Catch:{ all -> 0x0222 }
            goto L_0x014e
        L_0x01ba:
            r1.length = r14     // Catch:{ all -> 0x0222 }
            r1.getMax(r13)     // Catch:{ all -> 0x0222 }
            r1.getMax(r8)     // Catch:{ all -> 0x0222 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0222 }
            r1.getMax(r8)     // Catch:{ all -> 0x0222 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x0222 }
            o.GriverAppVirtualHostProxy r6 = (o.GriverAppVirtualHostProxy) r6     // Catch:{ all -> 0x0222 }
            r0.values = r6     // Catch:{ all -> 0x0222 }
            goto L_0x021f
        L_0x01d0:
            r6 = 46
            goto L_0x0109
        L_0x01d4:
            r1.getMax(r7)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 != 0) goto L_0x021f
            r6 = 68
            goto L_0x0109
        L_0x01df:
            r6 = 1
            goto L_0x0109
        L_0x01e2:
            r6 = 114(0x72, float:1.6E-43)
            goto L_0x0109
        L_0x01e6:
            r1.getMax(r6)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 != 0) goto L_0x021f
            r0 = 89
            r6 = 89
            goto L_0x0109
        L_0x01f3:
            r1.getMax(r11)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            r6 = 11
            if (r0 == r6) goto L_0x0204
            r6 = 26
            r0 = 9
            r6 = 9
            goto L_0x0109
        L_0x0204:
            r0 = 84
            r6 = 84
            goto L_0x0109
        L_0x020a:
            r1.getMax(r7)     // Catch:{ all -> 0x0222 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0222 }
            if (r0 != 0) goto L_0x021f
            r0 = 110(0x6e, float:1.54E-43)
            r6 = 110(0x6e, float:1.54E-43)
            goto L_0x0109
        L_0x0217:
            r6 = 33
            goto L_0x0109
        L_0x021b:
            r6 = 16
            goto L_0x0109
        L_0x021f:
            r6 = r15
            goto L_0x0109
        L_0x0222:
            r0 = move-exception
            int r6 = setMin
            r6 = r6 | 7559(0x1d87, float:1.0592E-41)
            short r6 = (short) r6
            r8 = 975(0x3cf, float:1.366E-42)
            short r8 = (short) r8
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r6 = setMin(r6, r8, r13)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r13 = 34
            r14 = 43
            if (r6 == 0) goto L_0x0256
            r6 = 10
            if (r15 < r6) goto L_0x0256
            r6 = 11
            if (r15 > r6) goto L_0x0256
        L_0x024a:
            r4 = 46
            r6 = 90
            r7 = 111(0x6f, float:1.56E-43)
            r8 = 91
        L_0x0252:
            r13 = 43
            goto L_0x0397
        L_0x0256:
            r6 = 5427(0x1533, float:7.605E-42)
            short r6 = (short) r6
            r4 = 978(0x3d2, float:1.37E-42)
            short r4 = (short) r4
            byte[] r18 = getMax
            byte r11 = r18[r9]
            byte r11 = (byte) r11
            java.lang.String r11 = setMin(r6, r4, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0274
            if (r15 < r12) goto L_0x0274
            if (r15 > r10) goto L_0x0274
            goto L_0x024a
        L_0x0274:
            int r11 = setMin
            r11 = r11 | 68
            short r11 = (short) r11
            r10 = 974(0x3ce, float:1.365E-42)
            short r10 = (short) r10
            byte[] r19 = getMax
            byte r12 = r19[r9]
            byte r12 = (byte) r12
            java.lang.String r11 = setMin(r11, r10, r12)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0296
            if (r15 < r7) goto L_0x0296
            r7 = 29
            if (r15 > r7) goto L_0x0296
            goto L_0x024a
        L_0x0296:
            int r7 = setMin
            r7 = r7 | 68
            short r7 = (short) r7
            byte[] r11 = getMax
            byte r11 = r11[r9]
            byte r11 = (byte) r11
            java.lang.String r7 = setMin(r7, r10, r11)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02b5
            r7 = 36
            if (r15 < r7) goto L_0x02b5
            if (r15 > r3) goto L_0x02b5
            goto L_0x024a
        L_0x02b5:
            r7 = 97
            short r7 = (short) r7
            r11 = 976(0x3d0, float:1.368E-42)
            short r11 = (short) r11
            byte[] r12 = getMax
            byte r12 = r12[r9]
            byte r12 = (byte) r12
            java.lang.String r12 = setMin(r7, r11, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x02e0
            r12 = 41
            if (r15 < r12) goto L_0x02e0
            r12 = 42
            if (r15 > r12) goto L_0x02e0
            r4 = 46
        L_0x02d8:
            r6 = 90
        L_0x02da:
            r7 = 111(0x6f, float:1.56E-43)
            r8 = 91
            goto L_0x0397
        L_0x02e0:
            byte[] r12 = getMax
            byte r12 = r12[r9]
            byte r12 = (byte) r12
            java.lang.String r4 = setMin(r6, r4, r12)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02fc
            r4 = 46
            if (r15 < r4) goto L_0x02fe
            r6 = 47
            if (r15 > r6) goto L_0x02fe
        L_0x02fb:
            goto L_0x02d8
        L_0x02fc:
            r4 = 46
        L_0x02fe:
            int r6 = setMin
            r6 = r6 | 68
            short r6 = (short) r6
            byte[] r12 = getMax
            byte r12 = r12[r9]
            byte r12 = (byte) r12
            java.lang.String r6 = setMin(r6, r10, r12)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x031f
            r6 = 64
            if (r15 < r6) goto L_0x031f
            r6 = 69
            if (r15 > r6) goto L_0x031f
            goto L_0x02fb
        L_0x031f:
            r6 = 86
            if (r15 < r6) goto L_0x0332
            r6 = 90
            if (r15 > r6) goto L_0x0332
            r6 = 116(0x74, float:1.63E-43)
            r6 = 90
            r7 = 111(0x6f, float:1.56E-43)
            r8 = 91
            r13 = 116(0x74, float:1.63E-43)
            goto L_0x0397
        L_0x0332:
            r6 = 5397(0x1515, float:7.563E-42)
            short r6 = (short) r6
            r10 = 973(0x3cd, float:1.363E-42)
            short r10 = (short) r10
            byte[] r12 = getMax
            byte r12 = r12[r9]
            byte r12 = (byte) r12
            java.lang.String r6 = setMin(r6, r10, r12)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0354
            r6 = 85
            if (r15 < r6) goto L_0x0354
            r6 = 90
            if (r15 > r6) goto L_0x0356
            goto L_0x02da
        L_0x0354:
            r6 = 90
        L_0x0356:
            int r10 = setMin
            r10 = r10 | 7559(0x1d87, float:1.0592E-41)
            short r10 = (short) r10
            byte[] r12 = getMax
            byte r12 = r12[r9]
            byte r12 = (byte) r12
            java.lang.String r8 = setMin(r10, r8, r12)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x037a
            r8 = 91
            if (r15 < r8) goto L_0x037c
            r10 = 111(0x6f, float:1.56E-43)
            if (r15 > r10) goto L_0x037c
            r7 = 111(0x6f, float:1.56E-43)
            goto L_0x0252
        L_0x037a:
            r8 = 91
        L_0x037c:
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r7 = setMin(r7, r11, r10)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x03a6
            r7 = 106(0x6a, float:1.49E-43)
            if (r15 < r7) goto L_0x03a6
            r7 = 111(0x6f, float:1.56E-43)
            if (r15 > r7) goto L_0x03a6
        L_0x0397:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r6 = r13
            r4 = 1
            r10 = 33
            r11 = 35
            goto L_0x0107
        L_0x03a6:
            throw r0
        L_0x03a7:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03af
            throw r1
        L_0x03af:
            goto L_0x03b1
        L_0x03b0:
            throw r0
        L_0x03b1:
            goto L_0x03b0
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.FastBitmap$CoordinateSystem():o.GriverAppVirtualHostProxy");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:130:0x0349, code lost:
        if (r12 <= 88) goto L_0x026d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:0x012f, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x0169, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x020e, code lost:
        r0 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:71:0x020f, code lost:
        r18 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:73:0x0219, code lost:
        r18 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:99:0x02ac, code lost:
        if (r12 <= 30) goto L_0x0269;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.GriverAppVirtualHostProxy Grayscale$Algorithm() {
        /*
            r20 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r20
            r1.<init>(r2)
            r0 = 1032(0x408, float:1.446E-42)
            short r0 = (short) r0
            r3 = 627(0x273, float:8.79E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x037b }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x037b }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x037b }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x037b }
            byte[] r9 = getMax     // Catch:{ all -> 0x037b }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x037b }
            byte r9 = (byte) r9     // Catch:{ all -> 0x037b }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x037b }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x037b }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x037b }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x037b }
            byte[] r13 = getMax     // Catch:{ all -> 0x037b }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x037b }
            byte r13 = (byte) r13     // Catch:{ all -> 0x037b }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x037b }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x037b }
            byte[] r13 = getMax     // Catch:{ all -> 0x037b }
            byte r13 = r13[r10]     // Catch:{ all -> 0x037b }
            byte r13 = (byte) r13     // Catch:{ all -> 0x037b }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x037b }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x037b }
            r12[r7] = r13     // Catch:{ all -> 0x037b }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x037b }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x037b }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x037b }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006c:
            int r11 = r0.length
            r13 = 35
            if (r9 >= r11) goto L_0x0104
            r11 = r0[r9]
            java.lang.Object[] r14 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fb }
            r14[r7] = r11     // Catch:{ all -> 0x00fb }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fb }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fb }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fb }
            r15 = r11 | 906(0x38a, float:1.27E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fb }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fb }
            byte r12 = r16[r10]     // Catch:{ all -> 0x00fb }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fb }
            java.lang.String r11 = setMin(r11, r15, r12)     // Catch:{ all -> 0x00fb }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00fb }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fb }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fb }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fb }
            byte r13 = r16[r13]     // Catch:{ all -> 0x00fb }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fb }
            java.lang.String r12 = setMin(r12, r15, r13)     // Catch:{ all -> 0x00fb }
            java.lang.Class[] r13 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fb }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fb }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fb }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fb }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00fb }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fb }
            r13[r7] = r15     // Catch:{ all -> 0x00fb }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r13)     // Catch:{ all -> 0x00fb }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r14)     // Catch:{ all -> 0x00fb }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f2 }
            byte r13 = r13[r7]     // Catch:{ all -> 0x00f2 }
            int r13 = r13 + r5
            short r13 = (short) r13     // Catch:{ all -> 0x00f2 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f2 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f2 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f2 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f2 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f2 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f2 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f2 }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00f2 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00f2 }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00f2 }
            java.lang.reflect.Method r7 = r13.getMethod(r7, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Object r7 = r7.invoke(r11, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00f2 }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00f2 }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x006c
        L_0x00f2:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fa
            throw r1
        L_0x00fa:
            throw r0
        L_0x00fb:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0103
            throw r1
        L_0x0103:
            throw r0
        L_0x0104:
            r17 = 76
            r7 = 23
            r11 = 2
            r18 = 0
        L_0x010b:
            int r12 = r18 + 1
            r15 = 88
            r0 = r6[r18]     // Catch:{ all -> 0x021d }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x021d }
            r9 = 8
            r4 = 34
            r14 = 5
            r8 = 4
            switch(r0) {
                case -26: goto L_0x0213;
                case -25: goto L_0x0204;
                case -24: goto L_0x01fe;
                case -23: goto L_0x01ec;
                case -22: goto L_0x01e8;
                case -21: goto L_0x01d2;
                case -20: goto L_0x01be;
                case -19: goto L_0x01ba;
                case -18: goto L_0x01b2;
                case -17: goto L_0x01a0;
                case -16: goto L_0x019c;
                case -15: goto L_0x0198;
                case -14: goto L_0x018b;
                case -13: goto L_0x0186;
                case -12: goto L_0x0181;
                case -11: goto L_0x0176;
                case -10: goto L_0x0171;
                case -9: goto L_0x016e;
                case -8: goto L_0x0159;
                case -7: goto L_0x0154;
                case -6: goto L_0x014f;
                case -5: goto L_0x0144;
                case -4: goto L_0x0134;
                case -3: goto L_0x012b;
                case -2: goto L_0x0123;
                case -1: goto L_0x0120;
                default: goto L_0x011e;
            }     // Catch:{ all -> 0x021d }
        L_0x011e:
            goto L_0x0219
        L_0x0120:
            r18 = 69
            goto L_0x010b
        L_0x0123:
            r1.getMax(r11)     // Catch:{ all -> 0x021d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x021d }
            throw r0     // Catch:{ all -> 0x021d }
        L_0x012b:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x021d }
            r1.length = r0     // Catch:{ all -> 0x021d }
        L_0x012f:
            r1.getMax(r9)     // Catch:{ all -> 0x021d }
            goto L_0x0219
        L_0x0134:
            r1.length = r5     // Catch:{ all -> 0x021d }
            r1.getMax(r8)     // Catch:{ all -> 0x021d }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x021d }
            goto L_0x0219
        L_0x0144:
            r1.getMax(r4)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            if (r0 != 0) goto L_0x020e
            r0 = 22
            goto L_0x020f
        L_0x014f:
            r0 = 27
            r18 = 27
            goto L_0x010b
        L_0x0154:
            r0 = 112(0x70, float:1.57E-43)
            r18 = 112(0x70, float:1.57E-43)
            goto L_0x010b
        L_0x0159:
            r1.length = r5     // Catch:{ all -> 0x021d }
            r1.getMax(r8)     // Catch:{ all -> 0x021d }
            r1.getMax(r14)     // Catch:{ all -> 0x021d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x021d }
            o.GriverAppVirtualHostProxy<java.lang.String> r0 = r0.invoke     // Catch:{ all -> 0x021d }
            r1.isInside = r0     // Catch:{ all -> 0x021d }
        L_0x0169:
            r1.getMax(r15)     // Catch:{ all -> 0x021d }
            goto L_0x0219
        L_0x016e:
            r18 = 2
            goto L_0x010b
        L_0x0171:
            r0 = 81
            r18 = 81
            goto L_0x010b
        L_0x0176:
            r1.getMax(r4)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            if (r0 != 0) goto L_0x020e
            r0 = 57
            goto L_0x020f
        L_0x0181:
            r0 = 85
            r18 = 85
            goto L_0x010b
        L_0x0186:
            r0 = 59
            r18 = 59
            goto L_0x010b
        L_0x018b:
            r0 = 219(0xdb, float:3.07E-43)
            r1.getMax(r0)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            if (r0 != 0) goto L_0x020e
            r0 = 63
            goto L_0x020f
        L_0x0198:
            r18 = 76
            goto L_0x010b
        L_0x019c:
            r18 = 23
            goto L_0x010b
        L_0x01a0:
            r1.length = r5     // Catch:{ all -> 0x021d }
            r1.getMax(r8)     // Catch:{ all -> 0x021d }
            r1.getMax(r14)     // Catch:{ all -> 0x021d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            int r0 = super.hashCode()     // Catch:{ all -> 0x021d }
            r1.length = r0     // Catch:{ all -> 0x021d }
            goto L_0x012f
        L_0x01b2:
            r1.getMax(r11)     // Catch:{ all -> 0x021d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            o.GriverAppVirtualHostProxy r0 = (o.GriverAppVirtualHostProxy) r0     // Catch:{ all -> 0x021d }
            return r0
        L_0x01ba:
            r18 = 29
            goto L_0x010b
        L_0x01be:
            o.onPageScrollStateChanged$6 r0 = new o.onPageScrollStateChanged$6     // Catch:{ all -> 0x021d }
            r1.length = r5     // Catch:{ all -> 0x021d }
            r1.getMax(r8)     // Catch:{ all -> 0x021d }
            r1.getMax(r14)     // Catch:{ all -> 0x021d }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            o.onPageScrollStateChanged r4 = (o.onPageScrollStateChanged) r4     // Catch:{ all -> 0x021d }
            r0.<init>()     // Catch:{ all -> 0x021d }
            r1.isInside = r0     // Catch:{ all -> 0x021d }
            goto L_0x0169
        L_0x01d2:
            r1.length = r11     // Catch:{ all -> 0x021d }
            r1.getMax(r8)     // Catch:{ all -> 0x021d }
            r1.getMax(r14)     // Catch:{ all -> 0x021d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x021d }
            r1.getMax(r14)     // Catch:{ all -> 0x021d }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x021d }
            o.GriverAppVirtualHostProxy r4 = (o.GriverAppVirtualHostProxy) r4     // Catch:{ all -> 0x021d }
            r0.invoke = r4     // Catch:{ all -> 0x021d }
            goto L_0x0219
        L_0x01e8:
            r18 = 87
            goto L_0x010b
        L_0x01ec:
            r1.getMax(r13)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            r4 = 74
            if (r0 == 0) goto L_0x01fa
            if (r0 == r5) goto L_0x01f8
            goto L_0x01fa
        L_0x01f8:
            r4 = 64
        L_0x01fa:
            r18 = r4
            goto L_0x010b
        L_0x01fe:
            r0 = 82
            r18 = 82
            goto L_0x010b
        L_0x0204:
            r1.getMax(r4)     // Catch:{ all -> 0x021d }
            int r0 = r1.setMax     // Catch:{ all -> 0x021d }
            if (r0 != 0) goto L_0x020e
            r0 = 111(0x6f, float:1.56E-43)
            goto L_0x020f
        L_0x020e:
            r0 = r12
        L_0x020f:
            r18 = r0
            goto L_0x010b
        L_0x0213:
            r0 = 86
            r18 = 86
            goto L_0x010b
        L_0x0219:
            r18 = r12
            goto L_0x010b
        L_0x021d:
            r0 = move-exception
            byte[] r4 = getMax
            r8 = 41
            byte r9 = r4[r8]
            short r9 = (short) r9
            r14 = 973(0x3cd, float:1.363E-42)
            short r14 = (short) r14
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r9, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r9 = 26
            if (r4 == 0) goto L_0x0248
            if (r12 < r11) goto L_0x0248
            r4 = 3
            if (r12 > r4) goto L_0x0248
            r4 = 87
            r5 = 69
        L_0x0244:
            r18 = 26
            goto L_0x036f
        L_0x0248:
            int r4 = setMin
            r4 = r4 | 2374(0x946, float:3.327E-42)
            short r4 = (short) r4
            r5 = 965(0x3c5, float:1.352E-42)
            short r5 = (short) r5
            byte[] r19 = getMax
            byte r11 = r19[r10]
            byte r11 = (byte) r11
            java.lang.String r4 = setMin(r4, r5, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0271
            r4 = 17
            if (r12 < r4) goto L_0x0271
            if (r12 > r7) goto L_0x0271
        L_0x0269:
            r4 = 87
            r5 = 69
        L_0x026d:
            r18 = 1
            goto L_0x036f
        L_0x0271:
            int r4 = setMin
            r4 = r4 | 2374(0x946, float:3.327E-42)
            short r4 = (short) r4
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r4 = setMin(r4, r5, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0290
            r4 = 24
            if (r12 < r4) goto L_0x0290
            if (r12 > r9) goto L_0x0290
            goto L_0x0269
        L_0x0290:
            byte[] r4 = getMax
            byte r5 = r4[r8]
            short r5 = (short) r5
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r5, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02af
            r4 = 29
            if (r12 < r4) goto L_0x02b1
            r5 = 30
            if (r12 > r5) goto L_0x02b1
            goto L_0x0269
        L_0x02af:
            r4 = 29
        L_0x02b1:
            r5 = 970(0x3ca, float:1.359E-42)
            short r5 = (short) r5
            byte[] r8 = getMax
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r5 = setMin(r3, r5, r8)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02d0
            r5 = 53
            if (r12 < r5) goto L_0x02d0
            r5 = 54
            if (r12 > r5) goto L_0x02d0
            goto L_0x0269
        L_0x02d0:
            int r5 = setMin
            r5 = r5 | 68
            short r5 = (short) r5
            r8 = 974(0x3ce, float:1.365E-42)
            short r8 = (short) r8
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r5 = setMin(r5, r8, r11)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02f5
            r5 = 60
            if (r12 < r5) goto L_0x02f5
            r5 = 64
            if (r12 > r5) goto L_0x02f5
            goto L_0x0269
        L_0x02f5:
            r5 = 65
            if (r12 < r5) goto L_0x0304
            r5 = 69
            if (r12 > r5) goto L_0x0306
            r8 = 58
            r4 = 87
            r18 = 58
            goto L_0x036f
        L_0x0304:
            r5 = 69
        L_0x0306:
            byte[] r8 = getMax
            r11 = 5474(0x1562, float:7.671E-42)
            byte r11 = r8[r11]
            short r11 = (short) r11
            r4 = 969(0x3c9, float:1.358E-42)
            short r4 = (short) r4
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r11, r4, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x032d
            r8 = 79
            if (r12 < r8) goto L_0x032d
            r8 = 80
            if (r12 > r8) goto L_0x032d
            r4 = 87
            goto L_0x026d
        L_0x032d:
            byte[] r8 = getMax
            r11 = 5474(0x1562, float:7.671E-42)
            byte r11 = r8[r11]
            short r11 = (short) r11
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r11, r4, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x034d
            r4 = 87
            if (r12 < r4) goto L_0x034f
            if (r12 > r15) goto L_0x034f
            goto L_0x026d
        L_0x034d:
            r4 = 87
        L_0x034f:
            r8 = 5397(0x1515, float:7.563E-42)
            short r8 = (short) r8
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r8 = setMin(r8, r14, r11)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x037a
            r8 = 107(0x6b, float:1.5E-43)
            if (r12 < r8) goto L_0x037a
            r8 = 108(0x6c, float:1.51E-43)
            if (r12 > r8) goto L_0x037a
            goto L_0x0244
        L_0x036f:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r5 = 1
            r11 = 2
            goto L_0x010b
        L_0x037a:
            throw r0
        L_0x037b:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0383
            throw r1
        L_0x0383:
            goto L_0x0385
        L_0x0384:
            throw r0
        L_0x0385:
            goto L_0x0384
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.Grayscale$Algorithm():o.GriverAppVirtualHostProxy");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:82:0x0234, code lost:
        if (r13 <= 48) goto L_0x01f3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x0258, code lost:
        if (r13 <= 74) goto L_0x01f5;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ o.AppPreDownloadManager.AnonymousClass2 getMax(o.onPageScrollStateChanged r19) {
        /*
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r0 = r19
            r1.<init>(r0)
            r0 = 7339(0x1cab, float:1.0284E-41)
            short r0 = (short) r0
            int r2 = setMin
            r2 = r2 | 704(0x2c0, float:9.87E-43)
            short r2 = (short) r2
            r3 = 73
            byte r4 = (byte) r3
            java.lang.String r0 = setMin(r0, r2, r4)
            r2 = 5452(0x154c, float:7.64E-42)
            short r2 = (short) r2
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r2, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x028b }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x028b }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x028b }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x028b }
            byte[] r9 = getMax     // Catch:{ all -> 0x028b }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x028b }
            byte r9 = (byte) r9     // Catch:{ all -> 0x028b }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x028b }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x028b }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x028b }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x028b }
            byte[] r13 = getMax     // Catch:{ all -> 0x028b }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x028b }
            byte r13 = (byte) r13     // Catch:{ all -> 0x028b }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x028b }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x028b }
            byte[] r13 = getMax     // Catch:{ all -> 0x028b }
            byte r13 = r13[r10]     // Catch:{ all -> 0x028b }
            byte r13 = (byte) r13     // Catch:{ all -> 0x028b }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x028b }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x028b }
            r12[r7] = r13     // Catch:{ all -> 0x028b }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x028b }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x028b }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x028b }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006e:
            int r11 = r0.length
            r12 = 35
            if (r9 >= r11) goto L_0x0107
            r11 = r0[r9]
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fe }
            r13[r7] = r11     // Catch:{ all -> 0x00fe }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fe }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fe }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fe }
            r14 = r11 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fe }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fe }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fe }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fe }
            java.lang.String r11 = setMin(r11, r14, r15)     // Catch:{ all -> 0x00fe }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00fe }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fe }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fe }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fe }
            byte r12 = r16[r12]     // Catch:{ all -> 0x00fe }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fe }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x00fe }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fe }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fe }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fe }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fe }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00fe }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fe }
            r14[r7] = r15     // Catch:{ all -> 0x00fe }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r14)     // Catch:{ all -> 0x00fe }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r13)     // Catch:{ all -> 0x00fe }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f5 }
            byte r13 = r13[r7]     // Catch:{ all -> 0x00f5 }
            int r13 = r13 + r5
            short r13 = (short) r13     // Catch:{ all -> 0x00f5 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f5 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f5 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f5 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f5 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f5 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f5 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f5 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f5 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f5 }
            r17 = 76
            byte r3 = r16[r17]     // Catch:{ all -> 0x00f5 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x00f5 }
            java.lang.String r3 = setMin(r14, r15, r3)     // Catch:{ all -> 0x00f5 }
            java.lang.reflect.Method r3 = r13.getMethod(r3, r12)     // Catch:{ all -> 0x00f5 }
            java.lang.Object r3 = r3.invoke(r11, r12)     // Catch:{ all -> 0x00f5 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x00f5 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x00f5 }
            r6[r9] = r3
            int r9 = r9 + 1
            r3 = 73
            goto L_0x006e
        L_0x00f5:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fd
            throw r1
        L_0x00fd:
            throw r0
        L_0x00fe:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0106
            throw r1
        L_0x0106:
            throw r0
        L_0x0107:
            r4 = 17
            r9 = 4
            r11 = 12
        L_0x010c:
            int r13 = r7 + 1
            r14 = 40
            r15 = 8
            r3 = 45
            r0 = r6[r7]     // Catch:{ all -> 0x01a0 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01a0 }
            r7 = 2
            r8 = 28
            switch(r0) {
                case -16: goto L_0x0199;
                case -15: goto L_0x018e;
                case -14: goto L_0x018b;
                case -13: goto L_0x0189;
                case -12: goto L_0x0186;
                case -11: goto L_0x017a;
                case -10: goto L_0x016b;
                case -9: goto L_0x0163;
                case -8: goto L_0x0160;
                case -7: goto L_0x015d;
                case -6: goto L_0x0146;
                case -5: goto L_0x013e;
                case -4: goto L_0x013c;
                case -3: goto L_0x012d;
                case -2: goto L_0x0125;
                case -1: goto L_0x0122;
                default: goto L_0x0120;
            }     // Catch:{ all -> 0x01a0 }
        L_0x0120:
            goto L_0x019d
        L_0x0122:
            r7 = 12
            goto L_0x010c
        L_0x0125:
            r1.getMax(r7)     // Catch:{ all -> 0x01a0 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a0 }
            o.AppPreDownloadManager$2 r0 = (o.AppPreDownloadManager.AnonymousClass2) r0     // Catch:{ all -> 0x01a0 }
            return r0
        L_0x012d:
            r1.getMax(r12)     // Catch:{ all -> 0x01a0 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a0 }
            r7 = 27
            if (r0 == r7) goto L_0x0139
            r7 = 45
            goto L_0x010c
        L_0x0139:
            r0 = 7
            r7 = 7
            goto L_0x010c
        L_0x013c:
            r7 = 3
            goto L_0x010c
        L_0x013e:
            r1.getMax(r7)     // Catch:{ all -> 0x01a0 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a0 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01a0 }
            throw r0     // Catch:{ all -> 0x01a0 }
        L_0x0146:
            r1.length = r5     // Catch:{ all -> 0x01a0 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a0 }
            r0 = 5
            r1.getMax(r0)     // Catch:{ all -> 0x01a0 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a0 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01a0 }
            o.AppPreDownloadManager$2 r0 = r0.FastBitmap$CoordinateSystem     // Catch:{ all -> 0x01a0 }
            r1.isInside = r0     // Catch:{ all -> 0x01a0 }
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x01a0 }
            goto L_0x019d
        L_0x015d:
            r7 = 53
            goto L_0x010c
        L_0x0160:
            r7 = 17
            goto L_0x010c
        L_0x0163:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01a0 }
            r1.length = r0     // Catch:{ all -> 0x01a0 }
            r1.getMax(r15)     // Catch:{ all -> 0x01a0 }
            goto L_0x019d
        L_0x016b:
            r1.length = r5     // Catch:{ all -> 0x01a0 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a0 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x01a0 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a0 }
            onNavigationEvent = r0     // Catch:{ all -> 0x01a0 }
            goto L_0x019d
        L_0x017a:
            r1.getMax(r8)     // Catch:{ all -> 0x01a0 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a0 }
            if (r0 != 0) goto L_0x019d
            r0 = 44
            r7 = 44
            goto L_0x010c
        L_0x0186:
            r7 = 50
            goto L_0x010c
        L_0x0189:
            r7 = 4
            goto L_0x010c
        L_0x018b:
            r7 = 1
            goto L_0x010c
        L_0x018e:
            r1.getMax(r8)     // Catch:{ all -> 0x01a0 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a0 }
            if (r0 != 0) goto L_0x019d
            r7 = 73
            goto L_0x010c
        L_0x0199:
            r7 = 48
            goto L_0x010c
        L_0x019d:
            r7 = r13
            goto L_0x010c
        L_0x01a0:
            r0 = move-exception
            r7 = 9
            r5 = 52
            if (r13 < r7) goto L_0x01b3
            if (r13 > r11) goto L_0x01b3
            r3 = 49
            r3 = 48
            r4 = 53
            r7 = 49
            goto L_0x0280
        L_0x01b3:
            r7 = 970(0x3ca, float:1.359E-42)
            short r7 = (short) r7
            byte[] r18 = getMax
            byte r8 = r18[r10]
            byte r8 = (byte) r8
            java.lang.String r7 = setMin(r2, r7, r8)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x01d4
            if (r13 < r15) goto L_0x01d4
            if (r13 > r11) goto L_0x01d4
        L_0x01cd:
            r3 = 48
            r4 = 53
        L_0x01d1:
            r7 = 6
            goto L_0x0280
        L_0x01d4:
            r7 = 97
            short r7 = (short) r7
            r8 = 976(0x3d0, float:1.368E-42)
            short r8 = (short) r8
            byte[] r15 = getMax
            byte r15 = r15[r10]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r7, r8, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            if (r15 == 0) goto L_0x01f9
            if (r13 < r4) goto L_0x01f9
            if (r13 > r3) goto L_0x01f9
            r3 = 48
        L_0x01f3:
            r4 = 53
        L_0x01f5:
            r7 = 52
            goto L_0x0280
        L_0x01f9:
            byte[] r3 = getMax
            r15 = 41
            byte r15 = r3[r15]
            short r15 = (short) r15
            r4 = 973(0x3cd, float:1.363E-42)
            short r4 = (short) r4
            byte r3 = r3[r10]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r15, r4, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x021b
            r3 = 39
            if (r13 < r3) goto L_0x021b
            if (r13 > r14) goto L_0x021b
            goto L_0x01cd
        L_0x021b:
            byte[] r3 = getMax
            byte r3 = r3[r10]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r7, r8, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0237
            r3 = 46
            if (r13 < r3) goto L_0x0237
            r3 = 48
            if (r13 > r3) goto L_0x0239
            goto L_0x01f3
        L_0x0237:
            r3 = 48
        L_0x0239:
            r4 = 5427(0x1533, float:7.605E-42)
            short r4 = (short) r4
            r7 = 978(0x3d2, float:1.37E-42)
            short r7 = (short) r7
            byte[] r8 = getMax
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r4, r7, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r7 = 74
            if (r4 == 0) goto L_0x025b
            r4 = 53
            if (r13 < r4) goto L_0x025d
            if (r13 > r7) goto L_0x025d
            goto L_0x01f5
        L_0x025b:
            r4 = 53
        L_0x025d:
            byte[] r8 = getMax
            r14 = 5474(0x1562, float:7.671E-42)
            byte r14 = r8[r14]
            short r14 = (short) r14
            r15 = 969(0x3c9, float:1.358E-42)
            short r15 = (short) r15
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r14, r15, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x028a
            r8 = 69
            if (r13 < r8) goto L_0x028a
            if (r13 > r7) goto L_0x028a
            goto L_0x01d1
        L_0x0280:
            r1.isInside = r0
            r1.getMax(r5)
            r4 = 17
            r5 = 1
            goto L_0x010c
        L_0x028a:
            throw r0
        L_0x028b:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0293
            throw r1
        L_0x0293:
            goto L_0x0295
        L_0x0294:
            throw r0
        L_0x0295:
            goto L_0x0294
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMax(o.onPageScrollStateChanged):o.AppPreDownloadManager$2");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ java.lang.Boolean getMin(o.onPageScrollStateChanged r14, java.lang.Boolean r15) {
        /*
            o.setLayoutDirection r0 = new o.setLayoutDirection
            r0.<init>((java.lang.Object) r14, (java.lang.Object) r15)
            r14 = 1408(0x580, float:1.973E-42)
            short r14 = (short) r14
            r15 = 865(0x361, float:1.212E-42)
            short r15 = (short) r15
            r1 = 73
            byte r1 = (byte) r1
            java.lang.String r14 = setMin(r14, r15, r1)
            r15 = 5452(0x154c, float:7.64E-42)
            short r15 = (short) r15
            r1 = 1003(0x3eb, float:1.406E-42)
            short r1 = (short) r1
            r2 = r1 & 94
            byte r2 = (byte) r2
            java.lang.String r15 = setMin(r15, r1, r2)
            r1 = 1
            java.lang.Object[] r2 = new java.lang.Object[r1]     // Catch:{ all -> 0x0218 }
            r3 = 0
            r2[r3] = r15     // Catch:{ all -> 0x0218 }
            r15 = 1994(0x7ca, float:2.794E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0218 }
            r4 = 988(0x3dc, float:1.384E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0218 }
            byte[] r5 = getMax     // Catch:{ all -> 0x0218 }
            r6 = 4873(0x1309, float:6.829E-42)
            byte r5 = r5[r6]     // Catch:{ all -> 0x0218 }
            byte r5 = (byte) r5     // Catch:{ all -> 0x0218 }
            java.lang.String r5 = setMin(r15, r4, r5)     // Catch:{ all -> 0x0218 }
            java.lang.Class r5 = java.lang.Class.forName(r5)     // Catch:{ all -> 0x0218 }
            r7 = 1028(0x404, float:1.44E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0218 }
            r8 = 999(0x3e7, float:1.4E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0218 }
            byte[] r9 = getMax     // Catch:{ all -> 0x0218 }
            r10 = 145(0x91, float:2.03E-43)
            byte r9 = r9[r10]     // Catch:{ all -> 0x0218 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0218 }
            java.lang.String r7 = setMin(r7, r8, r9)     // Catch:{ all -> 0x0218 }
            java.lang.Class[] r8 = new java.lang.Class[r1]     // Catch:{ all -> 0x0218 }
            byte[] r9 = getMax     // Catch:{ all -> 0x0218 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x0218 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0218 }
            java.lang.String r9 = setMin(r15, r4, r9)     // Catch:{ all -> 0x0218 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0218 }
            r8[r3] = r9     // Catch:{ all -> 0x0218 }
            java.lang.reflect.Method r5 = r5.getMethod(r7, r8)     // Catch:{ all -> 0x0218 }
            java.lang.Object r14 = r5.invoke(r14, r2)     // Catch:{ all -> 0x0218 }
            java.lang.Object[] r14 = (java.lang.Object[]) r14     // Catch:{ all -> 0x0218 }
            int r2 = r14.length
            int[] r2 = new int[r2]
            r5 = 0
        L_0x006a:
            int r7 = r14.length
            r8 = 35
            if (r5 >= r7) goto L_0x0101
            r7 = r14[r5]
            java.lang.Object[] r9 = new java.lang.Object[r1]     // Catch:{ all -> 0x00f8 }
            r9[r3] = r7     // Catch:{ all -> 0x00f8 }
            byte[] r7 = getMax     // Catch:{ all -> 0x00f8 }
            byte r7 = r7[r3]     // Catch:{ all -> 0x00f8 }
            int r7 = r7 + r1
            short r7 = (short) r7     // Catch:{ all -> 0x00f8 }
            r10 = r7 | 906(0x38a, float:1.27E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x00f8 }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f8 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00f8 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00f8 }
            java.lang.String r7 = setMin(r7, r10, r11)     // Catch:{ all -> 0x00f8 }
            java.lang.Class r7 = java.lang.Class.forName(r7)     // Catch:{ all -> 0x00f8 }
            r10 = 3277(0xccd, float:4.592E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x00f8 }
            r11 = 997(0x3e5, float:1.397E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x00f8 }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f8 }
            byte r8 = r12[r8]     // Catch:{ all -> 0x00f8 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x00f8 }
            java.lang.String r8 = setMin(r10, r11, r8)     // Catch:{ all -> 0x00f8 }
            java.lang.Class[] r10 = new java.lang.Class[r1]     // Catch:{ all -> 0x00f8 }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f8 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00f8 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00f8 }
            java.lang.String r11 = setMin(r15, r4, r11)     // Catch:{ all -> 0x00f8 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f8 }
            r10[r3] = r11     // Catch:{ all -> 0x00f8 }
            java.lang.reflect.Method r7 = r7.getMethod(r8, r10)     // Catch:{ all -> 0x00f8 }
            r8 = 0
            java.lang.Object r7 = r7.invoke(r8, r9)     // Catch:{ all -> 0x00f8 }
            byte[] r9 = getMax     // Catch:{ all -> 0x00ef }
            byte r9 = r9[r3]     // Catch:{ all -> 0x00ef }
            int r9 = r9 + r1
            short r9 = (short) r9     // Catch:{ all -> 0x00ef }
            r10 = r9 | 906(0x38a, float:1.27E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x00ef }
            byte[] r11 = getMax     // Catch:{ all -> 0x00ef }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00ef }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00ef }
            java.lang.String r9 = setMin(r9, r10, r11)     // Catch:{ all -> 0x00ef }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x00ef }
            r10 = 3283(0xcd3, float:4.6E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x00ef }
            r11 = 996(0x3e4, float:1.396E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x00ef }
            byte[] r12 = getMax     // Catch:{ all -> 0x00ef }
            r13 = 76
            byte r12 = r12[r13]     // Catch:{ all -> 0x00ef }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00ef }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x00ef }
            java.lang.reflect.Method r9 = r9.getMethod(r10, r8)     // Catch:{ all -> 0x00ef }
            java.lang.Object r7 = r9.invoke(r7, r8)     // Catch:{ all -> 0x00ef }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00ef }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00ef }
            r2[r5] = r7
            int r5 = r5 + 1
            goto L_0x006a
        L_0x00ef:
            r14 = move-exception
            java.lang.Throwable r15 = r14.getCause()
            if (r15 == 0) goto L_0x00f7
            throw r15
        L_0x00f7:
            throw r14
        L_0x00f8:
            r14 = move-exception
            java.lang.Throwable r15 = r14.getCause()
            if (r15 == 0) goto L_0x0100
            throw r15
        L_0x0100:
            throw r14
        L_0x0101:
            r14 = 20
            r15 = 3
        L_0x0104:
            int r4 = r3 + 1
            r5 = 2
            r3 = r2[r3]     // Catch:{ all -> 0x0181 }
            int r3 = r0.getMax(r3)     // Catch:{ all -> 0x0181 }
            r7 = 4
            r9 = 25
            switch(r3) {
                case -13: goto L_0x017d;
                case -12: goto L_0x017a;
                case -11: goto L_0x0163;
                case -10: goto L_0x015b;
                case -9: goto L_0x0159;
                case -8: goto L_0x0156;
                case -7: goto L_0x0153;
                case -6: goto L_0x0147;
                case -5: goto L_0x013a;
                case -4: goto L_0x0130;
                case -3: goto L_0x0128;
                case -2: goto L_0x0118;
                case -1: goto L_0x0115;
                default: goto L_0x0113;
            }     // Catch:{ all -> 0x0181 }
        L_0x0113:
            goto L_0x017f
        L_0x0115:
            r3 = 32
            goto L_0x0104
        L_0x0118:
            r0.getMax(r8)     // Catch:{ all -> 0x0181 }
            int r3 = r0.setMax     // Catch:{ all -> 0x0181 }
            if (r3 == 0) goto L_0x0125
            if (r3 == r1) goto L_0x0122
            goto L_0x0125
        L_0x0122:
            r3 = 37
            goto L_0x0104
        L_0x0125:
            r3 = 25
            goto L_0x0104
        L_0x0128:
            r0.getMax(r5)     // Catch:{ all -> 0x0181 }
            java.lang.Object r3 = r0.IsOverlapping     // Catch:{ all -> 0x0181 }
            java.lang.Throwable r3 = (java.lang.Throwable) r3     // Catch:{ all -> 0x0181 }
            throw r3     // Catch:{ all -> 0x0181 }
        L_0x0130:
            int r3 = onNavigationEvent     // Catch:{ all -> 0x0181 }
            r0.length = r3     // Catch:{ all -> 0x0181 }
            r3 = 8
            r0.getMax(r3)     // Catch:{ all -> 0x0181 }
            goto L_0x017f
        L_0x013a:
            r0.length = r1     // Catch:{ all -> 0x0181 }
            r0.getMax(r7)     // Catch:{ all -> 0x0181 }
            r0.getMax(r9)     // Catch:{ all -> 0x0181 }
            int r3 = r0.setMax     // Catch:{ all -> 0x0181 }
            Grayscale$Algorithm = r3     // Catch:{ all -> 0x0181 }
            goto L_0x017f
        L_0x0147:
            r3 = 34
            r0.getMax(r3)     // Catch:{ all -> 0x0181 }
            int r3 = r0.setMax     // Catch:{ all -> 0x0181 }
            if (r3 != 0) goto L_0x017f
            r3 = 19
            goto L_0x0104
        L_0x0153:
            r3 = 30
            goto L_0x0104
        L_0x0156:
            r3 = 20
            goto L_0x0104
        L_0x0159:
            r3 = 1
            goto L_0x0104
        L_0x015b:
            r0.getMax(r5)     // Catch:{ all -> 0x0181 }
            java.lang.Object r3 = r0.IsOverlapping     // Catch:{ all -> 0x0181 }
            java.lang.Boolean r3 = (java.lang.Boolean) r3     // Catch:{ all -> 0x0181 }
            return r3
        L_0x0163:
            r0.length = r5     // Catch:{ all -> 0x0181 }
            r0.getMax(r7)     // Catch:{ all -> 0x0181 }
            r3 = 5
            r0.getMax(r3)     // Catch:{ all -> 0x0181 }
            java.lang.Object r7 = r0.IsOverlapping     // Catch:{ all -> 0x0181 }
            o.onPageScrollStateChanged r7 = (o.onPageScrollStateChanged) r7     // Catch:{ all -> 0x0181 }
            r0.getMax(r3)     // Catch:{ all -> 0x0181 }
            java.lang.Object r3 = r0.IsOverlapping     // Catch:{ all -> 0x0181 }
            java.lang.Boolean r3 = (java.lang.Boolean) r3     // Catch:{ all -> 0x0181 }
            r7.Mean$Arithmetic = r3     // Catch:{ all -> 0x0181 }
            goto L_0x017f
        L_0x017a:
            r3 = 23
            goto L_0x0104
        L_0x017d:
            r3 = 3
            goto L_0x0104
        L_0x017f:
            r3 = r4
            goto L_0x0104
        L_0x0181:
            r3 = move-exception
            byte[] r7 = getMax
            r9 = 41
            byte r10 = r7[r9]
            short r10 = (short) r10
            r11 = 973(0x3cd, float:1.363E-42)
            short r11 = (short) r11
            byte r7 = r7[r6]
            byte r7 = (byte) r7
            java.lang.String r7 = setMin(r10, r11, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r3)
            r10 = 22
            if (r7 == 0) goto L_0x01a4
            if (r4 < r15) goto L_0x01a4
            if (r4 > r14) goto L_0x01a4
            goto L_0x020d
        L_0x01a4:
            byte[] r7 = getMax
            byte r12 = r7[r9]
            short r12 = (short) r12
            byte r7 = r7[r6]
            byte r7 = (byte) r7
            java.lang.String r7 = setMin(r12, r11, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r3)
            if (r7 == 0) goto L_0x01c3
            r7 = 14
            if (r4 < r7) goto L_0x01c3
            r7 = 15
            if (r4 > r7) goto L_0x01c3
            goto L_0x020d
        L_0x01c3:
            int r7 = setMin
            r7 = r7 | 2374(0x946, float:3.327E-42)
            short r7 = (short) r7
            r12 = 965(0x3c5, float:1.352E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r6]
            byte r13 = (byte) r13
            java.lang.String r7 = setMin(r7, r12, r13)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r3)
            if (r7 == 0) goto L_0x01e7
            r7 = 27
            if (r4 < r7) goto L_0x01e7
            r7 = 28
            if (r4 > r7) goto L_0x01e7
            goto L_0x020d
        L_0x01e7:
            r7 = 40
            r12 = 43
            if (r4 < r7) goto L_0x01f1
            if (r4 > r12) goto L_0x01f1
            r10 = 2
            goto L_0x020d
        L_0x01f1:
            byte[] r5 = getMax
            byte r7 = r5[r9]
            short r7 = (short) r7
            byte r5 = r5[r6]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r7, r11, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r3)
            if (r5 == 0) goto L_0x0217
            r5 = 39
            if (r4 < r5) goto L_0x0217
            if (r4 > r12) goto L_0x0217
        L_0x020d:
            r0.isInside = r3
            r3 = 52
            r0.getMax(r3)
            r3 = r10
            goto L_0x0104
        L_0x0217:
            throw r3
        L_0x0218:
            r14 = move-exception
            java.lang.Throwable r15 = r14.getCause()
            if (r15 == 0) goto L_0x0220
            throw r15
        L_0x0220:
            goto L_0x0222
        L_0x0221:
            throw r14
        L_0x0222:
            goto L_0x0221
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMin(o.onPageScrollStateChanged, java.lang.Boolean):java.lang.Boolean");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ o.uploadMonitorEvent getMin(o.onPageScrollStateChanged r17) {
        /*
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r0 = r17
            r1.<init>(r0)
            int r0 = setMin
            r0 = r0 | 5447(0x1547, float:7.633E-42)
            short r0 = (short) r0
            r2 = 732(0x2dc, float:1.026E-42)
            short r2 = (short) r2
            r3 = 73
            byte r3 = (byte) r3
            java.lang.String r0 = setMin(r0, r2, r3)
            r2 = 5452(0x154c, float:7.64E-42)
            short r2 = (short) r2
            r3 = 1003(0x3eb, float:1.406E-42)
            short r3 = (short) r3
            r4 = r3 & 94
            byte r4 = (byte) r4
            java.lang.String r3 = setMin(r2, r3, r4)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0284 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x0284 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x0284 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0284 }
            byte[] r8 = getMax     // Catch:{ all -> 0x0284 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x0284 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0284 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x0284 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0284 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x0284 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0284 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0284 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0284 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0284 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x0284 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x0284 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0284 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x0284 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0284 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x0284 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0284 }
            r11[r6] = r12     // Catch:{ all -> 0x0284 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x0284 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x0284 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0284 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006e:
            int r10 = r0.length
            r11 = 76
            r12 = 35
            if (r8 >= r10) goto L_0x0105
            r10 = r0[r8]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fc }
            r13[r6] = r10     // Catch:{ all -> 0x00fc }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fc }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fc }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fc }
            r14 = r10 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fc }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fc }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fc }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fc }
            java.lang.String r10 = setMin(r10, r14, r15)     // Catch:{ all -> 0x00fc }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fc }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fc }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fc }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fc }
            byte r12 = r16[r12]     // Catch:{ all -> 0x00fc }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fc }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x00fc }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fc }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fc }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fc }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fc }
            java.lang.String r15 = setMin(r3, r7, r15)     // Catch:{ all -> 0x00fc }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fc }
            r14[r6] = r15     // Catch:{ all -> 0x00fc }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r14)     // Catch:{ all -> 0x00fc }
            r12 = 0
            java.lang.Object r10 = r10.invoke(r12, r13)     // Catch:{ all -> 0x00fc }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f3 }
            byte r13 = r13[r6]     // Catch:{ all -> 0x00f3 }
            int r13 = r13 + r4
            short r13 = (short) r13     // Catch:{ all -> 0x00f3 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f3 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f3 }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00f3 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f3 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f3 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f3 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f3 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f3 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f3 }
            byte r11 = r16[r11]     // Catch:{ all -> 0x00f3 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00f3 }
            java.lang.String r11 = setMin(r14, r15, r11)     // Catch:{ all -> 0x00f3 }
            java.lang.reflect.Method r11 = r13.getMethod(r11, r12)     // Catch:{ all -> 0x00f3 }
            java.lang.Object r10 = r11.invoke(r10, r12)     // Catch:{ all -> 0x00f3 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f3 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f3 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006e
        L_0x00f3:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fb
            throw r1
        L_0x00fb:
            throw r0
        L_0x00fc:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0104
            throw r1
        L_0x0104:
            throw r0
        L_0x0105:
            r3 = 15
            r7 = 49
            r8 = 52
            r10 = 2
        L_0x010c:
            int r13 = r6 + 1
            r0 = r5[r6]     // Catch:{ all -> 0x01bd }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01bd }
            r6 = 8
            r14 = 25
            r15 = 34
            r11 = 4
            switch(r0) {
                case -18: goto L_0x01b6;
                case -17: goto L_0x01aa;
                case -16: goto L_0x019d;
                case -15: goto L_0x0198;
                case -14: goto L_0x0195;
                case -13: goto L_0x0192;
                case -12: goto L_0x0184;
                case -11: goto L_0x0177;
                case -10: goto L_0x016f;
                case -9: goto L_0x016c;
                case -8: goto L_0x0155;
                case -7: goto L_0x013f;
                case -6: goto L_0x013b;
                case -5: goto L_0x0133;
                case -4: goto L_0x012f;
                case -3: goto L_0x012b;
                case -2: goto L_0x0123;
                case -1: goto L_0x0120;
                default: goto L_0x011e;
            }     // Catch:{ all -> 0x01bd }
        L_0x011e:
            goto L_0x01b8
        L_0x0120:
            r6 = 2
            goto L_0x01b9
        L_0x0123:
            r1.getMax(r10)     // Catch:{ all -> 0x01bd }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01bd }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01bd }
            throw r0     // Catch:{ all -> 0x01bd }
        L_0x012b:
            r6 = 52
            goto L_0x01b9
        L_0x012f:
            r6 = 12
            goto L_0x01b9
        L_0x0133:
            r1.getMax(r10)     // Catch:{ all -> 0x01bd }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01bd }
            o.uploadMonitorEvent r0 = (o.uploadMonitorEvent) r0     // Catch:{ all -> 0x01bd }
            return r0
        L_0x013b:
            r6 = 11
            goto L_0x01b9
        L_0x013f:
            r1.getMax(r12)     // Catch:{ all -> 0x01bd }
            int r0 = r1.setMax     // Catch:{ all -> 0x01bd }
            r6 = 26
            r11 = 7
            if (r0 == r6) goto L_0x0152
            if (r0 == r15) goto L_0x014c
            goto L_0x0152
        L_0x014c:
            r0 = 46
            r6 = 46
            goto L_0x01b9
        L_0x0152:
            r6 = 7
            goto L_0x01b9
        L_0x0155:
            r1.length = r4     // Catch:{ all -> 0x01bd }
            r1.getMax(r11)     // Catch:{ all -> 0x01bd }
            r0 = 5
            r1.getMax(r0)     // Catch:{ all -> 0x01bd }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01bd }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01bd }
            o.uploadMonitorEvent r0 = r0.hashCode     // Catch:{ all -> 0x01bd }
            r1.isInside = r0     // Catch:{ all -> 0x01bd }
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x01bd }
            goto L_0x01b8
        L_0x016c:
            r6 = 15
            goto L_0x01b9
        L_0x016f:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01bd }
            r1.length = r0     // Catch:{ all -> 0x01bd }
        L_0x0173:
            r1.getMax(r6)     // Catch:{ all -> 0x01bd }
            goto L_0x01b8
        L_0x0177:
            r1.length = r4     // Catch:{ all -> 0x01bd }
            r1.getMax(r11)     // Catch:{ all -> 0x01bd }
            r1.getMax(r14)     // Catch:{ all -> 0x01bd }
            int r0 = r1.setMax     // Catch:{ all -> 0x01bd }
            onNavigationEvent = r0     // Catch:{ all -> 0x01bd }
            goto L_0x01b8
        L_0x0184:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x01bd }
            int r0 = r1.setMax     // Catch:{ all -> 0x01bd }
            if (r0 != 0) goto L_0x01b8
            r0 = 45
            r6 = 45
            goto L_0x01b9
        L_0x0192:
            r6 = 9
            goto L_0x01b9
        L_0x0195:
            r6 = 49
            goto L_0x01b9
        L_0x0198:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01bd }
            r1.length = r0     // Catch:{ all -> 0x01bd }
            goto L_0x0173
        L_0x019d:
            r1.length = r4     // Catch:{ all -> 0x01bd }
            r1.getMax(r11)     // Catch:{ all -> 0x01bd }
            r1.getMax(r14)     // Catch:{ all -> 0x01bd }
            int r0 = r1.setMax     // Catch:{ all -> 0x01bd }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01bd }
            goto L_0x01b8
        L_0x01aa:
            r1.getMax(r15)     // Catch:{ all -> 0x01bd }
            int r0 = r1.setMax     // Catch:{ all -> 0x01bd }
            if (r0 != 0) goto L_0x01b8
            r0 = 80
            r6 = 80
            goto L_0x01b9
        L_0x01b6:
            r6 = 6
            goto L_0x01b9
        L_0x01b8:
            r6 = r13
        L_0x01b9:
            r11 = 76
            goto L_0x010c
        L_0x01bd:
            r0 = move-exception
            int r6 = setMin
            r6 = r6 | 7559(0x1d87, float:1.0592E-41)
            short r6 = (short) r6
            r11 = 975(0x3cf, float:1.366E-42)
            short r11 = (short) r11
            byte[] r14 = getMax
            byte r14 = r14[r9]
            byte r14 = (byte) r14
            java.lang.String r6 = setMin(r6, r11, r14)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r11 = 51
            r14 = 81
            if (r6 == 0) goto L_0x01ea
            r6 = 13
            if (r13 < r6) goto L_0x01ea
            r6 = 14
            if (r13 > r6) goto L_0x01ea
        L_0x01e5:
            r3 = 76
            r6 = 1
            goto L_0x027a
        L_0x01ea:
            r6 = 970(0x3ca, float:1.359E-42)
            short r6 = (short) r6
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r6 = setMin(r2, r6, r15)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0207
            if (r13 < r3) goto L_0x0207
            r6 = 16
            if (r13 > r6) goto L_0x0207
            goto L_0x01e5
        L_0x0207:
            r6 = 5397(0x1515, float:7.563E-42)
            short r6 = (short) r6
            r15 = 973(0x3cd, float:1.363E-42)
            short r15 = (short) r15
            byte[] r16 = getMax
            byte r3 = r16[r9]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r6, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x022d
            r3 = 40
            if (r13 < r3) goto L_0x022d
            r3 = 41
            if (r13 > r3) goto L_0x022d
            r3 = 76
        L_0x022a:
            r6 = 51
            goto L_0x027a
        L_0x022d:
            r3 = 47
            if (r13 < r3) goto L_0x0238
            if (r13 > r7) goto L_0x0238
            r3 = 76
            r6 = 81
            goto L_0x027a
        L_0x0238:
            int r3 = setMin
            r3 = r3 | 2374(0x946, float:3.327E-42)
            short r3 = (short) r3
            r6 = 965(0x3c5, float:1.352E-42)
            short r6 = (short) r6
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r3 = setMin(r3, r6, r15)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0258
            if (r13 < r8) goto L_0x0258
            if (r13 > r14) goto L_0x0258
            goto L_0x01e5
        L_0x0258:
            r3 = 5485(0x156d, float:7.686E-42)
            short r3 = (short) r3
            r6 = 985(0x3d9, float:1.38E-42)
            short r6 = (short) r6
            byte[] r14 = getMax
            byte r14 = r14[r9]
            byte r14 = (byte) r14
            java.lang.String r3 = setMin(r3, r6, r14)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0283
            r3 = 76
            if (r13 < r3) goto L_0x0283
            r6 = 77
            if (r13 > r6) goto L_0x0283
            goto L_0x022a
        L_0x027a:
            r1.isInside = r0
            r1.getMax(r8)
            r3 = 15
            goto L_0x01b9
        L_0x0283:
            throw r0
        L_0x0284:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x028c
            throw r1
        L_0x028c:
            goto L_0x028e
        L_0x028d:
            throw r0
        L_0x028e:
            goto L_0x028d
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMin(o.onPageScrollStateChanged):o.uploadMonitorEvent");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ o.NetworkUtils.NetworkDetailCallback length(o.onPageScrollStateChanged r17) {
        /*
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r0 = r17
            r1.<init>(r0)
            r2 = 4873(0x1309, float:6.829E-42)
            short r0 = (short) r2
            r3 = 786(0x312, float:1.101E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x02a1 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x02a1 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x02a1 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x02a1 }
            byte[] r8 = getMax     // Catch:{ all -> 0x02a1 }
            byte r8 = r8[r2]     // Catch:{ all -> 0x02a1 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x02a1 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x02a1 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x02a1 }
            r9 = 1028(0x404, float:1.44E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02a1 }
            r10 = 999(0x3e7, float:1.4E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x02a1 }
            byte[] r11 = getMax     // Catch:{ all -> 0x02a1 }
            r12 = 145(0x91, float:2.03E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x02a1 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x02a1 }
            java.lang.String r9 = setMin(r9, r10, r11)     // Catch:{ all -> 0x02a1 }
            java.lang.Class[] r10 = new java.lang.Class[r4]     // Catch:{ all -> 0x02a1 }
            byte[] r11 = getMax     // Catch:{ all -> 0x02a1 }
            byte r11 = r11[r2]     // Catch:{ all -> 0x02a1 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x02a1 }
            java.lang.String r11 = setMin(r3, r7, r11)     // Catch:{ all -> 0x02a1 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x02a1 }
            r10[r6] = r11     // Catch:{ all -> 0x02a1 }
            java.lang.reflect.Method r8 = r8.getMethod(r9, r10)     // Catch:{ all -> 0x02a1 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x02a1 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02a1 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006a:
            int r9 = r0.length
            r10 = 35
            if (r8 >= r9) goto L_0x0101
            r9 = r0[r8]
            java.lang.Object[] r11 = new java.lang.Object[r4]     // Catch:{ all -> 0x00f8 }
            r11[r6] = r9     // Catch:{ all -> 0x00f8 }
            byte[] r9 = getMax     // Catch:{ all -> 0x00f8 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x00f8 }
            int r9 = r9 + r4
            short r9 = (short) r9     // Catch:{ all -> 0x00f8 }
            r12 = r9 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f8 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f8 }
            byte r13 = r13[r2]     // Catch:{ all -> 0x00f8 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00f8 }
            java.lang.String r9 = setMin(r9, r12, r13)     // Catch:{ all -> 0x00f8 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x00f8 }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f8 }
            r13 = 997(0x3e5, float:1.397E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f8 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f8 }
            byte r10 = r14[r10]     // Catch:{ all -> 0x00f8 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x00f8 }
            java.lang.String r10 = setMin(r12, r13, r10)     // Catch:{ all -> 0x00f8 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x00f8 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f8 }
            byte r13 = r13[r2]     // Catch:{ all -> 0x00f8 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00f8 }
            java.lang.String r13 = setMin(r3, r7, r13)     // Catch:{ all -> 0x00f8 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f8 }
            r12[r6] = r13     // Catch:{ all -> 0x00f8 }
            java.lang.reflect.Method r9 = r9.getMethod(r10, r12)     // Catch:{ all -> 0x00f8 }
            r10 = 0
            java.lang.Object r9 = r9.invoke(r10, r11)     // Catch:{ all -> 0x00f8 }
            byte[] r11 = getMax     // Catch:{ all -> 0x00ef }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00ef }
            int r11 = r11 + r4
            short r11 = (short) r11     // Catch:{ all -> 0x00ef }
            r12 = r11 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00ef }
            byte[] r13 = getMax     // Catch:{ all -> 0x00ef }
            byte r13 = r13[r2]     // Catch:{ all -> 0x00ef }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00ef }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x00ef }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00ef }
            r12 = 3283(0xcd3, float:4.6E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00ef }
            r13 = 996(0x3e4, float:1.396E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00ef }
            byte[] r14 = getMax     // Catch:{ all -> 0x00ef }
            r15 = 76
            byte r14 = r14[r15]     // Catch:{ all -> 0x00ef }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00ef }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00ef }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r10)     // Catch:{ all -> 0x00ef }
            java.lang.Object r9 = r11.invoke(r9, r10)     // Catch:{ all -> 0x00ef }
            java.lang.Integer r9 = (java.lang.Integer) r9     // Catch:{ all -> 0x00ef }
            int r9 = r9.intValue()     // Catch:{ all -> 0x00ef }
            r5[r8] = r9
            int r8 = r8 + 1
            goto L_0x006a
        L_0x00ef:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f7
            throw r1
        L_0x00f7:
            throw r0
        L_0x00f8:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0100
            throw r1
        L_0x0100:
            throw r0
        L_0x0101:
            r3 = 46
            r7 = 22
            r8 = 45
            r9 = 15
        L_0x0109:
            int r11 = r6 + 1
            r12 = 8
            r13 = 4
            r0 = r5[r6]     // Catch:{ all -> 0x01ce }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01ce }
            r6 = 25
            r14 = 2
            r15 = 5
            switch(r0) {
                case -19: goto L_0x01c7;
                case -18: goto L_0x01c3;
                case -17: goto L_0x01b4;
                case -16: goto L_0x01a7;
                case -15: goto L_0x01a2;
                case -14: goto L_0x018b;
                case -13: goto L_0x0187;
                case -12: goto L_0x0179;
                case -11: goto L_0x016c;
                case -10: goto L_0x0167;
                case -9: goto L_0x0164;
                case -8: goto L_0x015c;
                case -7: goto L_0x0159;
                case -6: goto L_0x0144;
                case -5: goto L_0x0141;
                case -4: goto L_0x012a;
                case -3: goto L_0x0122;
                case -2: goto L_0x011f;
                case -1: goto L_0x011d;
                default: goto L_0x011b;
            }     // Catch:{ all -> 0x01ce }
        L_0x011b:
            goto L_0x01cb
        L_0x011d:
            r6 = 1
            goto L_0x0109
        L_0x011f:
            r6 = 46
            goto L_0x0109
        L_0x0122:
            r1.getMax(r14)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01ce }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01ce }
            throw r0     // Catch:{ all -> 0x01ce }
        L_0x012a:
            r1.length = r4     // Catch:{ all -> 0x01ce }
            r1.getMax(r13)     // Catch:{ all -> 0x01ce }
            r1.getMax(r15)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01ce }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01ce }
            o.NetworkUtils$NetworkDetailCallback r0 = r0.setMax     // Catch:{ all -> 0x01ce }
            r1.isInside = r0     // Catch:{ all -> 0x01ce }
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0141:
            r6 = 22
            goto L_0x0109
        L_0x0144:
            r1.length = r4     // Catch:{ all -> 0x01ce }
            r1.getMax(r13)     // Catch:{ all -> 0x01ce }
            r1.getMax(r15)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01ce }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01ce }
            r1.length = r0     // Catch:{ all -> 0x01ce }
        L_0x0154:
            r1.getMax(r12)     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0159:
            r6 = 45
            goto L_0x0109
        L_0x015c:
            r1.getMax(r14)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01ce }
            o.NetworkUtils$NetworkDetailCallback r0 = (o.NetworkUtils.NetworkDetailCallback) r0     // Catch:{ all -> 0x01ce }
            return r0
        L_0x0164:
            r6 = 17
            goto L_0x0109
        L_0x0167:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01ce }
            r1.length = r0     // Catch:{ all -> 0x01ce }
            goto L_0x0154
        L_0x016c:
            r1.length = r4     // Catch:{ all -> 0x01ce }
            r1.getMax(r13)     // Catch:{ all -> 0x01ce }
            r1.getMax(r6)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax     // Catch:{ all -> 0x01ce }
            onNavigationEvent = r0     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0179:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax     // Catch:{ all -> 0x01ce }
            if (r0 != 0) goto L_0x01cb
            r0 = 44
            r6 = 44
            goto L_0x0109
        L_0x0187:
            r6 = 19
            goto L_0x0109
        L_0x018b:
            r1.getMax(r10)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax     // Catch:{ all -> 0x01ce }
            r6 = 58
            r11 = 9
            if (r0 == r6) goto L_0x019e
            r6 = 59
            if (r0 == r6) goto L_0x019b
            goto L_0x019e
        L_0x019b:
            r6 = 5
            goto L_0x0109
        L_0x019e:
            r6 = 9
            goto L_0x0109
        L_0x01a2:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01ce }
            r1.length = r0     // Catch:{ all -> 0x01ce }
            goto L_0x0154
        L_0x01a7:
            r1.length = r4     // Catch:{ all -> 0x01ce }
            r1.getMax(r13)     // Catch:{ all -> 0x01ce }
            r1.getMax(r6)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax     // Catch:{ all -> 0x01ce }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x01b4:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax     // Catch:{ all -> 0x01ce }
            if (r0 != 0) goto L_0x01cb
            r0 = 64
            r6 = 64
            goto L_0x0109
        L_0x01c3:
            r6 = 20
            goto L_0x0109
        L_0x01c7:
            r6 = 15
            goto L_0x0109
        L_0x01cb:
            r6 = r11
            goto L_0x0109
        L_0x01ce:
            r0 = move-exception
            r6 = 5427(0x1533, float:7.605E-42)
            short r6 = (short) r6
            r14 = 978(0x3d2, float:1.37E-42)
            short r14 = (short) r14
            byte[] r15 = getMax
            byte r15 = r15[r2]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r6, r14, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            r4 = 65
            if (r15 == 0) goto L_0x01f3
            r15 = 6
            if (r11 < r15) goto L_0x01f3
            r15 = 7
            if (r11 > r15) goto L_0x01f3
        L_0x01f0:
            r6 = 4
            goto L_0x0294
        L_0x01f3:
            r15 = 11
            if (r11 < r15) goto L_0x01fd
            if (r11 > r9) goto L_0x01fd
            r6 = 8
            goto L_0x0294
        L_0x01fd:
            r12 = 5397(0x1515, float:7.563E-42)
            short r12 = (short) r12
            r15 = 973(0x3cd, float:1.363E-42)
            short r15 = (short) r15
            byte[] r16 = getMax
            byte r10 = r16[r2]
            byte r10 = (byte) r10
            java.lang.String r10 = setMin(r12, r15, r10)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x021d
            r10 = 10
            if (r11 < r10) goto L_0x021d
            if (r11 > r9) goto L_0x021d
            goto L_0x01f0
        L_0x021d:
            byte[] r10 = getMax
            byte r10 = r10[r2]
            byte r10 = (byte) r10
            java.lang.String r10 = setMin(r12, r15, r10)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x0237
            if (r11 < r7) goto L_0x0237
            if (r11 > r8) goto L_0x0237
        L_0x0234:
            r6 = 65
            goto L_0x0294
        L_0x0237:
            r10 = 97
            short r10 = (short) r10
            r12 = 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            byte[] r15 = getMax
            byte r15 = r15[r2]
            byte r15 = (byte) r15
            java.lang.String r10 = setMin(r10, r12, r15)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x0257
            r10 = 39
            if (r11 < r10) goto L_0x0257
            if (r11 > r8) goto L_0x0257
            goto L_0x01f0
        L_0x0257:
            int r10 = setMin
            r10 = r10 | 7559(0x1d87, float:1.0592E-41)
            short r10 = (short) r10
            r12 = 975(0x3cf, float:1.366E-42)
            short r12 = (short) r12
            byte[] r15 = getMax
            byte r15 = r15[r2]
            byte r15 = (byte) r15
            java.lang.String r10 = setMin(r10, r12, r15)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x0278
            if (r11 < r3) goto L_0x0278
            if (r11 > r4) goto L_0x0278
            goto L_0x01f0
        L_0x0278:
            byte[] r10 = getMax
            byte r10 = r10[r2]
            byte r10 = (byte) r10
            java.lang.String r6 = setMin(r6, r14, r10)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x02a0
            r6 = 60
            if (r11 < r6) goto L_0x02a0
            r6 = 61
            if (r11 > r6) goto L_0x02a0
            goto L_0x0234
        L_0x0294:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r4 = 1
            r10 = 35
            goto L_0x0109
        L_0x02a0:
            throw r0
        L_0x02a1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x02a9
            throw r1
        L_0x02a9:
            goto L_0x02ab
        L_0x02aa:
            throw r0
        L_0x02ab:
            goto L_0x02aa
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.length(o.onPageScrollStateChanged):o.NetworkUtils$NetworkDetailCallback");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x034a, code lost:
        if (r13 <= 64) goto L_0x0262;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x012d, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x0163, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:99:0x02d0, code lost:
        if (r13 <= 56) goto L_0x0289;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.FragmentStateAdapter$2<o.AppPreDownloadManager.AnonymousClass3> setMax(int r21) {
        /*
            r20 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r20
            r0 = r21
            r1.<init>((java.lang.Object) r2, (int) r0)
            r0 = 1546(0x60a, float:2.166E-42)
            short r0 = (short) r0
            int r3 = setMin
            r3 = r3 | 515(0x203, float:7.22E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x039c }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x039c }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x039c }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x039c }
            byte[] r9 = getMax     // Catch:{ all -> 0x039c }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x039c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x039c }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x039c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x039c }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x039c }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x039c }
            byte[] r13 = getMax     // Catch:{ all -> 0x039c }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x039c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x039c }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x039c }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x039c }
            byte[] r13 = getMax     // Catch:{ all -> 0x039c }
            byte r13 = r13[r10]     // Catch:{ all -> 0x039c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x039c }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x039c }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x039c }
            r12[r7] = r13     // Catch:{ all -> 0x039c }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x039c }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x039c }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x039c }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x0070:
            int r11 = r0.length
            if (r9 >= r11) goto L_0x0108
            r11 = r0[r9]
            java.lang.Object[] r12 = new java.lang.Object[r5]     // Catch:{ all -> 0x00ff }
            r12[r7] = r11     // Catch:{ all -> 0x00ff }
            byte[] r11 = getMax     // Catch:{ all -> 0x00ff }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00ff }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00ff }
            r13 = r11 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00ff }
            byte[] r14 = getMax     // Catch:{ all -> 0x00ff }
            byte r14 = r14[r10]     // Catch:{ all -> 0x00ff }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00ff }
            java.lang.String r11 = setMin(r11, r13, r14)     // Catch:{ all -> 0x00ff }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00ff }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00ff }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00ff }
            byte[] r15 = getMax     // Catch:{ all -> 0x00ff }
            r16 = 35
            byte r15 = r15[r16]     // Catch:{ all -> 0x00ff }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00ff }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00ff }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x00ff }
            byte[] r15 = getMax     // Catch:{ all -> 0x00ff }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00ff }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00ff }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00ff }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00ff }
            r14[r7] = r15     // Catch:{ all -> 0x00ff }
            java.lang.reflect.Method r11 = r11.getMethod(r13, r14)     // Catch:{ all -> 0x00ff }
            r13 = 0
            java.lang.Object r11 = r11.invoke(r13, r12)     // Catch:{ all -> 0x00ff }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f6 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x00f6 }
            int r12 = r12 + r5
            short r12 = (short) r12     // Catch:{ all -> 0x00f6 }
            r14 = r12 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f6 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f6 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f6 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f6 }
            java.lang.String r12 = setMin(r12, r14, r15)     // Catch:{ all -> 0x00f6 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f6 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f6 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f6 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f6 }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00f6 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00f6 }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00f6 }
            java.lang.reflect.Method r7 = r12.getMethod(r7, r13)     // Catch:{ all -> 0x00f6 }
            java.lang.Object r7 = r7.invoke(r11, r13)     // Catch:{ all -> 0x00f6 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00f6 }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00f6 }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x0070
        L_0x00f6:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fe
            throw r1
        L_0x00fe:
            throw r0
        L_0x00ff:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0107
            throw r1
        L_0x0107:
            throw r0
        L_0x0108:
            r9 = 28
            r12 = 2
            r0 = 0
        L_0x010c:
            int r13 = r0 + 1
            r14 = 34
            r0 = r6[r0]     // Catch:{ all -> 0x0240 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x0240 }
            r15 = 8
            r4 = 25
            r11 = 88
            r7 = 5
            r8 = 4
            switch(r0) {
                case -31: goto L_0x0235;
                case -30: goto L_0x0231;
                case -29: goto L_0x022d;
                case -28: goto L_0x0229;
                case -27: goto L_0x0213;
                case -26: goto L_0x0210;
                case -25: goto L_0x0205;
                case -24: goto L_0x01fd;
                case -23: goto L_0x01f9;
                case -22: goto L_0x01f5;
                case -21: goto L_0x01ea;
                case -20: goto L_0x01e7;
                case -19: goto L_0x01bf;
                case -18: goto L_0x01ae;
                case -17: goto L_0x019d;
                case -16: goto L_0x0199;
                case -15: goto L_0x0195;
                case -14: goto L_0x018a;
                case -13: goto L_0x017c;
                case -12: goto L_0x0177;
                case -11: goto L_0x0174;
                case -10: goto L_0x0168;
                case -9: goto L_0x0153;
                case -8: goto L_0x0150;
                case -7: goto L_0x014d;
                case -6: goto L_0x014a;
                case -5: goto L_0x0140;
                case -4: goto L_0x0132;
                case -3: goto L_0x0129;
                case -2: goto L_0x0126;
                case -1: goto L_0x0123;
                default: goto L_0x0121;
            }     // Catch:{ all -> 0x0240 }
        L_0x0121:
            goto L_0x023d
        L_0x0123:
            r0 = 117(0x75, float:1.64E-43)
            goto L_0x010c
        L_0x0126:
            r0 = 32
            goto L_0x010c
        L_0x0129:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0240 }
            r1.length = r0     // Catch:{ all -> 0x0240 }
        L_0x012d:
            r1.getMax(r15)     // Catch:{ all -> 0x0240 }
            goto L_0x023d
        L_0x0132:
            r1.length = r5     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r4)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0240 }
            goto L_0x023d
        L_0x0140:
            r1.getMax(r9)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            if (r0 != 0) goto L_0x023d
            r0 = 27
            goto L_0x010c
        L_0x014a:
            r0 = 127(0x7f, float:1.78E-43)
            goto L_0x010c
        L_0x014d:
            r0 = 115(0x73, float:1.61E-43)
            goto L_0x010c
        L_0x0150:
            r0 = 121(0x79, float:1.7E-43)
            goto L_0x010c
        L_0x0153:
            r1.length = r5     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0240 }
            o.FragmentStateAdapter$2<o.AppPreDownloadManager$3> r0 = r0.valueOf     // Catch:{ all -> 0x0240 }
            r1.isInside = r0     // Catch:{ all -> 0x0240 }
        L_0x0163:
            r1.getMax(r11)     // Catch:{ all -> 0x0240 }
            goto L_0x023d
        L_0x0168:
            r0 = 219(0xdb, float:3.07E-43)
            r1.getMax(r0)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            if (r0 != 0) goto L_0x023d
            r0 = 36
            goto L_0x010c
        L_0x0174:
            r0 = 56
            goto L_0x010c
        L_0x0177:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0240 }
            r1.length = r0     // Catch:{ all -> 0x0240 }
            goto L_0x012d
        L_0x017c:
            r1.length = r5     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r4)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0240 }
            goto L_0x023d
        L_0x018a:
            r1.getMax(r14)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            if (r0 != 0) goto L_0x023d
            r0 = 55
            goto L_0x010c
        L_0x0195:
            r0 = 89
            goto L_0x010c
        L_0x0199:
            r0 = 28
            goto L_0x010c
        L_0x019d:
            r1.length = r5     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0240 }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x0240 }
            r1.isInside = r0     // Catch:{ all -> 0x0240 }
            goto L_0x0163
        L_0x01ae:
            r1.length = r5     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0240 }
            o.isUserInputEnabled$length r0 = r0.IsOverlapping     // Catch:{ all -> 0x0240 }
            r1.isInside = r0     // Catch:{ all -> 0x0240 }
            goto L_0x0163
        L_0x01bf:
            o.onPageScrollStateChanged$10 r0 = new o.onPageScrollStateChanged$10     // Catch:{ all -> 0x0240 }
            r1.length = r8     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r8 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.onPageScrollStateChanged r8 = (o.onPageScrollStateChanged) r8     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r15 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.copyBackForwardList r15 = (o.copyBackForwardList) r15     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r7 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.isUserInputEnabled$length r7 = (o.isUserInputEnabled.length) r7     // Catch:{ all -> 0x0240 }
            r1.getMax(r4)     // Catch:{ all -> 0x0240 }
            int r4 = r1.setMax     // Catch:{ all -> 0x0240 }
            r0.<init>(r15, r7, r4)     // Catch:{ all -> 0x0240 }
            r1.isInside = r0     // Catch:{ all -> 0x0240 }
            goto L_0x0163
        L_0x01e7:
            r0 = 2
            goto L_0x010c
        L_0x01ea:
            r1.getMax(r14)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            if (r0 != 0) goto L_0x023d
            r0 = 88
            goto L_0x010c
        L_0x01f5:
            r0 = 91
            goto L_0x010c
        L_0x01f9:
            r0 = 125(0x7d, float:1.75E-43)
            goto L_0x010c
        L_0x01fd:
            r1.getMax(r12)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0240 }
            throw r0     // Catch:{ all -> 0x0240 }
        L_0x0205:
            r1.getMax(r14)     // Catch:{ all -> 0x0240 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0240 }
            if (r0 != 0) goto L_0x023d
            r0 = 114(0x72, float:1.6E-43)
            goto L_0x010c
        L_0x0210:
            r0 = 1
            goto L_0x010c
        L_0x0213:
            r1.length = r12     // Catch:{ all -> 0x0240 }
            r1.getMax(r8)     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0240 }
            r1.getMax(r7)     // Catch:{ all -> 0x0240 }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.FragmentStateAdapter$2 r4 = (o.FragmentStateAdapter$2) r4     // Catch:{ all -> 0x0240 }
            r0.valueOf = r4     // Catch:{ all -> 0x0240 }
            goto L_0x023d
        L_0x0229:
            r0 = 37
            goto L_0x010c
        L_0x022d:
            r0 = 92
            goto L_0x010c
        L_0x0231:
            r0 = 63
            goto L_0x010c
        L_0x0235:
            r1.getMax(r12)     // Catch:{ all -> 0x0240 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0240 }
            o.FragmentStateAdapter$2 r0 = (o.FragmentStateAdapter$2) r0     // Catch:{ all -> 0x0240 }
            return r0
        L_0x023d:
            r0 = r13
            goto L_0x010c
        L_0x0240:
            r0 = move-exception
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            r7 = 974(0x3ce, float:1.365E-42)
            short r7 = (short) r7
            byte[] r8 = getMax
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r4, r7, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0268
            if (r13 < r12) goto L_0x0268
            if (r13 > r9) goto L_0x0268
            r4 = 63
        L_0x0262:
            r5 = 115(0x73, float:1.61E-43)
        L_0x0264:
            r19 = 90
            goto L_0x038f
        L_0x0268:
            byte[] r4 = getMax
            r11 = 5474(0x1562, float:7.671E-42)
            byte r15 = r4[r11]
            short r15 = (short) r15
            r5 = 969(0x3c9, float:1.358E-42)
            short r5 = (short) r5
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r15, r5, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0291
            r4 = 23
            if (r13 < r4) goto L_0x0291
            if (r13 > r9) goto L_0x0291
        L_0x0289:
            r4 = 63
        L_0x028b:
            r5 = 115(0x73, float:1.61E-43)
            r19 = 124(0x7c, float:1.74E-43)
            goto L_0x038f
        L_0x0291:
            r4 = 5397(0x1515, float:7.563E-42)
            short r4 = (short) r4
            r15 = 973(0x3cd, float:1.363E-42)
            short r15 = (short) r15
            byte[] r18 = getMax
            byte r7 = r18[r10]
            byte r7 = (byte) r7
            java.lang.String r7 = setMin(r4, r15, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02b1
            r7 = 33
            if (r13 < r7) goto L_0x02b1
            if (r13 > r14) goto L_0x02b1
            goto L_0x0289
        L_0x02b1:
            r7 = 5427(0x1533, float:7.605E-42)
            short r7 = (short) r7
            r14 = 978(0x3d2, float:1.37E-42)
            short r14 = (short) r14
            byte[] r18 = getMax
            byte r8 = r18[r10]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r7, r14, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x02d3
            r8 = 37
            if (r13 < r8) goto L_0x02d3
            r8 = 56
            if (r13 > r8) goto L_0x02d5
            goto L_0x0289
        L_0x02d3:
            r8 = 56
        L_0x02d5:
            byte[] r17 = getMax
            byte r11 = r17[r11]
            short r11 = (short) r11
            byte r8 = r17[r10]
            byte r8 = (byte) r8
            java.lang.String r5 = setMin(r11, r5, r8)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02f4
            r5 = 50
            if (r13 < r5) goto L_0x02f4
            r5 = 51
            if (r13 > r5) goto L_0x02f4
            goto L_0x0289
        L_0x02f4:
            byte[] r5 = getMax
            byte r5 = r5[r10]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r7, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0311
            r5 = 57
            if (r13 < r5) goto L_0x0311
            r5 = 63
            if (r13 > r5) goto L_0x0311
            goto L_0x0289
        L_0x0311:
            r5 = 970(0x3ca, float:1.359E-42)
            short r5 = (short) r5
            byte[] r8 = getMax
            byte r8 = r8[r10]
            byte r8 = (byte) r8
            java.lang.String r5 = setMin(r3, r5, r8)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0331
            r5 = 59
            if (r13 < r5) goto L_0x0331
            r5 = 63
            if (r13 > r5) goto L_0x0331
            goto L_0x0289
        L_0x0331:
            byte[] r5 = getMax
            byte r5 = r5[r10]
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r4, r15, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x034e
            r4 = 63
            if (r13 < r4) goto L_0x0350
            r5 = 64
            if (r13 > r5) goto L_0x0350
            goto L_0x0262
        L_0x034e:
            r4 = 63
        L_0x0350:
            byte[] r5 = getMax
            byte r5 = r5[r10]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r7, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x036d
            r5 = 83
            if (r13 < r5) goto L_0x036d
            r5 = 84
            if (r13 > r5) goto L_0x036d
            goto L_0x028b
        L_0x036d:
            byte[] r5 = getMax
            r7 = 41
            byte r7 = r5[r7]
            short r7 = (short) r7
            byte r5 = r5[r10]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r7, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x039b
            r5 = 115(0x73, float:1.61E-43)
            if (r13 < r5) goto L_0x039b
            r7 = 116(0x74, float:1.63E-43)
            if (r13 > r7) goto L_0x039b
            goto L_0x0264
        L_0x038f:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r0 = r19
            r5 = 1
            goto L_0x010c
        L_0x039b:
            throw r0
        L_0x039c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03a4
            throw r1
        L_0x03a4:
            goto L_0x03a6
        L_0x03a5:
            throw r0
        L_0x03a6:
            goto L_0x03a5
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMax(int):o.FragmentStateAdapter$2");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ o.isUserInputEnabled.length setMax(o.onPageScrollStateChanged r17) {
        /*
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r0 = r17
            r1.<init>(r0)
            r0 = 7110(0x1bc6, float:9.963E-42)
            short r0 = (short) r0
            r2 = r0 & 1823(0x71f, float:2.555E-42)
            short r2 = (short) r2
            r3 = 73
            byte r3 = (byte) r3
            java.lang.String r0 = setMin(r0, r2, r3)
            r2 = 5452(0x154c, float:7.64E-42)
            short r2 = (short) r2
            r3 = 1003(0x3eb, float:1.406E-42)
            short r3 = (short) r3
            r4 = r3 & 94
            byte r4 = (byte) r4
            java.lang.String r2 = setMin(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x027a }
            r5 = 0
            r4[r5] = r2     // Catch:{ all -> 0x027a }
            r2 = 1994(0x7ca, float:2.794E-42)
            short r2 = (short) r2     // Catch:{ all -> 0x027a }
            r6 = 988(0x3dc, float:1.384E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x027a }
            byte[] r7 = getMax     // Catch:{ all -> 0x027a }
            r8 = 4873(0x1309, float:6.829E-42)
            byte r7 = r7[r8]     // Catch:{ all -> 0x027a }
            byte r7 = (byte) r7     // Catch:{ all -> 0x027a }
            java.lang.String r7 = setMin(r2, r6, r7)     // Catch:{ all -> 0x027a }
            java.lang.Class r7 = java.lang.Class.forName(r7)     // Catch:{ all -> 0x027a }
            r9 = 1028(0x404, float:1.44E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x027a }
            r10 = 999(0x3e7, float:1.4E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x027a }
            byte[] r11 = getMax     // Catch:{ all -> 0x027a }
            r12 = 145(0x91, float:2.03E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x027a }
            byte r11 = (byte) r11     // Catch:{ all -> 0x027a }
            java.lang.String r9 = setMin(r9, r10, r11)     // Catch:{ all -> 0x027a }
            java.lang.Class[] r10 = new java.lang.Class[r3]     // Catch:{ all -> 0x027a }
            byte[] r11 = getMax     // Catch:{ all -> 0x027a }
            byte r11 = r11[r8]     // Catch:{ all -> 0x027a }
            byte r11 = (byte) r11     // Catch:{ all -> 0x027a }
            java.lang.String r11 = setMin(r2, r6, r11)     // Catch:{ all -> 0x027a }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x027a }
            r10[r5] = r11     // Catch:{ all -> 0x027a }
            java.lang.reflect.Method r7 = r7.getMethod(r9, r10)     // Catch:{ all -> 0x027a }
            java.lang.Object r0 = r7.invoke(r0, r4)     // Catch:{ all -> 0x027a }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x027a }
            int r4 = r0.length
            int[] r4 = new int[r4]
            r7 = 0
        L_0x006c:
            int r9 = r0.length
            r10 = 35
            if (r7 >= r9) goto L_0x0103
            r9 = r0[r7]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x00fa }
            r11[r5] = r9     // Catch:{ all -> 0x00fa }
            byte[] r9 = getMax     // Catch:{ all -> 0x00fa }
            byte r9 = r9[r5]     // Catch:{ all -> 0x00fa }
            int r9 = r9 + r3
            short r9 = (short) r9     // Catch:{ all -> 0x00fa }
            r12 = r9 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fa }
            byte[] r13 = getMax     // Catch:{ all -> 0x00fa }
            byte r13 = r13[r8]     // Catch:{ all -> 0x00fa }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fa }
            java.lang.String r9 = setMin(r9, r12, r13)     // Catch:{ all -> 0x00fa }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x00fa }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fa }
            r13 = 997(0x3e5, float:1.397E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r14[r10]     // Catch:{ all -> 0x00fa }
            byte r10 = (byte) r10     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r12, r13, r10)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r12 = new java.lang.Class[r3]     // Catch:{ all -> 0x00fa }
            byte[] r13 = getMax     // Catch:{ all -> 0x00fa }
            byte r13 = r13[r8]     // Catch:{ all -> 0x00fa }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fa }
            java.lang.String r13 = setMin(r2, r6, r13)     // Catch:{ all -> 0x00fa }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00fa }
            r12[r5] = r13     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r9 = r9.getMethod(r10, r12)     // Catch:{ all -> 0x00fa }
            r10 = 0
            java.lang.Object r9 = r9.invoke(r10, r11)     // Catch:{ all -> 0x00fa }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f1 }
            byte r11 = r11[r5]     // Catch:{ all -> 0x00f1 }
            int r11 = r11 + r3
            short r11 = (short) r11     // Catch:{ all -> 0x00f1 }
            r12 = r11 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f1 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x00f1 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00f1 }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f1 }
            r12 = 3283(0xcd3, float:4.6E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = 996(0x3e4, float:1.396E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            r15 = 76
            byte r14 = r14[r15]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r10)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r9 = r11.invoke(r9, r10)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r9 = (java.lang.Integer) r9     // Catch:{ all -> 0x00f1 }
            int r9 = r9.intValue()     // Catch:{ all -> 0x00f1 }
            r4[r7] = r9
            int r7 = r7 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r2 = 58
            r6 = 9
            r7 = 64
        L_0x0109:
            int r9 = r5 + 1
            r11 = 5
            r12 = 25
            r13 = 30
            r14 = 2
            r0 = r4[r5]     // Catch:{ all -> 0x01a1 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            r5 = 34
            r15 = 4
            switch(r0) {
                case -16: goto L_0x019a;
                case -15: goto L_0x0197;
                case -14: goto L_0x0193;
                case -13: goto L_0x0186;
                case -12: goto L_0x0183;
                case -11: goto L_0x016d;
                case -10: goto L_0x016b;
                case -9: goto L_0x0168;
                case -8: goto L_0x015c;
                case -7: goto L_0x014f;
                case -6: goto L_0x0145;
                case -5: goto L_0x0143;
                case -4: goto L_0x0132;
                case -3: goto L_0x012a;
                case -2: goto L_0x0122;
                case -1: goto L_0x011f;
                default: goto L_0x011d;
            }     // Catch:{ all -> 0x01a1 }
        L_0x011d:
            goto L_0x019e
        L_0x011f:
            r5 = 64
            goto L_0x0109
        L_0x0122:
            r1.getMax(r14)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01a1 }
            throw r0     // Catch:{ all -> 0x01a1 }
        L_0x012a:
            r1.getMax(r14)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.isUserInputEnabled$length r0 = (o.isUserInputEnabled.length) r0     // Catch:{ all -> 0x01a1 }
            return r0
        L_0x0132:
            r1.getMax(r10)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            r5 = 59
            if (r0 == r15) goto L_0x0109
            r9 = 91
            if (r0 == r9) goto L_0x0140
            goto L_0x0109
        L_0x0140:
            r5 = 30
            goto L_0x0109
        L_0x0143:
            r5 = 6
            goto L_0x0109
        L_0x0145:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01a1 }
            r1.length = r0     // Catch:{ all -> 0x01a1 }
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x014f:
            r1.length = r3     // Catch:{ all -> 0x01a1 }
            r1.getMax(r15)     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x015c:
            r1.getMax(r5)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            if (r0 != 0) goto L_0x019e
            r0 = 29
            r5 = 29
            goto L_0x0109
        L_0x0168:
            r5 = 58
            goto L_0x0109
        L_0x016b:
            r5 = 3
            goto L_0x0109
        L_0x016d:
            r1.length = r3     // Catch:{ all -> 0x01a1 }
            r1.getMax(r15)     // Catch:{ all -> 0x01a1 }
            r1.getMax(r11)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01a1 }
            o.isUserInputEnabled$length r0 = r0.IsOverlapping     // Catch:{ all -> 0x01a1 }
            r1.isInside = r0     // Catch:{ all -> 0x01a1 }
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x0183:
            r5 = 9
            goto L_0x0109
        L_0x0186:
            r1.getMax(r5)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            if (r0 != 0) goto L_0x019e
            r0 = 57
            r5 = 57
            goto L_0x0109
        L_0x0193:
            r5 = 33
            goto L_0x0109
        L_0x0197:
            r5 = 7
            goto L_0x0109
        L_0x019a:
            r5 = 35
            goto L_0x0109
        L_0x019e:
            r5 = r9
            goto L_0x0109
        L_0x01a1:
            r0 = move-exception
            r5 = 97
            short r5 = (short) r5
            r15 = 976(0x3d0, float:1.368E-42)
            short r15 = (short) r15
            byte[] r16 = getMax
            byte r3 = r16[r8]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r5, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x01c2
            if (r9 < r6) goto L_0x01c2
            if (r9 > r13) goto L_0x01c2
        L_0x01bf:
            r5 = 1
            goto L_0x026f
        L_0x01c2:
            int r3 = setMin
            r3 = r3 | 7559(0x1d87, float:1.0592E-41)
            short r3 = (short) r3
            r5 = 975(0x3cf, float:1.366E-42)
            short r5 = (short) r5
            byte[] r13 = getMax
            byte r13 = r13[r8]
            byte r13 = (byte) r13
            java.lang.String r3 = setMin(r3, r5, r13)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x01e6
            r3 = 24
            if (r9 < r3) goto L_0x01e6
            if (r9 > r12) goto L_0x01e6
        L_0x01e3:
            r5 = 2
            goto L_0x026f
        L_0x01e6:
            byte[] r3 = getMax
            r5 = 5474(0x1562, float:7.671E-42)
            byte r12 = r3[r5]
            short r12 = (short) r12
            r13 = 969(0x3c9, float:1.358E-42)
            short r13 = (short) r13
            byte r3 = r3[r8]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r12, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x020a
            r3 = 31
            if (r9 < r3) goto L_0x020a
            r3 = 32
            if (r9 > r3) goto L_0x020a
            goto L_0x01e3
        L_0x020a:
            byte[] r3 = getMax
            byte r5 = r3[r5]
            short r5 = (short) r5
            byte r3 = r3[r8]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r5, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0225
            if (r9 < r10) goto L_0x0225
            if (r9 > r2) goto L_0x0225
            goto L_0x01bf
        L_0x0225:
            byte[] r3 = getMax
            r5 = 41
            byte r5 = r3[r5]
            short r5 = (short) r5
            r12 = 973(0x3cd, float:1.363E-42)
            short r12 = (short) r12
            byte r3 = r3[r8]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r5, r12, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0249
            r3 = 53
            if (r9 < r3) goto L_0x0249
            r3 = 54
            if (r9 > r3) goto L_0x0249
            goto L_0x01e3
        L_0x0249:
            r3 = 61
            if (r9 < r3) goto L_0x0251
            if (r9 > r7) goto L_0x0251
            r5 = 5
            goto L_0x026f
        L_0x0251:
            r3 = 5397(0x1515, float:7.563E-42)
            short r3 = (short) r3
            byte[] r5 = getMax
            byte r5 = r5[r8]
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r12, r5)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0279
            r3 = 60
            if (r9 < r3) goto L_0x0279
            if (r9 > r7) goto L_0x0279
            goto L_0x01e3
        L_0x026f:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r3 = 1
            goto L_0x0109
        L_0x0279:
            throw r0
        L_0x027a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0282
            throw r1
        L_0x0282:
            goto L_0x0284
        L_0x0283:
            throw r0
        L_0x0284:
            goto L_0x0283
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMax(o.onPageScrollStateChanged):o.isUserInputEnabled$length");
    }

    /* JADX WARNING: Removed duplicated region for block: B:8:0x0025  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static java.lang.String setMin(int r6, short r7, short r8) {
        /*
            byte[] r0 = getMax
            int r6 = r6 + 4
            int r7 = 1004 - r7
            int r8 = 118 - r8
            byte[] r1 = new byte[r7]
            int r7 = r7 + -1
            r2 = 0
            if (r0 != 0) goto L_0x0015
            r8 = r6
            r3 = r1
            r4 = 0
            r1 = r0
            r0 = r7
            goto L_0x0032
        L_0x0015:
            r3 = 0
            r5 = r7
            r7 = r6
            r6 = r8
            r8 = r5
        L_0x001a:
            byte r4 = (byte) r6
            r1[r3] = r4
            if (r3 != r8) goto L_0x0025
            java.lang.String r6 = new java.lang.String
            r6.<init>(r1, r2)
            return r6
        L_0x0025:
            int r7 = r7 + 1
            byte r4 = r0[r7]
            int r3 = r3 + 1
            r5 = r8
            r8 = r7
            r7 = r4
            r4 = r3
            r3 = r1
            r1 = r0
            r0 = r5
        L_0x0032:
            int r6 = r6 + r7
            int r6 = r6 + 2
            r7 = r8
            r8 = r0
            r0 = r1
            r1 = r3
            r3 = r4
            goto L_0x001a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMin(int, short, short):java.lang.String");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void toDoubleRange() {
        /*
            r17 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r17
            r1.<init>(r2)
            r0 = 2009(0x7d9, float:2.815E-42)
            short r0 = (short) r0
            r3 = 887(0x377, float:1.243E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x022d }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x022d }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x022d }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x022d }
            byte[] r8 = getMax     // Catch:{ all -> 0x022d }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x022d }
            byte r8 = (byte) r8     // Catch:{ all -> 0x022d }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x022d }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x022d }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x022d }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x022d }
            byte[] r12 = getMax     // Catch:{ all -> 0x022d }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x022d }
            byte r12 = (byte) r12     // Catch:{ all -> 0x022d }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x022d }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x022d }
            byte[] r12 = getMax     // Catch:{ all -> 0x022d }
            byte r12 = r12[r9]     // Catch:{ all -> 0x022d }
            byte r12 = (byte) r12     // Catch:{ all -> 0x022d }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x022d }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x022d }
            r11[r6] = r12     // Catch:{ all -> 0x022d }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x022d }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x022d }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x022d }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r12[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r13 = r10 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r13, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r15[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r13, r14, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fa }
            r13[r6] = r14     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r13)     // Catch:{ all -> 0x00fa }
            r11 = 0
            java.lang.Object r10 = r10.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x00f1 }
            int r12 = r12 + r4
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = r12 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r12 = r12.getMethod(r13, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r12.invoke(r10, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r3 = 5
        L_0x0104:
            int r7 = r6 + 1
            r8 = 34
            r0 = r5[r6]     // Catch:{ all -> 0x0195 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x0195 }
            r6 = 88
            r10 = 2
            r12 = 4
            switch(r0) {
                case -13: goto L_0x0191;
                case -12: goto L_0x018e;
                case -11: goto L_0x0177;
                case -10: goto L_0x0163;
                case -9: goto L_0x014f;
                case -8: goto L_0x0147;
                case -7: goto L_0x0144;
                case -6: goto L_0x0141;
                case -5: goto L_0x0135;
                case -4: goto L_0x0126;
                case -3: goto L_0x011c;
                case -2: goto L_0x0119;
                case -1: goto L_0x0117;
                default: goto L_0x0115;
            }     // Catch:{ all -> 0x0195 }
        L_0x0115:
            goto L_0x0192
        L_0x0117:
            r6 = 1
            goto L_0x0104
        L_0x0119:
            r6 = 30
            goto L_0x0104
        L_0x011c:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0195 }
            r1.length = r0     // Catch:{ all -> 0x0195 }
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x0195 }
            goto L_0x0192
        L_0x0126:
            r1.length = r4     // Catch:{ all -> 0x0195 }
            r1.getMax(r12)     // Catch:{ all -> 0x0195 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x0195 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0195 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0195 }
            goto L_0x0192
        L_0x0135:
            r1.getMax(r8)     // Catch:{ all -> 0x0195 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0195 }
            if (r0 != 0) goto L_0x0192
            r0 = 27
            r6 = 27
            goto L_0x0104
        L_0x0141:
            r6 = 38
            goto L_0x0104
        L_0x0144:
            r6 = 36
            goto L_0x0104
        L_0x0147:
            r1.getMax(r10)     // Catch:{ all -> 0x0195 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0195 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0195 }
            throw r0     // Catch:{ all -> 0x0195 }
        L_0x014f:
            r1.length = r4     // Catch:{ all -> 0x0195 }
            r1.getMax(r12)     // Catch:{ all -> 0x0195 }
            r1.getMax(r3)     // Catch:{ all -> 0x0195 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0195 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0195 }
            o.appConfigIsEnable r0 = r0.length     // Catch:{ all -> 0x0195 }
            r1.isInside = r0     // Catch:{ all -> 0x0195 }
        L_0x015f:
            r1.getMax(r6)     // Catch:{ all -> 0x0195 }
            goto L_0x0192
        L_0x0163:
            o.onPageScrollStateChanged$4 r0 = new o.onPageScrollStateChanged$4     // Catch:{ all -> 0x0195 }
            r1.length = r4     // Catch:{ all -> 0x0195 }
            r1.getMax(r12)     // Catch:{ all -> 0x0195 }
            r1.getMax(r3)     // Catch:{ all -> 0x0195 }
            java.lang.Object r10 = r1.IsOverlapping     // Catch:{ all -> 0x0195 }
            o.onPageScrollStateChanged r10 = (o.onPageScrollStateChanged) r10     // Catch:{ all -> 0x0195 }
            r0.<init>()     // Catch:{ all -> 0x0195 }
            r1.isInside = r0     // Catch:{ all -> 0x0195 }
            goto L_0x015f
        L_0x0177:
            r1.length = r10     // Catch:{ all -> 0x0195 }
            r1.getMax(r12)     // Catch:{ all -> 0x0195 }
            r1.getMax(r3)     // Catch:{ all -> 0x0195 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0195 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x0195 }
            r1.getMax(r3)     // Catch:{ all -> 0x0195 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x0195 }
            o.setGlobalUserData r6 = (o.setGlobalUserData) r6     // Catch:{ all -> 0x0195 }
            r0.executeInBackground(r6)     // Catch:{ all -> 0x0195 }
            goto L_0x0192
        L_0x018e:
            r6 = 5
            goto L_0x0104
        L_0x0191:
            return
        L_0x0192:
            r6 = r7
            goto L_0x0104
        L_0x0195:
            r0 = move-exception
            byte[] r6 = getMax
            r10 = 41
            byte r10 = r6[r10]
            short r10 = (short) r10
            r12 = 973(0x3cd, float:1.363E-42)
            short r12 = (short) r12
            byte r6 = r6[r9]
            byte r6 = (byte) r6
            java.lang.String r6 = setMin(r10, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r10 = 28
            if (r6 == 0) goto L_0x01bb
            if (r7 < r3) goto L_0x01bb
            r6 = 6
            if (r7 > r6) goto L_0x01bb
            r6 = 29
            goto L_0x0223
        L_0x01bb:
            int r6 = setMin
            r6 = r6 | 7559(0x1d87, float:1.0592E-41)
            short r6 = (short) r6
            r12 = 975(0x3cf, float:1.366E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r6 = setMin(r6, r12, r13)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x01e1
            r6 = 22
            if (r7 < r6) goto L_0x01e1
            r6 = 23
            if (r7 > r6) goto L_0x01e1
        L_0x01de:
            r6 = 28
            goto L_0x0223
        L_0x01e1:
            byte[] r6 = getMax
            r12 = 5474(0x1562, float:7.671E-42)
            byte r12 = r6[r12]
            short r12 = (short) r12
            r13 = 969(0x3c9, float:1.358E-42)
            short r13 = (short) r13
            byte r6 = r6[r9]
            byte r6 = (byte) r6
            java.lang.String r6 = setMin(r12, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0205
            r6 = 31
            if (r7 < r6) goto L_0x0205
            r6 = 32
            if (r7 > r6) goto L_0x0205
            goto L_0x01de
        L_0x0205:
            r6 = 5485(0x156d, float:7.686E-42)
            short r6 = (short) r6
            r12 = 985(0x3d9, float:1.38E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r6 = setMin(r6, r12, r13)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x022c
            if (r7 < r8) goto L_0x022c
            if (r7 > r11) goto L_0x022c
            goto L_0x01de
        L_0x0223:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            goto L_0x0104
        L_0x022c:
            throw r0
        L_0x022d:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0235
            throw r1
        L_0x0235:
            goto L_0x0237
        L_0x0236:
            throw r0
        L_0x0237:
            goto L_0x0236
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.toDoubleRange():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:109:0x0332, code lost:
        if (r13 <= 55) goto L_0x0334;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x0381, code lost:
        if (r13 <= 75) goto L_0x035e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:132:0x03a9, code lost:
        if (r13 <= 75) goto L_0x0334;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x013e, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x016f, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:0x01dd, code lost:
        r0 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x01de, code lost:
        r18 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:0x0287, code lost:
        r18 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x02dd, code lost:
        if (r13 <= 15) goto L_0x02b2;
     */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x037b  */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x0384  */
    /* JADX WARNING: Removed duplicated region for block: B:131:0x03a7  */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x03ac  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.FragmentStateAdapter$2<o.GriverRpcExtension> values() {
        /*
            r22 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r22
            r1.<init>(r2)
            r0 = 630(0x276, float:8.83E-43)
            short r0 = (short) r0
            r3 = 605(0x25d, float:8.48E-43)
            short r3 = (short) r3
            r4 = r3 & 491(0x1eb, float:6.88E-43)
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x041f }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x041f }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x041f }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x041f }
            byte[] r9 = getMax     // Catch:{ all -> 0x041f }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x041f }
            byte r9 = (byte) r9     // Catch:{ all -> 0x041f }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x041f }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x041f }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x041f }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x041f }
            byte[] r13 = getMax     // Catch:{ all -> 0x041f }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x041f }
            byte r13 = (byte) r13     // Catch:{ all -> 0x041f }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x041f }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x041f }
            byte[] r13 = getMax     // Catch:{ all -> 0x041f }
            byte r13 = r13[r10]     // Catch:{ all -> 0x041f }
            byte r13 = (byte) r13     // Catch:{ all -> 0x041f }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x041f }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x041f }
            r12[r7] = r13     // Catch:{ all -> 0x041f }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x041f }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x041f }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x041f }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006c:
            int r11 = r0.length
            r12 = 35
            if (r9 >= r11) goto L_0x0104
            r11 = r0[r9]
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fb }
            r13[r7] = r11     // Catch:{ all -> 0x00fb }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fb }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fb }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fb }
            r14 = r11 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fb }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fb }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fb }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fb }
            java.lang.String r11 = setMin(r11, r14, r15)     // Catch:{ all -> 0x00fb }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00fb }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fb }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fb }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fb }
            byte r12 = r16[r12]     // Catch:{ all -> 0x00fb }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fb }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x00fb }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fb }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fb }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fb }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fb }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00fb }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fb }
            r14[r7] = r15     // Catch:{ all -> 0x00fb }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r14)     // Catch:{ all -> 0x00fb }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r13)     // Catch:{ all -> 0x00fb }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f2 }
            byte r13 = r13[r7]     // Catch:{ all -> 0x00f2 }
            int r13 = r13 + r5
            short r13 = (short) r13     // Catch:{ all -> 0x00f2 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f2 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f2 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f2 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f2 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f2 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f2 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f2 }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00f2 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00f2 }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00f2 }
            java.lang.reflect.Method r7 = r13.getMethod(r7, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Object r7 = r7.invoke(r11, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00f2 }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00f2 }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x006c
        L_0x00f2:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fa
            throw r1
        L_0x00fa:
            throw r0
        L_0x00fb:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0103
            throw r1
        L_0x0103:
            throw r0
        L_0x0104:
            r18 = 0
        L_0x0106:
            int r13 = r18 + 1
            r14 = 25
            r15 = 8
            r0 = r6[r18]     // Catch:{ all -> 0x028d }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x028d }
            r8 = 28
            r9 = 34
            r11 = 2
            r4 = 88
            r7 = 4
            r10 = 5
            switch(r0) {
                case -33: goto L_0x0277;
                case -32: goto L_0x0271;
                case -31: goto L_0x025b;
                case -30: goto L_0x0255;
                case -29: goto L_0x024d;
                case -28: goto L_0x0247;
                case -27: goto L_0x0223;
                case -26: goto L_0x0211;
                case -25: goto L_0x01ff;
                case -24: goto L_0x01f9;
                case -23: goto L_0x01f1;
                case -22: goto L_0x01ea;
                case -21: goto L_0x01e2;
                case -20: goto L_0x01d3;
                case -19: goto L_0x01cb;
                case -18: goto L_0x01c3;
                case -17: goto L_0x01b9;
                case -16: goto L_0x01b1;
                case -15: goto L_0x01a7;
                case -14: goto L_0x0199;
                case -13: goto L_0x0194;
                case -12: goto L_0x018c;
                case -11: goto L_0x0182;
                case -10: goto L_0x0174;
                case -9: goto L_0x016b;
                case -8: goto L_0x0166;
                case -7: goto L_0x015e;
                case -6: goto L_0x0157;
                case -5: goto L_0x0150;
                case -4: goto L_0x0143;
                case -3: goto L_0x012e;
                case -2: goto L_0x0127;
                case -1: goto L_0x0120;
                default: goto L_0x011e;
            }     // Catch:{ all -> 0x028d }
        L_0x011e:
            goto L_0x0287
        L_0x0120:
            r0 = 106(0x6a, float:1.49E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 106(0x6a, float:1.49E-43)
            goto L_0x0106
        L_0x0127:
            r0 = 95
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 95
            goto L_0x0106
        L_0x012e:
            r1.length = r5     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x028d }
            o.FragmentStateAdapter$2<o.GriverRpcExtension> r0 = r0.invokeSuspend     // Catch:{ all -> 0x028d }
            r1.isInside = r0     // Catch:{ all -> 0x028d }
        L_0x013e:
            r1.getMax(r4)     // Catch:{ all -> 0x028d }
            goto L_0x0287
        L_0x0143:
            r0 = 219(0xdb, float:3.07E-43)
            r1.getMax(r0)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 != 0) goto L_0x01dd
            r0 = 10
            goto L_0x01de
        L_0x0150:
            r0 = 98
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 98
            goto L_0x0106
        L_0x0157:
            r0 = 110(0x6e, float:1.54E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 110(0x6e, float:1.54E-43)
            goto L_0x0106
        L_0x015e:
            r1.getMax(r11)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x028d }
            throw r0     // Catch:{ all -> 0x028d }
        L_0x0166:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 104(0x68, float:1.46E-43)
            goto L_0x0106
        L_0x016b:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x028d }
            r1.length = r0     // Catch:{ all -> 0x028d }
        L_0x016f:
            r1.getMax(r15)     // Catch:{ all -> 0x028d }
            goto L_0x0287
        L_0x0174:
            r1.length = r5     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r14)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            onNavigationEvent = r0     // Catch:{ all -> 0x028d }
            goto L_0x0287
        L_0x0182:
            r1.getMax(r8)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 != 0) goto L_0x01dd
            r0 = 30
            goto L_0x01de
        L_0x018c:
            r0 = 11
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 11
            goto L_0x0106
        L_0x0194:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x028d }
            r1.length = r0     // Catch:{ all -> 0x028d }
            goto L_0x016f
        L_0x0199:
            r1.length = r5     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r14)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x028d }
            goto L_0x0287
        L_0x01a7:
            r1.getMax(r9)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 != 0) goto L_0x01dd
            r0 = 54
            goto L_0x01de
        L_0x01b1:
            r0 = 13
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 13
            goto L_0x0106
        L_0x01b9:
            r1.getMax(r9)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 != 0) goto L_0x01dd
            r0 = 74
            goto L_0x01de
        L_0x01c3:
            r0 = 114(0x72, float:1.6E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 114(0x72, float:1.6E-43)
            goto L_0x0106
        L_0x01cb:
            r0 = 93
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 93
            goto L_0x0106
        L_0x01d3:
            r1.getMax(r8)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 != 0) goto L_0x01dd
            r0 = 89
            goto L_0x01de
        L_0x01dd:
            r0 = r13
        L_0x01de:
            r18 = r0
            goto L_0x0289
        L_0x01e2:
            r0 = 116(0x74, float:1.63E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 116(0x74, float:1.63E-43)
            goto L_0x0106
        L_0x01ea:
            r0 = 6
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 6
            goto L_0x0106
        L_0x01f1:
            r0 = 112(0x70, float:1.57E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 112(0x70, float:1.57E-43)
            goto L_0x0106
        L_0x01f9:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 31
            goto L_0x0106
        L_0x01ff:
            r1.length = r5     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x028d }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x028d }
            r1.isInside = r0     // Catch:{ all -> 0x028d }
            goto L_0x013e
        L_0x0211:
            r1.length = r5     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x028d }
            o.isUserInputEnabled$length r0 = r0.IsOverlapping     // Catch:{ all -> 0x028d }
            r1.isInside = r0     // Catch:{ all -> 0x028d }
            goto L_0x013e
        L_0x0223:
            o.onPageScrollStateChanged$1 r0 = new o.onPageScrollStateChanged$1     // Catch:{ all -> 0x028d }
            r8 = 3
            r1.length = r8     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r7 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.onPageScrollStateChanged r7 = (o.onPageScrollStateChanged) r7     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r8 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.copyBackForwardList r8 = (o.copyBackForwardList) r8     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r9 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.isUserInputEnabled$length r9 = (o.isUserInputEnabled.length) r9     // Catch:{ all -> 0x028d }
            r0.<init>(r8, r9)     // Catch:{ all -> 0x028d }
            r1.isInside = r0     // Catch:{ all -> 0x028d }
            goto L_0x013e
        L_0x0247:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 14
            goto L_0x0106
        L_0x024d:
            r1.getMax(r11)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.FragmentStateAdapter$2 r0 = (o.FragmentStateAdapter$2) r0     // Catch:{ all -> 0x028d }
            return r0
        L_0x0255:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 75
            goto L_0x0106
        L_0x025b:
            r1.length = r11     // Catch:{ all -> 0x028d }
            r1.getMax(r7)     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x028d }
            r1.getMax(r10)     // Catch:{ all -> 0x028d }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x028d }
            o.FragmentStateAdapter$2 r4 = (o.FragmentStateAdapter$2) r4     // Catch:{ all -> 0x028d }
            r0.invokeSuspend = r4     // Catch:{ all -> 0x028d }
            goto L_0x0287
        L_0x0271:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 55
            goto L_0x0106
        L_0x0277:
            r1.getMax(r12)     // Catch:{ all -> 0x028d }
            int r0 = r1.setMax     // Catch:{ all -> 0x028d }
            if (r0 == r9) goto L_0x0284
            r4 = 89
            r0 = 90
            goto L_0x01de
        L_0x0284:
            r0 = 1
            goto L_0x01de
        L_0x0287:
            r18 = r13
        L_0x0289:
            r10 = 4873(0x1309, float:6.829E-42)
            goto L_0x0106
        L_0x028d:
            r0 = move-exception
            byte[] r4 = getMax
            r7 = 5474(0x1562, float:7.671E-42)
            byte r8 = r4[r7]
            short r8 = (short) r8
            r9 = 969(0x3c9, float:1.358E-42)
            short r9 = (short) r9
            r10 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r8, r9, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r10 = 113(0x71, float:1.58E-43)
            if (r4 == 0) goto L_0x02bc
            r4 = 7
            if (r13 < r4) goto L_0x02bc
            if (r13 > r15) goto L_0x02bc
        L_0x02b2:
            r4 = 104(0x68, float:1.46E-43)
            r8 = 4873(0x1309, float:6.829E-42)
            r11 = 31
        L_0x02b8:
            r18 = 12
            goto L_0x0414
        L_0x02bc:
            r4 = 97
            short r11 = (short) r4
            r15 = 976(0x3d0, float:1.368E-42)
            short r15 = (short) r15
            byte[] r21 = getMax
            r20 = 4873(0x1309, float:6.829E-42)
            byte r5 = r21[r20]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r11, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02e0
            r5 = 14
            if (r13 < r5) goto L_0x02e2
            r11 = 15
            if (r13 > r11) goto L_0x02e2
            goto L_0x02b2
        L_0x02e0:
            r5 = 14
        L_0x02e2:
            byte[] r11 = getMax
            r15 = 41
            byte r15 = r11[r15]
            short r15 = (short) r15
            r5 = 973(0x3cd, float:1.363E-42)
            short r5 = (short) r5
            r20 = 4873(0x1309, float:6.829E-42)
            byte r11 = r11[r20]
            byte r11 = (byte) r11
            java.lang.String r11 = setMin(r15, r5, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x030f
            if (r13 < r14) goto L_0x030f
            r11 = 26
            if (r13 > r11) goto L_0x030f
            r4 = 104(0x68, float:1.46E-43)
            r8 = 4873(0x1309, float:6.829E-42)
            r11 = 31
        L_0x030b:
            r18 = 113(0x71, float:1.58E-43)
            goto L_0x0414
        L_0x030f:
            int r11 = setMin
            r11 = r11 | 7559(0x1d87, float:1.0592E-41)
            short r11 = (short) r11
            r14 = 975(0x3cf, float:1.366E-42)
            short r14 = (short) r14
            byte[] r15 = getMax
            r20 = 4873(0x1309, float:6.829E-42)
            byte r15 = r15[r20]
            byte r15 = (byte) r15
            java.lang.String r11 = setMin(r11, r14, r15)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x033a
            r11 = 31
            if (r13 < r11) goto L_0x033c
            r15 = 55
            if (r13 > r15) goto L_0x033c
        L_0x0334:
            r4 = 104(0x68, float:1.46E-43)
            r8 = 4873(0x1309, float:6.829E-42)
            goto L_0x02b8
        L_0x033a:
            r11 = 31
        L_0x033c:
            int r15 = setMin
            r15 = r15 | 7559(0x1d87, float:1.0592E-41)
            short r15 = (short) r15
            byte[] r19 = getMax
            r20 = 4873(0x1309, float:6.829E-42)
            byte r8 = r19[r20]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r15, r14, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x0363
            r8 = 49
            if (r13 < r8) goto L_0x0363
            r8 = 50
            if (r13 > r8) goto L_0x0363
        L_0x035e:
            r4 = 104(0x68, float:1.46E-43)
        L_0x0360:
            r8 = 4873(0x1309, float:6.829E-42)
            goto L_0x030b
        L_0x0363:
            r8 = 970(0x3ca, float:1.359E-42)
            short r8 = (short) r8
            byte[] r14 = getMax
            r15 = 4873(0x1309, float:6.829E-42)
            byte r14 = r14[r15]
            byte r14 = (byte) r14
            java.lang.String r8 = setMin(r3, r8, r14)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x0384
            r8 = 55
            if (r13 < r8) goto L_0x0386
            r14 = 75
            if (r13 > r14) goto L_0x0386
            goto L_0x035e
        L_0x0384:
            r8 = 55
        L_0x0386:
            int r14 = setMin
            r14 = r14 | 68
            short r14 = (short) r14
            r15 = 974(0x3ce, float:1.365E-42)
            short r15 = (short) r15
            byte[] r18 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r8 = r18[r19]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r14, r15, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x03ac
            r8 = 70
            if (r13 < r8) goto L_0x03ac
            r8 = 75
            if (r13 > r8) goto L_0x03ae
            goto L_0x0334
        L_0x03ac:
            r8 = 75
        L_0x03ae:
            r14 = 5427(0x1533, float:7.605E-42)
            short r14 = (short) r14
            r15 = 978(0x3d2, float:1.37E-42)
            short r15 = (short) r15
            byte[] r17 = getMax
            r18 = 4873(0x1309, float:6.829E-42)
            byte r8 = r17[r18]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r14, r15, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x03d0
            r8 = 96
            if (r13 < r8) goto L_0x03d0
            if (r13 > r4) goto L_0x03d0
            goto L_0x035e
        L_0x03d0:
            byte[] r4 = getMax
            byte r7 = r4[r7]
            short r7 = (short) r7
            r8 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r7, r9, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03f2
            r4 = 99
            if (r13 < r4) goto L_0x03f2
            r4 = 104(0x68, float:1.46E-43)
            if (r13 > r4) goto L_0x03f2
            goto L_0x0360
        L_0x03f2:
            r4 = 5397(0x1515, float:7.563E-42)
            short r4 = (short) r4
            byte[] r7 = getMax
            r8 = 4873(0x1309, float:6.829E-42)
            byte r7 = r7[r8]
            byte r7 = (byte) r7
            java.lang.String r4 = setMin(r4, r5, r7)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x041e
            r4 = 101(0x65, float:1.42E-43)
            if (r13 < r4) goto L_0x041e
            r4 = 104(0x68, float:1.46E-43)
            if (r13 > r4) goto L_0x041e
            goto L_0x030b
        L_0x0414:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r5 = 1
            goto L_0x0289
        L_0x041e:
            throw r0
        L_0x041f:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0427
            throw r1
        L_0x0427:
            goto L_0x0429
        L_0x0428:
            throw r0
        L_0x0429:
            goto L_0x0428
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.values():o.FragmentStateAdapter$2");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x012f, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x0164, code lost:
        r1.getMax(8);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void IsOverlapping() {
        /*
            r17 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r17
            r1.<init>(r2)
            r0 = 6951(0x1b27, float:9.74E-42)
            short r0 = (short) r0
            r3 = 844(0x34c, float:1.183E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0295 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x0295 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x0295 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0295 }
            byte[] r8 = getMax     // Catch:{ all -> 0x0295 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x0295 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0295 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x0295 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0295 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x0295 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0295 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0295 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0295 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0295 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x0295 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x0295 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0295 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x0295 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0295 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x0295 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0295 }
            r11[r6] = r12     // Catch:{ all -> 0x0295 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x0295 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x0295 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0295 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r12[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r13 = r10 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r13, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r15[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r13, r14, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fa }
            r13[r6] = r14     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r13)     // Catch:{ all -> 0x00fa }
            r11 = 0
            java.lang.Object r10 = r10.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x00f1 }
            int r12 = r12 + r4
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = r12 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r12 = r12.getMethod(r13, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r12.invoke(r10, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r3 = 7
            r7 = 47
        L_0x0106:
            int r8 = r6 + 1
            r10 = 8
            r12 = 2
            r13 = 5
            r14 = 25
            r0 = r5[r6]     // Catch:{ all -> 0x01c2 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01c2 }
            r6 = 88
            r15 = 4
            switch(r0) {
                case -18: goto L_0x01bc;
                case -17: goto L_0x01b8;
                case -16: goto L_0x01a9;
                case -15: goto L_0x019c;
                case -14: goto L_0x0197;
                case -13: goto L_0x0196;
                case -12: goto L_0x0192;
                case -11: goto L_0x018a;
                case -10: goto L_0x0186;
                case -9: goto L_0x0183;
                case -8: goto L_0x0175;
                case -7: goto L_0x0168;
                case -6: goto L_0x0160;
                case -5: goto L_0x015e;
                case -4: goto L_0x0147;
                case -3: goto L_0x0134;
                case -2: goto L_0x011f;
                case -1: goto L_0x011c;
                default: goto L_0x011a;
            }     // Catch:{ all -> 0x01c2 }
        L_0x011a:
            goto L_0x01bf
        L_0x011c:
            r6 = 26
            goto L_0x0106
        L_0x011f:
            r1.length = r4     // Catch:{ all -> 0x01c2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01c2 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c2 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01c2 }
            o.getDelay r0 = r0.getMin     // Catch:{ all -> 0x01c2 }
            r1.isInside = r0     // Catch:{ all -> 0x01c2 }
        L_0x012f:
            r1.getMax(r6)     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x0134:
            r1.length = r4     // Catch:{ all -> 0x01c2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01c2 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c2 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01c2 }
            o.GriverAppVirtualHostProxy r0 = r0.FastBitmap$CoordinateSystem()     // Catch:{ all -> 0x01c2 }
            r1.isInside = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x012f
        L_0x0147:
            r1.length = r12     // Catch:{ all -> 0x01c2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01c2 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c2 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x01c2 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x01c2 }
            o.setGlobalUserData r6 = (o.setGlobalUserData) r6     // Catch:{ all -> 0x01c2 }
            r0.execute(r6)     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x015e:
            r6 = 7
            goto L_0x0106
        L_0x0160:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01c2 }
            r1.length = r0     // Catch:{ all -> 0x01c2 }
        L_0x0164:
            r1.getMax(r10)     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x0168:
            r1.length = r4     // Catch:{ all -> 0x01c2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01c2 }
            r1.getMax(r14)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c2 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x0175:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c2 }
            if (r0 != 0) goto L_0x01bf
            r0 = 24
            r6 = 24
            goto L_0x0106
        L_0x0183:
            r6 = 31
            goto L_0x0106
        L_0x0186:
            r6 = 33
            goto L_0x0106
        L_0x018a:
            r1.getMax(r12)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c2 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01c2 }
            throw r0     // Catch:{ all -> 0x01c2 }
        L_0x0192:
            r6 = 35
            goto L_0x0106
        L_0x0196:
            return
        L_0x0197:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01c2 }
            r1.length = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x0164
        L_0x019c:
            r1.length = r4     // Catch:{ all -> 0x01c2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01c2 }
            r1.getMax(r14)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c2 }
            onNavigationEvent = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x01a9:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c2 }
            if (r0 != 0) goto L_0x01bf
            r0 = 46
            r6 = 46
            goto L_0x0106
        L_0x01b8:
            r6 = 47
            goto L_0x0106
        L_0x01bc:
            r6 = 1
            goto L_0x0106
        L_0x01bf:
            r6 = r8
            goto L_0x0106
        L_0x01c2:
            r0 = move-exception
            int r6 = setMin
            r6 = r6 | 2374(0x946, float:3.327E-42)
            short r6 = (short) r6
            r15 = 965(0x3c5, float:1.352E-42)
            short r15 = (short) r15
            byte[] r16 = getMax
            byte r4 = r16[r9]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r6, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r6 = 32
            if (r4 == 0) goto L_0x01e9
            if (r8 < r12) goto L_0x01e9
            r4 = 3
            if (r8 > r4) goto L_0x01e9
        L_0x01e5:
            r6 = 25
            goto L_0x028a
        L_0x01e9:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            r12 = 974(0x3ce, float:1.365E-42)
            short r12 = (short) r12
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r4 = setMin(r4, r12, r15)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x020a
            if (r8 < r13) goto L_0x020a
            r4 = 6
            if (r8 > r4) goto L_0x020a
            goto L_0x01e5
        L_0x020a:
            int r4 = setMin
            r4 = r4 | 7559(0x1d87, float:1.0592E-41)
            short r4 = (short) r4
            r12 = 975(0x3cf, float:1.366E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r4 = setMin(r4, r12, r13)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x022a
            if (r8 < r3) goto L_0x022a
            if (r8 > r10) goto L_0x022a
            goto L_0x028a
        L_0x022a:
            r4 = 5397(0x1515, float:7.563E-42)
            short r4 = (short) r4
            r10 = 973(0x3cd, float:1.363E-42)
            short r10 = (short) r10
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r4 = setMin(r4, r10, r13)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x024a
            r4 = 20
            if (r8 < r4) goto L_0x024a
            if (r8 > r14) goto L_0x024a
            goto L_0x028a
        L_0x024a:
            int r4 = setMin
            r4 = r4 | 7559(0x1d87, float:1.0592E-41)
            short r4 = (short) r4
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r4 = setMin(r4, r12, r10)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0269
            if (r8 < r11) goto L_0x0269
            r4 = 36
            if (r8 > r4) goto L_0x0269
            goto L_0x028a
        L_0x0269:
            r4 = 5427(0x1533, float:7.605E-42)
            short r4 = (short) r4
            r6 = 978(0x3d2, float:1.37E-42)
            short r6 = (short) r6
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r4 = setMin(r4, r6, r10)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0294
            r4 = 42
            if (r8 < r4) goto L_0x0294
            if (r8 > r7) goto L_0x0294
            goto L_0x01e5
        L_0x028a:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r4 = 1
            goto L_0x0106
        L_0x0294:
            throw r0
        L_0x0295:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x029d
            throw r1
        L_0x029d:
            goto L_0x029f
        L_0x029e:
            throw r0
        L_0x029f:
            goto L_0x029e
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.IsOverlapping():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x032e, code lost:
        if (r9 <= 73) goto L_0x0330;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x0159, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:51:0x01c3, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:63:0x020c, code lost:
        r0 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x020d, code lost:
        r19 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:67:0x021e, code lost:
        r19 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:0x028f, code lost:
        if (r9 <= 10) goto L_0x0270;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:97:0x02bd, code lost:
        if (r9 <= 28) goto L_0x0270;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void equals() {
        /*
            r21 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r21
            r1.<init>(r2)
            r0 = 6382(0x18ee, float:8.943E-42)
            short r0 = (short) r0
            r3 = 704(0x2c0, float:9.87E-43)
            short r3 = (short) r3
            r4 = 73
            byte r5 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r5)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r5 = 1003(0x3eb, float:1.406E-42)
            short r5 = (short) r5
            r6 = r5 & 94
            byte r6 = (byte) r6
            java.lang.String r5 = setMin(r3, r5, r6)
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ all -> 0x03b4 }
            r8 = 0
            r7[r8] = r5     // Catch:{ all -> 0x03b4 }
            r5 = 1994(0x7ca, float:2.794E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x03b4 }
            r9 = 988(0x3dc, float:1.384E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x03b4 }
            byte[] r10 = getMax     // Catch:{ all -> 0x03b4 }
            r11 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r11]     // Catch:{ all -> 0x03b4 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x03b4 }
            java.lang.String r10 = setMin(r5, r9, r10)     // Catch:{ all -> 0x03b4 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x03b4 }
            r12 = 1028(0x404, float:1.44E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x03b4 }
            r13 = 999(0x3e7, float:1.4E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x03b4 }
            byte[] r14 = getMax     // Catch:{ all -> 0x03b4 }
            r15 = 145(0x91, float:2.03E-43)
            byte r14 = r14[r15]     // Catch:{ all -> 0x03b4 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x03b4 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x03b4 }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x03b4 }
            byte[] r14 = getMax     // Catch:{ all -> 0x03b4 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x03b4 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x03b4 }
            java.lang.String r14 = setMin(r5, r9, r14)     // Catch:{ all -> 0x03b4 }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x03b4 }
            r13[r8] = r14     // Catch:{ all -> 0x03b4 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r13)     // Catch:{ all -> 0x03b4 }
            java.lang.Object r0 = r10.invoke(r0, r7)     // Catch:{ all -> 0x03b4 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x03b4 }
            int r7 = r0.length
            int[] r7 = new int[r7]
            r10 = 0
        L_0x006c:
            int r12 = r0.length
            r13 = 35
            if (r10 >= r12) goto L_0x0106
            r12 = r0[r10]
            java.lang.Object[] r14 = new java.lang.Object[r6]     // Catch:{ all -> 0x00fd }
            r14[r8] = r12     // Catch:{ all -> 0x00fd }
            byte[] r12 = getMax     // Catch:{ all -> 0x00fd }
            byte r12 = r12[r8]     // Catch:{ all -> 0x00fd }
            int r12 = r12 + r6
            short r12 = (short) r12     // Catch:{ all -> 0x00fd }
            r15 = r12 | 906(0x38a, float:1.27E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fd }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fd }
            byte r4 = r16[r11]     // Catch:{ all -> 0x00fd }
            byte r4 = (byte) r4     // Catch:{ all -> 0x00fd }
            java.lang.String r4 = setMin(r12, r15, r4)     // Catch:{ all -> 0x00fd }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x00fd }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fd }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fd }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fd }
            byte r13 = r16[r13]     // Catch:{ all -> 0x00fd }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fd }
            java.lang.String r12 = setMin(r12, r15, r13)     // Catch:{ all -> 0x00fd }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x00fd }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fd }
            byte r15 = r15[r11]     // Catch:{ all -> 0x00fd }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fd }
            java.lang.String r15 = setMin(r5, r9, r15)     // Catch:{ all -> 0x00fd }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fd }
            r13[r8] = r15     // Catch:{ all -> 0x00fd }
            java.lang.reflect.Method r4 = r4.getMethod(r12, r13)     // Catch:{ all -> 0x00fd }
            r12 = 0
            java.lang.Object r4 = r4.invoke(r12, r14)     // Catch:{ all -> 0x00fd }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f4 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x00f4 }
            int r13 = r13 + r6
            short r13 = (short) r13     // Catch:{ all -> 0x00f4 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f4 }
            byte r15 = r15[r11]     // Catch:{ all -> 0x00f4 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f4 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f4 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f4 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f4 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f4 }
            r18 = 76
            byte r8 = r16[r18]     // Catch:{ all -> 0x00f4 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x00f4 }
            java.lang.String r8 = setMin(r14, r15, r8)     // Catch:{ all -> 0x00f4 }
            java.lang.reflect.Method r8 = r13.getMethod(r8, r12)     // Catch:{ all -> 0x00f4 }
            java.lang.Object r4 = r8.invoke(r4, r12)     // Catch:{ all -> 0x00f4 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x00f4 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x00f4 }
            r7[r10] = r4
            int r10 = r10 + 1
            r4 = 73
            r8 = 0
            goto L_0x006c
        L_0x00f4:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fc
            throw r1
        L_0x00fc:
            throw r0
        L_0x00fd:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0105
            throw r1
        L_0x0105:
            throw r0
        L_0x0106:
            r19 = 0
        L_0x0108:
            int r9 = r19 + 1
            r10 = 6
            r12 = 28
            r14 = 3
            r15 = 8
            r4 = 25
            r5 = 5
            r0 = r7[r19]     // Catch:{ all -> 0x0224 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x0224 }
            r8 = 2
            r11 = 4
            switch(r0) {
                case -23: goto L_0x0218;
                case -22: goto L_0x0210;
                case -21: goto L_0x0200;
                case -20: goto L_0x01f3;
                case -19: goto L_0x01ee;
                case -18: goto L_0x01e6;
                case -17: goto L_0x01de;
                case -16: goto L_0x01d4;
                case -15: goto L_0x01c7;
                case -14: goto L_0x01bf;
                case -13: goto L_0x01ae;
                case -12: goto L_0x01ad;
                case -11: goto L_0x01a7;
                case -10: goto L_0x019f;
                case -9: goto L_0x0199;
                case -8: goto L_0x0191;
                case -7: goto L_0x018b;
                case -6: goto L_0x0173;
                case -5: goto L_0x0160;
                case -4: goto L_0x0149;
                case -3: goto L_0x0138;
                case -2: goto L_0x0127;
                case -1: goto L_0x0120;
                default: goto L_0x011e;
            }     // Catch:{ all -> 0x0224 }
        L_0x011e:
            goto L_0x021e
        L_0x0120:
            r0 = 15
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 15
            goto L_0x0108
        L_0x0127:
            r1.getMax(r13)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 == r10) goto L_0x0134
            r4 = 11
            r0 = 24
            goto L_0x020d
        L_0x0134:
            r0 = 19
            goto L_0x020d
        L_0x0138:
            r1.length = r6     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r5)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0224 }
            r0.toFloatRange()     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x0149:
            r1.length = r6     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r5)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0224 }
            o.setRetryCount r0 = r0.toIntRange     // Catch:{ all -> 0x0224 }
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
        L_0x0159:
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x0160:
            r1.length = r6     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r5)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0224 }
            o.FragmentStateAdapter$2 r0 = r0.values()     // Catch:{ all -> 0x0224 }
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
            goto L_0x0159
        L_0x0173:
            r1.length = r8     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r5)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x0224 }
            r1.getMax(r5)     // Catch:{ all -> 0x0224 }
            java.lang.Object r8 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            o.setGlobalUserData r8 = (o.setGlobalUserData) r8     // Catch:{ all -> 0x0224 }
            r0.execute(r8)     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x018b:
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 27
            goto L_0x0108
        L_0x0191:
            r0 = 23
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 23
            goto L_0x0108
        L_0x0199:
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 1
            goto L_0x0108
        L_0x019f:
            r1.getMax(r8)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0224 }
            throw r0     // Catch:{ all -> 0x0224 }
        L_0x01a7:
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 51
            goto L_0x0108
        L_0x01ad:
            return
        L_0x01ae:
            r1.getMax(r13)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 == r14) goto L_0x01b8
            r4 = 85
            goto L_0x01bc
        L_0x01b8:
            r0 = 79
            r8 = 79
        L_0x01bc:
            r19 = r8
            goto L_0x0220
        L_0x01bf:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0224 }
            r1.length = r0     // Catch:{ all -> 0x0224 }
        L_0x01c3:
            r1.getMax(r15)     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x01c7:
            r1.length = r6     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r4)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x01d4:
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 != 0) goto L_0x020c
            r0 = 47
            goto L_0x020d
        L_0x01de:
            r0 = 12
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 12
            goto L_0x0108
        L_0x01e6:
            r0 = 49
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 49
            goto L_0x0108
        L_0x01ee:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0224 }
            r1.length = r0     // Catch:{ all -> 0x0224 }
            goto L_0x01c3
        L_0x01f3:
            r1.length = r6     // Catch:{ all -> 0x0224 }
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            r1.getMax(r4)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0224 }
            goto L_0x021e
        L_0x0200:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 != 0) goto L_0x020c
            r0 = 76
            goto L_0x020d
        L_0x020c:
            r0 = r9
        L_0x020d:
            r19 = r0
            goto L_0x0220
        L_0x0210:
            r0 = 21
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 21
            goto L_0x0108
        L_0x0218:
            r11 = 4873(0x1309, float:6.829E-42)
            r19 = 10
            goto L_0x0108
        L_0x021e:
            r19 = r9
        L_0x0220:
            r11 = 4873(0x1309, float:6.829E-42)
            goto L_0x0108
        L_0x0224:
            r0 = move-exception
            byte[] r8 = getMax
            r11 = 41
            byte r6 = r8[r11]
            short r6 = (short) r6
            r13 = 973(0x3cd, float:1.363E-42)
            short r13 = (short) r13
            r20 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r20]
            byte r8 = (byte) r8
            java.lang.String r6 = setMin(r6, r13, r8)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r8 = 77
            if (r6 == 0) goto L_0x0254
            if (r9 < r14) goto L_0x0254
            r6 = 10
            if (r9 > r6) goto L_0x0254
            r6 = 4873(0x1309, float:6.829E-42)
            r8 = 78
        L_0x024e:
            r10 = 51
        L_0x0250:
            r12 = 73
            goto L_0x03a3
        L_0x0254:
            r6 = 970(0x3ca, float:1.359E-42)
            short r6 = (short) r6
            byte[] r14 = getMax
            r20 = 4873(0x1309, float:6.829E-42)
            byte r14 = r14[r20]
            byte r14 = (byte) r14
            java.lang.String r6 = setMin(r3, r6, r14)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0273
            if (r9 < r5) goto L_0x0273
            if (r9 > r10) goto L_0x0273
        L_0x0270:
            r6 = 4873(0x1309, float:6.829E-42)
            goto L_0x024e
        L_0x0273:
            r5 = 5397(0x1515, float:7.563E-42)
            short r5 = (short) r5
            byte[] r6 = getMax
            r10 = 4873(0x1309, float:6.829E-42)
            byte r6 = r6[r10]
            byte r6 = (byte) r6
            java.lang.String r6 = setMin(r5, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0292
            if (r9 < r15) goto L_0x0292
            r6 = 10
            if (r9 > r6) goto L_0x0294
            goto L_0x0270
        L_0x0292:
            r6 = 10
        L_0x0294:
            if (r9 < r4) goto L_0x02a1
            r4 = 27
            if (r9 > r4) goto L_0x02a1
            r4 = 14
            r6 = 4873(0x1309, float:6.829E-42)
            r8 = 14
            goto L_0x024e
        L_0x02a1:
            byte[] r4 = getMax
            byte r10 = r4[r11]
            short r10 = (short) r10
            r14 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r14]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r10, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02c0
            r4 = 27
            if (r9 < r4) goto L_0x02c2
            if (r9 > r12) goto L_0x02c2
            goto L_0x0270
        L_0x02c0:
            r4 = 27
        L_0x02c2:
            byte[] r10 = getMax
            r12 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r12]
            byte r10 = (byte) r10
            java.lang.String r10 = setMin(r5, r13, r10)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x02e0
            r10 = 42
            if (r9 < r10) goto L_0x02e0
            r10 = 43
            if (r9 > r10) goto L_0x02e0
            goto L_0x0270
        L_0x02e0:
            int r10 = setMin
            r10 = r10 | 2374(0x946, float:3.327E-42)
            short r10 = (short) r10
            r12 = 965(0x3c5, float:1.352E-42)
            short r12 = (short) r12
            byte[] r14 = getMax
            r15 = 4873(0x1309, float:6.829E-42)
            byte r14 = r14[r15]
            byte r14 = (byte) r14
            java.lang.String r10 = setMin(r10, r12, r14)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x0309
            r10 = 51
            if (r9 < r10) goto L_0x030b
            if (r9 > r8) goto L_0x030b
            r6 = 4873(0x1309, float:6.829E-42)
            r8 = 78
            goto L_0x0250
        L_0x0309:
            r10 = 51
        L_0x030b:
            int r12 = setMin
            r12 = r12 | 7559(0x1d87, float:1.0592E-41)
            short r12 = (short) r12
            r14 = 975(0x3cf, float:1.366E-42)
            short r14 = (short) r14
            byte[] r15 = getMax
            r16 = 4873(0x1309, float:6.829E-42)
            byte r15 = r15[r16]
            byte r15 = (byte) r15
            java.lang.String r12 = setMin(r12, r14, r15)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x0334
            r12 = 72
            if (r9 < r12) goto L_0x0334
            r12 = 73
            if (r9 > r12) goto L_0x0336
        L_0x0330:
            r6 = 4873(0x1309, float:6.829E-42)
            goto L_0x03a3
        L_0x0334:
            r12 = 73
        L_0x0336:
            r14 = 86
            r15 = 89
            if (r9 < r14) goto L_0x0345
            if (r9 > r15) goto L_0x0345
            r5 = 48
            r6 = 4873(0x1309, float:6.829E-42)
            r8 = 48
            goto L_0x03a3
        L_0x0345:
            r14 = 5427(0x1533, float:7.605E-42)
            short r14 = (short) r14
            r4 = 978(0x3d2, float:1.37E-42)
            short r4 = (short) r4
            byte[] r16 = getMax
            r17 = 4873(0x1309, float:6.829E-42)
            byte r6 = r16[r17]
            byte r6 = (byte) r6
            java.lang.String r4 = setMin(r14, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0369
            r4 = 80
            if (r9 < r4) goto L_0x0369
            r4 = 81
            if (r9 > r4) goto L_0x0369
            goto L_0x0330
        L_0x0369:
            byte[] r4 = getMax
            byte r6 = r4[r11]
            short r6 = (short) r6
            r11 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r11]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r6, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0388
            r4 = 82
            if (r9 < r4) goto L_0x0388
            if (r9 > r15) goto L_0x0388
            goto L_0x0330
        L_0x0388:
            byte[] r4 = getMax
            r6 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r6]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r5, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03b3
            r4 = 85
            if (r9 < r4) goto L_0x03b3
            if (r9 > r15) goto L_0x03b3
        L_0x03a3:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r19 = r8
            r6 = 1
            r11 = 4873(0x1309, float:6.829E-42)
            r13 = 35
            goto L_0x0108
        L_0x03b3:
            throw r0
        L_0x03b4:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03bc
            throw r1
        L_0x03bc:
            goto L_0x03be
        L_0x03bd:
            throw r0
        L_0x03be:
            goto L_0x03bd
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.equals():void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v20, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v27, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v43, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v45, resolved type: int} */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x035d, code lost:
        r12 = 35;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x0361, code lost:
        r13 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:114:0x0364, code lost:
        r13 = r12;
        r0 = r14;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:162:0x0108, code lost:
        r12 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:28:0x0119, code lost:
        r12 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x013c, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x0175, code lost:
        r12 = r12;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x03ba A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x03dc  */
    /* JADX WARNING: Removed duplicated region for block: B:141:0x03e7  */
    /* JADX WARNING: Removed duplicated region for block: B:148:0x040b  */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x0417  */
    /* JADX WARNING: Removed duplicated region for block: B:93:0x0304 A[Catch:{ all -> 0x02fa, all -> 0x0306 }] */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x0305 A[Catch:{ all -> 0x02fa, all -> 0x0306 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void getMax() {
        /*
            r22 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r22
            r1.<init>(r2)
            r0 = 3613(0xe1d, float:5.063E-42)
            short r0 = (short) r0
            r3 = 755(0x2f3, float:1.058E-42)
            short r3 = (short) r3
            r4 = 73
            byte r5 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r5)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r5 = 1003(0x3eb, float:1.406E-42)
            short r5 = (short) r5
            r6 = r5 & 94
            byte r6 = (byte) r6
            java.lang.String r3 = setMin(r3, r5, r6)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x0418 }
            r7 = 0
            r6[r7] = r3     // Catch:{ all -> 0x0418 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x0418 }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0418 }
            byte[] r9 = getMax     // Catch:{ all -> 0x0418 }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x0418 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0418 }
            java.lang.String r9 = setMin(r3, r8, r9)     // Catch:{ all -> 0x0418 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0418 }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0418 }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0418 }
            byte[] r13 = getMax     // Catch:{ all -> 0x0418 }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0418 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0418 }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x0418 }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x0418 }
            byte[] r13 = getMax     // Catch:{ all -> 0x0418 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0418 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0418 }
            java.lang.String r13 = setMin(r3, r8, r13)     // Catch:{ all -> 0x0418 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0418 }
            r12[r7] = r13     // Catch:{ all -> 0x0418 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x0418 }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x0418 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0418 }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006c:
            int r11 = r0.length
            r12 = 35
            r13 = 0
            if (r9 >= r11) goto L_0x0105
            r11 = r0[r9]
            java.lang.Object[] r14 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fc }
            r14[r7] = r11     // Catch:{ all -> 0x00fc }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fc }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fc }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fc }
            r15 = r11 | 906(0x38a, float:1.27E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fc }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fc }
            byte r4 = r16[r10]     // Catch:{ all -> 0x00fc }
            byte r4 = (byte) r4     // Catch:{ all -> 0x00fc }
            java.lang.String r4 = setMin(r11, r15, r4)     // Catch:{ all -> 0x00fc }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x00fc }
            r11 = 3277(0xccd, float:4.592E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x00fc }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fc }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fc }
            byte r12 = r16[r12]     // Catch:{ all -> 0x00fc }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fc }
            java.lang.String r11 = setMin(r11, r15, r12)     // Catch:{ all -> 0x00fc }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fc }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fc }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fc }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fc }
            java.lang.String r15 = setMin(r3, r8, r15)     // Catch:{ all -> 0x00fc }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fc }
            r12[r7] = r15     // Catch:{ all -> 0x00fc }
            java.lang.reflect.Method r4 = r4.getMethod(r11, r12)     // Catch:{ all -> 0x00fc }
            java.lang.Object r4 = r4.invoke(r13, r14)     // Catch:{ all -> 0x00fc }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f3 }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00f3 }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00f3 }
            r12 = r11 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f3 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f3 }
            byte r14 = r14[r10]     // Catch:{ all -> 0x00f3 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f3 }
            java.lang.String r11 = setMin(r11, r12, r14)     // Catch:{ all -> 0x00f3 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f3 }
            r12 = 3283(0xcd3, float:4.6E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00f3 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f3 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f3 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f3 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f3 }
            java.lang.String r12 = setMin(r12, r14, r15)     // Catch:{ all -> 0x00f3 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r13)     // Catch:{ all -> 0x00f3 }
            java.lang.Object r4 = r11.invoke(r4, r13)     // Catch:{ all -> 0x00f3 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x00f3 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x00f3 }
            r6[r9] = r4
            int r9 = r9 + 1
            r4 = 73
            goto L_0x006c
        L_0x00f3:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fb
            throw r1
        L_0x00fb:
            throw r0
        L_0x00fc:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0104
            throw r1
        L_0x0104:
            throw r0
        L_0x0105:
            r9 = 2
            r11 = 4
            r0 = 0
        L_0x0108:
            int r14 = r0 + 1
            r0 = r6[r0]     // Catch:{ all -> 0x036d }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x036d }
            r4 = 3
            r10 = 8
            r15 = 88
            r13 = 5
            switch(r0) {
                case -28: goto L_0x035b;
                case -27: goto L_0x0359;
                case -26: goto L_0x0353;
                case -25: goto L_0x0341;
                case -24: goto L_0x0330;
                case -23: goto L_0x0326;
                case -22: goto L_0x030d;
                case -21: goto L_0x02b4;
                case -20: goto L_0x0290;
                case -19: goto L_0x027e;
                case -18: goto L_0x0277;
                case -17: goto L_0x0216;
                case -16: goto L_0x0202;
                case -15: goto L_0x01f0;
                case -14: goto L_0x01a7;
                case -13: goto L_0x01a2;
                case -12: goto L_0x019d;
                case -11: goto L_0x0188;
                case -10: goto L_0x0179;
                case -9: goto L_0x0174;
                case -8: goto L_0x0164;
                case -7: goto L_0x0153;
                case -6: goto L_0x0140;
                case -5: goto L_0x012c;
                case -4: goto L_0x0129;
                case -3: goto L_0x0128;
                case -2: goto L_0x0120;
                case -1: goto L_0x011d;
                default: goto L_0x0119;
            }
        L_0x0119:
            r4 = 2
            r12 = 0
            goto L_0x0364
        L_0x011d:
            r0 = 73
            goto L_0x0175
        L_0x0120:
            r1.getMax(r9)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x02af }
            throw r0     // Catch:{ all -> 0x02af }
        L_0x0128:
            return
        L_0x0129:
            r0 = 16
            goto L_0x0175
        L_0x012c:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x02af }
            o.AppPreDownloadManager$1 r0 = r0.toString     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
        L_0x013c:
            r1.getMax(r15)     // Catch:{ all -> 0x02af }
            goto L_0x0119
        L_0x0140:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            o.GriverAppxLoadFailedPoint r0 = (o.GriverAppxLoadFailedPoint) r0     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r0.execute()     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x0153:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x02af }
            o.isUserInputEnabled$length r0 = r0.IsOverlapping     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x0164:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            o.isUserInputEnabled$length r0 = (o.isUserInputEnabled.length) r0     // Catch:{ all -> 0x02af }
            r0.getMin()     // Catch:{ all -> 0x02af }
            goto L_0x0119
        L_0x0174:
            r0 = 2
        L_0x0175:
            r10 = 4873(0x1309, float:6.829E-42)
            goto L_0x0361
        L_0x0179:
            r1.getMax(r12)     // Catch:{ all -> 0x02af }
            int r0 = r1.setMax     // Catch:{ all -> 0x02af }
            if (r0 == r4) goto L_0x0185
            if (r0 == r10) goto L_0x0183
            goto L_0x0185
        L_0x0183:
            r0 = 6
            goto L_0x0175
        L_0x0185:
            r0 = 19
            goto L_0x0175
        L_0x0188:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            int r0 = super.hashCode()     // Catch:{ all -> 0x02af }
            r1.length = r0     // Catch:{ all -> 0x02af }
            r1.getMax(r10)     // Catch:{ all -> 0x02af }
            goto L_0x0119
        L_0x019d:
            java.lang.String r0 = "Qrcode"
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x01a2:
            java.lang.String r0 = "[QrcodeGenerate]"
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x01a7:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ all -> 0x01e7 }
            r4[r7] = r0     // Catch:{ all -> 0x01e7 }
            r0 = 7582(0x1d9e, float:1.0625E-41)
            short r0 = (short) r0     // Catch:{ all -> 0x01e7 }
            r10 = 981(0x3d5, float:1.375E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x01e7 }
            byte[] r13 = getMax     // Catch:{ all -> 0x01e7 }
            r19 = 4873(0x1309, float:6.829E-42)
            byte r13 = r13[r19]     // Catch:{ all -> 0x01e7 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x01e7 }
            java.lang.String r0 = setMin(r0, r10, r13)     // Catch:{ all -> 0x01e7 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x01e7 }
            java.lang.Class[] r10 = new java.lang.Class[r5]     // Catch:{ all -> 0x01e7 }
            byte[] r13 = getMax     // Catch:{ all -> 0x01e7 }
            byte r13 = r13[r19]     // Catch:{ all -> 0x01e7 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x01e7 }
            java.lang.String r13 = setMin(r3, r8, r13)     // Catch:{ all -> 0x01e7 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x01e7 }
            r10[r7] = r13     // Catch:{ all -> 0x01e7 }
            java.lang.reflect.Constructor r0 = r0.getDeclaredConstructor(r10)     // Catch:{ all -> 0x01e7 }
            java.lang.Object r0 = r0.newInstance(r4)     // Catch:{ all -> 0x01e7 }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x01e7:
            r0 = move-exception
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x02af }
            if (r4 == 0) goto L_0x01ef
            throw r4     // Catch:{ all -> 0x02af }
        L_0x01ef:
            throw r0     // Catch:{ all -> 0x02af }
        L_0x01f0:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Class r0 = r0.getClass()     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x0202:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Class r0 = (java.lang.Class) r0     // Catch:{ all -> 0x02af }
            java.lang.String r0 = r0.getName()     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x0216:
            r1.length = r9     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Object[] r10 = new java.lang.Object[r5]     // Catch:{ all -> 0x026e }
            r10[r7] = r4     // Catch:{ all -> 0x026e }
            r4 = 7582(0x1d9e, float:1.0625E-41)
            short r4 = (short) r4     // Catch:{ all -> 0x026e }
            r13 = 981(0x3d5, float:1.375E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x026e }
            byte[] r20 = getMax     // Catch:{ all -> 0x026e }
            r19 = 4873(0x1309, float:6.829E-42)
            byte r12 = r20[r19]     // Catch:{ all -> 0x026e }
            byte r12 = (byte) r12     // Catch:{ all -> 0x026e }
            java.lang.String r4 = setMin(r4, r13, r12)     // Catch:{ all -> 0x026e }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x026e }
            r12 = 7920(0x1ef0, float:1.1098E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x026e }
            r13 = 998(0x3e6, float:1.398E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x026e }
            byte[] r20 = getMax     // Catch:{ all -> 0x026e }
            r21 = 70
            byte r9 = r20[r21]     // Catch:{ all -> 0x026e }
            byte r9 = (byte) r9     // Catch:{ all -> 0x026e }
            java.lang.String r9 = setMin(r12, r13, r9)     // Catch:{ all -> 0x026e }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x026e }
            byte[] r13 = getMax     // Catch:{ all -> 0x026e }
            r19 = 4873(0x1309, float:6.829E-42)
            byte r13 = r13[r19]     // Catch:{ all -> 0x026e }
            byte r13 = (byte) r13     // Catch:{ all -> 0x026e }
            java.lang.String r13 = setMin(r3, r8, r13)     // Catch:{ all -> 0x026e }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x026e }
            r12[r7] = r13     // Catch:{ all -> 0x026e }
            java.lang.reflect.Method r4 = r4.getMethod(r9, r12)     // Catch:{ all -> 0x026e }
            java.lang.Object r0 = r4.invoke(r0, r10)     // Catch:{ all -> 0x026e }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x026e:
            r0 = move-exception
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x02af }
            if (r4 == 0) goto L_0x0276
            throw r4     // Catch:{ all -> 0x02af }
        L_0x0276:
            throw r0     // Catch:{ all -> 0x02af }
        L_0x0277:
            java.lang.String r0 = "stop onError"
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x027e:
            r1.length = r5     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x02af }
            r1.isInside = r0     // Catch:{ all -> 0x02af }
            goto L_0x013c
        L_0x0290:
            r1.length = r4     // Catch:{ all -> 0x02af }
            r1.getMax(r11)     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x02af }
            r1.getMax(r13)     // Catch:{ all -> 0x02af }
            java.lang.Object r9 = r1.IsOverlapping     // Catch:{ all -> 0x02af }
            java.lang.Throwable r9 = (java.lang.Throwable) r9     // Catch:{ all -> 0x02af }
            o.updateActionSheetContent.e(r0, r4, r9)     // Catch:{ all -> 0x02af }
            goto L_0x0119
        L_0x02af:
            r0 = move-exception
            r4 = 2
            r12 = 0
            goto L_0x0370
        L_0x02b4:
            r1.length = r5     // Catch:{ all -> 0x0309 }
            r1.getMax(r11)     // Catch:{ all -> 0x0309 }
            r1.getMax(r13)     // Catch:{ all -> 0x0309 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0309 }
            byte[] r4 = getMax     // Catch:{ all -> 0x02fc }
            r9 = 19
            byte r4 = r4[r9]     // Catch:{ all -> 0x02fc }
            short r4 = (short) r4     // Catch:{ all -> 0x02fc }
            r9 = r4 & 985(0x3d9, float:1.38E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02fc }
            byte[] r10 = getMax     // Catch:{ all -> 0x02fc }
            r12 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x02fc }
            byte r10 = (byte) r10     // Catch:{ all -> 0x02fc }
            java.lang.String r4 = setMin(r4, r9, r10)     // Catch:{ all -> 0x02fc }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x02fc }
            r9 = 4864(0x1300, float:6.816E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02fc }
            r10 = 994(0x3e2, float:1.393E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x02fc }
            byte[] r12 = getMax     // Catch:{ all -> 0x02fc }
            r13 = 177(0xb1, float:2.48E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x02fc }
            int r12 = -r12
            byte r12 = (byte) r12     // Catch:{ all -> 0x02fc }
            java.lang.String r9 = setMin(r9, r10, r12)     // Catch:{ all -> 0x02fc }
            r12 = 0
            java.lang.reflect.Method r4 = r4.getMethod(r9, r12)     // Catch:{ all -> 0x02fa }
            java.lang.Object r0 = r4.invoke(r0, r12)     // Catch:{ all -> 0x02fa }
            r1.isInside = r0     // Catch:{ all -> 0x0306 }
            r1.getMax(r15)     // Catch:{ all -> 0x0306 }
            r4 = 2
            goto L_0x0364
        L_0x02fa:
            r0 = move-exception
            goto L_0x02fe
        L_0x02fc:
            r0 = move-exception
            r12 = 0
        L_0x02fe:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x0306 }
            if (r4 == 0) goto L_0x0305
            throw r4     // Catch:{ all -> 0x0306 }
        L_0x0305:
            throw r0     // Catch:{ all -> 0x0306 }
        L_0x0306:
            r0 = move-exception
            goto L_0x036f
        L_0x0309:
            r0 = move-exception
            r12 = 0
            goto L_0x036f
        L_0x030d:
            r4 = 2
            r12 = 0
            r1.length = r4     // Catch:{ all -> 0x0351 }
            r1.getMax(r11)     // Catch:{ all -> 0x0351 }
            r1.getMax(r13)     // Catch:{ all -> 0x0351 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0351 }
            o.isUserInputEnabled$length r0 = (o.isUserInputEnabled.length) r0     // Catch:{ all -> 0x0351 }
            r1.getMax(r13)     // Catch:{ all -> 0x0351 }
            java.lang.Object r9 = r1.IsOverlapping     // Catch:{ all -> 0x0351 }
            java.lang.String r9 = (java.lang.String) r9     // Catch:{ all -> 0x0351 }
            r0.onError(r9)     // Catch:{ all -> 0x0351 }
            goto L_0x0364
        L_0x0326:
            r4 = 2
            r12 = 0
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0351 }
            r1.length = r0     // Catch:{ all -> 0x0351 }
            r1.getMax(r10)     // Catch:{ all -> 0x0351 }
            goto L_0x0364
        L_0x0330:
            r4 = 2
            r12 = 0
            r1.length = r5     // Catch:{ all -> 0x0351 }
            r1.getMax(r11)     // Catch:{ all -> 0x0351 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x0351 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0351 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0351 }
            goto L_0x0364
        L_0x0341:
            r4 = 2
            r12 = 0
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x0351 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0351 }
            if (r0 != 0) goto L_0x034f
            r0 = 72
            goto L_0x0357
        L_0x034f:
            r0 = r14
            goto L_0x0357
        L_0x0351:
            r0 = move-exception
            goto L_0x0370
        L_0x0353:
            r4 = 2
            r12 = 0
            r0 = 17
        L_0x0357:
            r13 = r12
            goto L_0x0366
        L_0x0359:
            r0 = 4
            goto L_0x035d
        L_0x035b:
            r0 = 49
        L_0x035d:
            r10 = 4873(0x1309, float:6.829E-42)
            r12 = 35
        L_0x0361:
            r13 = 0
            goto L_0x0108
        L_0x0364:
            r13 = r12
            r0 = r14
        L_0x0366:
            r9 = 2
            r10 = 4873(0x1309, float:6.829E-42)
            r12 = 35
            goto L_0x0108
        L_0x036d:
            r0 = move-exception
            r12 = r13
        L_0x036f:
            r4 = 2
        L_0x0370:
            r9 = 5485(0x156d, float:7.686E-42)
            short r9 = (short) r9
            r10 = 985(0x3d9, float:1.38E-42)
            short r10 = (short) r10
            byte[] r13 = getMax
            r15 = 4873(0x1309, float:6.829E-42)
            byte r13 = r13[r15]
            byte r13 = (byte) r13
            java.lang.String r13 = setMin(r9, r10, r13)
            java.lang.Class r13 = java.lang.Class.forName(r13)
            boolean r13 = r13.isInstance(r0)
            r15 = 14
            r4 = 30
            if (r13 == 0) goto L_0x039a
            r13 = 6
            if (r14 < r13) goto L_0x039a
            if (r14 > r15) goto L_0x039a
        L_0x0394:
            r10 = 73
        L_0x0396:
            r17 = 4873(0x1309, float:6.829E-42)
            goto L_0x040d
        L_0x039a:
            byte[] r13 = getMax
            r18 = 4873(0x1309, float:6.829E-42)
            byte r13 = r13[r18]
            byte r13 = (byte) r13
            java.lang.String r9 = setMin(r9, r10, r13)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x03b6
            r9 = 19
            if (r14 < r9) goto L_0x03b6
            if (r14 > r4) goto L_0x03b6
            goto L_0x0394
        L_0x03b6:
            r9 = 26
            if (r14 < r9) goto L_0x03bf
            if (r14 > r4) goto L_0x03bf
            r4 = 15
            goto L_0x0394
        L_0x03bf:
            byte[] r4 = getMax
            r9 = 41
            byte r10 = r4[r9]
            short r10 = (short) r10
            r13 = 973(0x3cd, float:1.363E-42)
            short r13 = (short) r13
            r18 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r18]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r10, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e7
            r4 = 49
            r10 = 73
            if (r14 < r4) goto L_0x03eb
            if (r14 > r10) goto L_0x03eb
            r4 = 14
            goto L_0x0396
        L_0x03e7:
            r4 = 49
            r10 = 73
        L_0x03eb:
            byte[] r16 = getMax
            byte r9 = r16[r9]
            short r9 = (short) r9
            r17 = 4873(0x1309, float:6.829E-42)
            byte r4 = r16[r17]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r9, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0417
            r4 = 68
            if (r14 < r4) goto L_0x0417
            r4 = 69
            if (r14 > r4) goto L_0x0417
            r4 = 14
        L_0x040d:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r0 = r4
            goto L_0x0357
        L_0x0417:
            throw r0
        L_0x0418:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0420
            throw r1
        L_0x0420:
            goto L_0x0422
        L_0x0421:
            throw r0
        L_0x0422:
            goto L_0x0421
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMax():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x02f8, code lost:
        if (r13 <= 79) goto L_0x031e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x0166, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x018a, code lost:
        r1.getMax(8);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void getMax(int r19) {
        /*
            r18 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r18
            r0 = r19
            r1.<init>((java.lang.Object) r2, (int) r0)
            r0 = 6681(0x1a19, float:9.362E-42)
            short r0 = (short) r0
            r3 = 733(0x2dd, float:1.027E-42)
            short r3 = (short) r3
            r4 = r3 & 363(0x16b, float:5.09E-43)
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x032a }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x032a }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x032a }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x032a }
            byte[] r8 = getMax     // Catch:{ all -> 0x032a }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x032a }
            byte r8 = (byte) r8     // Catch:{ all -> 0x032a }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x032a }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x032a }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x032a }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x032a }
            byte[] r12 = getMax     // Catch:{ all -> 0x032a }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x032a }
            byte r12 = (byte) r12     // Catch:{ all -> 0x032a }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x032a }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x032a }
            byte[] r12 = getMax     // Catch:{ all -> 0x032a }
            byte r12 = r12[r9]     // Catch:{ all -> 0x032a }
            byte r12 = (byte) r12     // Catch:{ all -> 0x032a }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x032a }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x032a }
            r11[r6] = r12     // Catch:{ all -> 0x032a }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x032a }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x032a }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x032a }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006e:
            int r10 = r0.length
            if (r8 >= r10) goto L_0x0105
            r10 = r0[r8]
            java.lang.Object[] r11 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fc }
            r11[r6] = r10     // Catch:{ all -> 0x00fc }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fc }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fc }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fc }
            r12 = r10 | 906(0x38a, float:1.27E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fc }
            byte[] r13 = getMax     // Catch:{ all -> 0x00fc }
            byte r13 = r13[r9]     // Catch:{ all -> 0x00fc }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fc }
            java.lang.String r10 = setMin(r10, r12, r13)     // Catch:{ all -> 0x00fc }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fc }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fc }
            r13 = 997(0x3e5, float:1.397E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fc }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fc }
            r15 = 35
            byte r14 = r14[r15]     // Catch:{ all -> 0x00fc }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fc }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00fc }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fc }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fc }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fc }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fc }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fc }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fc }
            r13[r6] = r14     // Catch:{ all -> 0x00fc }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r13)     // Catch:{ all -> 0x00fc }
            r12 = 0
            java.lang.Object r10 = r10.invoke(r12, r11)     // Catch:{ all -> 0x00fc }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f3 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00f3 }
            int r11 = r11 + r4
            short r11 = (short) r11     // Catch:{ all -> 0x00f3 }
            r13 = r11 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f3 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f3 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f3 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f3 }
            java.lang.String r11 = setMin(r11, r13, r14)     // Catch:{ all -> 0x00f3 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f3 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f3 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f3 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f3 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f3 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f3 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f3 }
            java.lang.reflect.Method r11 = r11.getMethod(r13, r12)     // Catch:{ all -> 0x00f3 }
            java.lang.Object r10 = r11.invoke(r10, r12)     // Catch:{ all -> 0x00f3 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f3 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f3 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006e
        L_0x00f3:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fb
            throw r1
        L_0x00fb:
            throw r0
        L_0x00fc:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0104
            throw r1
        L_0x0104:
            throw r0
        L_0x0105:
            r7 = 17
            r8 = 52
            r10 = 28
            r11 = 2
            r12 = 4
        L_0x010d:
            int r13 = r6 + 1
            r0 = r5[r6]     // Catch:{ all -> 0x01f2 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01f2 }
            r6 = 88
            r14 = 8
            r15 = 25
            r3 = 5
            switch(r0) {
                case -23: goto L_0x01eb;
                case -22: goto L_0x01dc;
                case -21: goto L_0x01cf;
                case -20: goto L_0x01ca;
                case -19: goto L_0x01c7;
                case -18: goto L_0x01c4;
                case -17: goto L_0x01b7;
                case -16: goto L_0x01af;
                case -15: goto L_0x01ac;
                case -14: goto L_0x01a8;
                case -13: goto L_0x019b;
                case -12: goto L_0x018e;
                case -11: goto L_0x0186;
                case -10: goto L_0x0183;
                case -9: goto L_0x016b;
                case -8: goto L_0x0156;
                case -7: goto L_0x0145;
                case -6: goto L_0x0142;
                case -5: goto L_0x0141;
                case -4: goto L_0x013e;
                case -3: goto L_0x0126;
                case -2: goto L_0x0123;
                case -1: goto L_0x0121;
                default: goto L_0x011f;
            }     // Catch:{ all -> 0x01f2 }
        L_0x011f:
            goto L_0x01ef
        L_0x0121:
            r6 = 6
            goto L_0x010d
        L_0x0123:
            r6 = 9
            goto L_0x010d
        L_0x0126:
            r1.length = r11     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r3)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x01f2 }
            r1.getMax(r3)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r3 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            o.setGlobalUserData r3 = (o.setGlobalUserData) r3     // Catch:{ all -> 0x01f2 }
            r0.execute(r3)     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x013e:
            r6 = 17
            goto L_0x010d
        L_0x0141:
            return
        L_0x0142:
            r6 = 28
            goto L_0x010d
        L_0x0145:
            r1.length = r4     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r3)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01f2 }
            r0.toFloatRange()     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x0156:
            r1.length = r4     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r3)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01f2 }
            o.getAppPreDownloadCacheManager r0 = r0.isInside     // Catch:{ all -> 0x01f2 }
            r1.isInside = r0     // Catch:{ all -> 0x01f2 }
        L_0x0166:
            r1.getMax(r6)     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x016b:
            r1.length = r11     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r3)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01f2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01f2 }
            int r3 = r1.setMax     // Catch:{ all -> 0x01f2 }
            o.FragmentStateAdapter$2 r0 = r0.setMax((int) r3)     // Catch:{ all -> 0x01f2 }
            r1.isInside = r0     // Catch:{ all -> 0x01f2 }
            goto L_0x0166
        L_0x0183:
            r6 = 55
            goto L_0x010d
        L_0x0186:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01f2 }
            r1.length = r0     // Catch:{ all -> 0x01f2 }
        L_0x018a:
            r1.getMax(r14)     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x018e:
            r1.length = r4     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01f2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01f2 }
            onNavigationEvent = r0     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x019b:
            r1.getMax(r10)     // Catch:{ all -> 0x01f2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01f2 }
            if (r0 != 0) goto L_0x01ef
            r0 = 26
            r6 = 26
            goto L_0x010d
        L_0x01a8:
            r6 = 52
            goto L_0x010d
        L_0x01ac:
            r6 = 4
            goto L_0x010d
        L_0x01af:
            r1.getMax(r11)     // Catch:{ all -> 0x01f2 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01f2 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01f2 }
            throw r0     // Catch:{ all -> 0x01f2 }
        L_0x01b7:
            r1.getMax(r10)     // Catch:{ all -> 0x01f2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01f2 }
            if (r0 != 0) goto L_0x01ef
            r0 = 51
            r6 = 51
            goto L_0x010d
        L_0x01c4:
            r6 = 1
            goto L_0x010d
        L_0x01c7:
            r6 = 2
            goto L_0x010d
        L_0x01ca:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01f2 }
            r1.length = r0     // Catch:{ all -> 0x01f2 }
            goto L_0x018a
        L_0x01cf:
            r1.length = r4     // Catch:{ all -> 0x01f2 }
            r1.getMax(r12)     // Catch:{ all -> 0x01f2 }
            r1.getMax(r15)     // Catch:{ all -> 0x01f2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01f2 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01f2 }
            goto L_0x01ef
        L_0x01dc:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x01f2 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01f2 }
            if (r0 != 0) goto L_0x01ef
            r0 = 78
            r6 = 78
            goto L_0x010d
        L_0x01eb:
            r6 = 53
            goto L_0x010d
        L_0x01ef:
            r6 = r13
            goto L_0x010d
        L_0x01f2:
            r0 = move-exception
            r3 = 97
            short r3 = (short) r3
            r6 = 976(0x3d0, float:1.368E-42)
            short r6 = (short) r6
            byte[] r14 = getMax
            byte r14 = r14[r9]
            byte r14 = (byte) r14
            java.lang.String r3 = setMin(r3, r6, r14)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            r6 = 27
            r14 = 54
            if (r3 == 0) goto L_0x0218
            if (r13 < r11) goto L_0x0218
            if (r13 > r12) goto L_0x0218
            r3 = 55
            goto L_0x031e
        L_0x0218:
            byte[] r3 = getMax
            r15 = 41
            byte r15 = r3[r15]
            short r15 = (short) r15
            r4 = 973(0x3cd, float:1.363E-42)
            short r4 = (short) r4
            byte r3 = r3[r9]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r15, r4, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0241
            r3 = 10
            if (r13 < r3) goto L_0x0241
            r3 = 11
            if (r13 > r3) goto L_0x0241
        L_0x023b:
            r3 = 55
            r6 = 54
            goto L_0x031e
        L_0x0241:
            int r3 = setMin
            r3 = r3 | 2374(0x946, float:3.327E-42)
            short r3 = (short) r3
            r15 = 965(0x3c5, float:1.352E-42)
            short r15 = (short) r15
            byte[] r17 = getMax
            byte r11 = r17[r9]
            byte r11 = (byte) r11
            java.lang.String r3 = setMin(r3, r15, r11)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0263
            r3 = 12
            if (r13 < r3) goto L_0x0263
            if (r13 > r7) goto L_0x0263
            goto L_0x023b
        L_0x0263:
            r3 = 5485(0x156d, float:7.686E-42)
            short r3 = (short) r3
            r11 = 985(0x3d9, float:1.38E-42)
            short r11 = (short) r11
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r3, r11, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            if (r15 == 0) goto L_0x0281
            if (r13 < r7) goto L_0x0281
            if (r13 > r6) goto L_0x0281
            goto L_0x023b
        L_0x0281:
            r15 = 5397(0x1515, float:7.563E-42)
            short r15 = (short) r15
            byte[] r17 = getMax
            byte r7 = r17[r9]
            byte r7 = (byte) r7
            java.lang.String r4 = setMin(r15, r4, r7)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x029e
            r4 = 22
            if (r13 < r4) goto L_0x029e
            if (r13 > r6) goto L_0x029e
            goto L_0x023b
        L_0x029e:
            byte[] r4 = getMax
            byte r4 = r4[r9]
            byte r4 = (byte) r4
            java.lang.String r3 = setMin(r3, r11, r4)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x02b6
            if (r13 < r10) goto L_0x02b6
            if (r13 > r8) goto L_0x02b6
            goto L_0x023b
        L_0x02b6:
            int r3 = setMin
            r3 = r3 | 68
            short r3 = (short) r3
            r4 = 974(0x3ce, float:1.365E-42)
            short r4 = (short) r4
            byte[] r7 = getMax
            byte r7 = r7[r9]
            byte r7 = (byte) r7
            java.lang.String r3 = setMin(r3, r4, r7)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x02d9
            r3 = 47
            if (r13 < r3) goto L_0x02d9
            if (r13 > r8) goto L_0x02d9
            goto L_0x023b
        L_0x02d9:
            r3 = 5427(0x1533, float:7.605E-42)
            short r3 = (short) r3
            r4 = 978(0x3d2, float:1.37E-42)
            short r4 = (short) r4
            byte[] r7 = getMax
            byte r7 = r7[r9]
            byte r7 = (byte) r7
            java.lang.String r3 = setMin(r3, r4, r7)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            r4 = 79
            if (r3 == 0) goto L_0x02fb
            r3 = 55
            if (r13 < r3) goto L_0x02fd
            if (r13 > r4) goto L_0x02fd
            goto L_0x031e
        L_0x02fb:
            r3 = 55
        L_0x02fd:
            byte[] r7 = getMax
            r11 = 5474(0x1562, float:7.671E-42)
            byte r11 = r7[r11]
            short r11 = (short) r11
            r14 = 969(0x3c9, float:1.358E-42)
            short r14 = (short) r14
            byte r7 = r7[r9]
            byte r7 = (byte) r7
            java.lang.String r7 = setMin(r11, r14, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0329
            r7 = 73
            if (r13 < r7) goto L_0x0329
            if (r13 > r4) goto L_0x0329
        L_0x031e:
            r1.isInside = r0
            r1.getMax(r8)
            r4 = 1
            r7 = 17
            r11 = 2
            goto L_0x010d
        L_0x0329:
            throw r0
        L_0x032a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0332
            throw r1
        L_0x0332:
            goto L_0x0334
        L_0x0333:
            throw r0
        L_0x0334:
            goto L_0x0333
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMax(int):void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void getMax(java.lang.String r19) {
        /*
            r18 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r18
            r0 = r19
            r1.<init>((java.lang.Object) r2, (java.lang.Object) r0)
            r0 = 529(0x211, float:7.41E-43)
            short r0 = (short) r0
            r3 = 902(0x386, float:1.264E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x022d }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x022d }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x022d }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x022d }
            byte[] r9 = getMax     // Catch:{ all -> 0x022d }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x022d }
            byte r9 = (byte) r9     // Catch:{ all -> 0x022d }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x022d }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x022d }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x022d }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x022d }
            byte[] r13 = getMax     // Catch:{ all -> 0x022d }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x022d }
            byte r13 = (byte) r13     // Catch:{ all -> 0x022d }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x022d }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x022d }
            byte[] r13 = getMax     // Catch:{ all -> 0x022d }
            byte r13 = r13[r10]     // Catch:{ all -> 0x022d }
            byte r13 = (byte) r13     // Catch:{ all -> 0x022d }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x022d }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x022d }
            r12[r7] = r13     // Catch:{ all -> 0x022d }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x022d }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x022d }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x022d }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006e:
            int r11 = r0.length
            if (r9 >= r11) goto L_0x0106
            r11 = r0[r9]
            java.lang.Object[] r12 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fd }
            r12[r7] = r11     // Catch:{ all -> 0x00fd }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fd }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fd }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fd }
            r13 = r11 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fd }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fd }
            byte r14 = r14[r10]     // Catch:{ all -> 0x00fd }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fd }
            java.lang.String r11 = setMin(r11, r13, r14)     // Catch:{ all -> 0x00fd }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00fd }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fd }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fd }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fd }
            r16 = 35
            byte r15 = r15[r16]     // Catch:{ all -> 0x00fd }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fd }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00fd }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fd }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fd }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fd }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fd }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00fd }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fd }
            r14[r7] = r15     // Catch:{ all -> 0x00fd }
            java.lang.reflect.Method r11 = r11.getMethod(r13, r14)     // Catch:{ all -> 0x00fd }
            r13 = 0
            java.lang.Object r11 = r11.invoke(r13, r12)     // Catch:{ all -> 0x00fd }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f4 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x00f4 }
            int r12 = r12 + r5
            short r12 = (short) r12     // Catch:{ all -> 0x00f4 }
            r14 = r12 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f4 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f4 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f4 }
            java.lang.String r12 = setMin(r12, r14, r15)     // Catch:{ all -> 0x00f4 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f4 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f4 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f4 }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00f4 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00f4 }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00f4 }
            java.lang.reflect.Method r7 = r12.getMethod(r7, r13)     // Catch:{ all -> 0x00f4 }
            java.lang.Object r7 = r7.invoke(r11, r13)     // Catch:{ all -> 0x00f4 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00f4 }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00f4 }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x006e
        L_0x00f4:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fc
            throw r1
        L_0x00fc:
            throw r0
        L_0x00fd:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0105
            throw r1
        L_0x0105:
            throw r0
        L_0x0106:
            r4 = 16
            r7 = 2
            r0 = 0
        L_0x010a:
            int r8 = r0 + 1
            r9 = 4
            r0 = r6[r0]     // Catch:{ all -> 0x01a1 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            r11 = 88
            r12 = 5
            switch(r0) {
                case -13: goto L_0x019b;
                case -12: goto L_0x018e;
                case -11: goto L_0x017f;
                case -10: goto L_0x0175;
                case -9: goto L_0x0174;
                case -8: goto L_0x0172;
                case -7: goto L_0x016f;
                case -6: goto L_0x0158;
                case -5: goto L_0x013d;
                case -4: goto L_0x0129;
                case -3: goto L_0x0126;
                case -2: goto L_0x011e;
                case -1: goto L_0x011b;
                default: goto L_0x0119;
            }     // Catch:{ all -> 0x01a1 }
        L_0x0119:
            goto L_0x019e
        L_0x011b:
            r0 = 10
            goto L_0x010a
        L_0x011e:
            r1.getMax(r7)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01a1 }
            throw r0     // Catch:{ all -> 0x01a1 }
        L_0x0126:
            r0 = 14
            goto L_0x010a
        L_0x0129:
            r1.length = r5     // Catch:{ all -> 0x01a1 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01a1 }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x01a1 }
            r1.isInside = r0     // Catch:{ all -> 0x01a1 }
        L_0x0139:
            r1.getMax(r11)     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x013d:
            o.onPageScrollStateChanged$2 r0 = new o.onPageScrollStateChanged$2     // Catch:{ all -> 0x01a1 }
            r1.length = r7     // Catch:{ all -> 0x01a1 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r13 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.onPageScrollStateChanged r13 = (o.onPageScrollStateChanged) r13     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r12 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            java.lang.String r12 = (java.lang.String) r12     // Catch:{ all -> 0x01a1 }
            r0.<init>(r12)     // Catch:{ all -> 0x01a1 }
            r1.isInside = r0     // Catch:{ all -> 0x01a1 }
            goto L_0x0139
        L_0x0158:
            r1.length = r7     // Catch:{ all -> 0x01a1 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x01a1 }
            r1.getMax(r12)     // Catch:{ all -> 0x01a1 }
            java.lang.Object r11 = r1.IsOverlapping     // Catch:{ all -> 0x01a1 }
            o.setGlobalUserData r11 = (o.setGlobalUserData) r11     // Catch:{ all -> 0x01a1 }
            r0.execute(r11)     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x016f:
            r0 = 16
            goto L_0x010a
        L_0x0172:
            r0 = 3
            goto L_0x010a
        L_0x0174:
            return
        L_0x0175:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x01a1 }
            r1.length = r0     // Catch:{ all -> 0x01a1 }
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x017f:
            r1.length = r5     // Catch:{ all -> 0x01a1 }
            r1.getMax(r9)     // Catch:{ all -> 0x01a1 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x01a1 }
            goto L_0x019e
        L_0x018e:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x01a1 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01a1 }
            if (r0 != 0) goto L_0x019e
            r0 = 32
            goto L_0x010a
        L_0x019b:
            r0 = 2
            goto L_0x010a
        L_0x019e:
            r0 = r8
            goto L_0x010a
        L_0x01a1:
            r0 = move-exception
            r11 = 97
            short r11 = (short) r11
            r12 = 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r10]
            byte r13 = (byte) r13
            java.lang.String r11 = setMin(r11, r12, r13)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            r12 = 9
            if (r11 == 0) goto L_0x01c3
            if (r8 < r9) goto L_0x01c3
            if (r8 > r12) goto L_0x01c3
        L_0x01c1:
            r12 = 1
            goto L_0x0222
        L_0x01c3:
            r9 = 970(0x3ca, float:1.359E-42)
            short r9 = (short) r9
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r9 = setMin(r3, r9, r11)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x01df
            r9 = 7
            if (r8 < r9) goto L_0x01df
            if (r8 > r12) goto L_0x01df
            goto L_0x01c1
        L_0x01df:
            r9 = 5397(0x1515, float:7.563E-42)
            short r9 = (short) r9
            r11 = 973(0x3cd, float:1.363E-42)
            short r11 = (short) r11
            byte[] r13 = getMax
            byte r13 = r13[r10]
            byte r13 = (byte) r13
            java.lang.String r9 = setMin(r9, r11, r13)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x01ff
            if (r8 < r4) goto L_0x01ff
            r9 = 17
            if (r8 > r9) goto L_0x01ff
            goto L_0x01c1
        L_0x01ff:
            int r9 = setMin
            r9 = r9 | 68
            short r9 = (short) r9
            r11 = 974(0x3ce, float:1.365E-42)
            short r11 = (short) r11
            byte[] r13 = getMax
            byte r13 = r13[r10]
            byte r13 = (byte) r13
            java.lang.String r9 = setMin(r9, r11, r13)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x022c
            r9 = 27
            if (r8 < r9) goto L_0x022c
            r9 = 28
            if (r8 > r9) goto L_0x022c
        L_0x0222:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r0 = r12
            goto L_0x010a
        L_0x022c:
            throw r0
        L_0x022d:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0235
            throw r1
        L_0x0235:
            goto L_0x0237
        L_0x0236:
            throw r0
        L_0x0237:
            goto L_0x0236
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMax(java.lang.String):void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x0172, code lost:
        r1.getMax(88);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void getMin() {
        /*
            r20 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r20
            r1.<init>(r2)
            r0 = 153(0x99, float:2.14E-43)
            short r0 = (short) r0
            r3 = 785(0x311, float:1.1E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x02c5 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x02c5 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x02c5 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x02c5 }
            byte[] r8 = getMax     // Catch:{ all -> 0x02c5 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x02c5 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x02c5 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x02c5 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x02c5 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x02c5 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x02c5 }
            byte[] r12 = getMax     // Catch:{ all -> 0x02c5 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x02c5 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x02c5 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x02c5 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x02c5 }
            byte[] r12 = getMax     // Catch:{ all -> 0x02c5 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x02c5 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x02c5 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x02c5 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x02c5 }
            r11[r6] = r12     // Catch:{ all -> 0x02c5 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x02c5 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x02c5 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02c5 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r12[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r13 = r10 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r13, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r15[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r13, r14, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fa }
            r13[r6] = r14     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r13)     // Catch:{ all -> 0x00fa }
            r11 = 0
            java.lang.Object r10 = r10.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x00f1 }
            int r12 = r12 + r4
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = r12 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r12 = r12.getMethod(r13, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r12.invoke(r10, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r3 = 10
            r7 = 23
            r8 = 38
        L_0x0109:
            r10 = 5
        L_0x010a:
            int r12 = r6 + 1
            r14 = 28
            r0 = r5[r6]     // Catch:{ all -> 0x01c8 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01c8 }
            r6 = 88
            r15 = 2
            r13 = 4
            switch(r0) {
                case -19: goto L_0x01c2;
                case -18: goto L_0x01be;
                case -17: goto L_0x01b1;
                case -16: goto L_0x01a9;
                case -15: goto L_0x01a5;
                case -14: goto L_0x018e;
                case -13: goto L_0x018a;
                case -12: goto L_0x0176;
                case -11: goto L_0x0162;
                case -10: goto L_0x0160;
                case -9: goto L_0x015d;
                case -8: goto L_0x0151;
                case -7: goto L_0x0141;
                case -6: goto L_0x0136;
                case -5: goto L_0x0126;
                case -4: goto L_0x0123;
                case -3: goto L_0x0120;
                case -2: goto L_0x011f;
                case -1: goto L_0x011d;
                default: goto L_0x011b;
            }     // Catch:{ all -> 0x01c8 }
        L_0x011b:
            goto L_0x01c5
        L_0x011d:
            r6 = 5
            goto L_0x010a
        L_0x011f:
            return
        L_0x0120:
            r6 = 9
            goto L_0x010a
        L_0x0123:
            r6 = 23
            goto L_0x010a
        L_0x0126:
            r1.getMax(r11)     // Catch:{ all -> 0x01c8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c8 }
            if (r0 == 0) goto L_0x0133
            if (r0 == r4) goto L_0x0130
            goto L_0x0133
        L_0x0130:
            r6 = 34
            goto L_0x010a
        L_0x0133:
            r6 = 28
            goto L_0x010a
        L_0x0136:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01c8 }
            r1.length = r0     // Catch:{ all -> 0x01c8 }
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x01c8 }
            goto L_0x01c5
        L_0x0141:
            r1.length = r4     // Catch:{ all -> 0x01c8 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c8 }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x01c8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c8 }
            onNavigationEvent = r0     // Catch:{ all -> 0x01c8 }
            goto L_0x01c5
        L_0x0151:
            r1.getMax(r14)     // Catch:{ all -> 0x01c8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c8 }
            if (r0 != 0) goto L_0x01c5
            r0 = 22
            r6 = 22
            goto L_0x010a
        L_0x015d:
            r6 = 32
            goto L_0x010a
        L_0x0160:
            r6 = 3
            goto L_0x010a
        L_0x0162:
            r1.length = r4     // Catch:{ all -> 0x01c8 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c8 }
            r1.getMax(r10)     // Catch:{ all -> 0x01c8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01c8 }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x01c8 }
            r1.isInside = r0     // Catch:{ all -> 0x01c8 }
        L_0x0172:
            r1.getMax(r6)     // Catch:{ all -> 0x01c8 }
            goto L_0x01c5
        L_0x0176:
            o.onPageScrollStateChanged$5 r0 = new o.onPageScrollStateChanged$5     // Catch:{ all -> 0x01c8 }
            r1.length = r4     // Catch:{ all -> 0x01c8 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c8 }
            r1.getMax(r10)     // Catch:{ all -> 0x01c8 }
            java.lang.Object r13 = r1.IsOverlapping     // Catch:{ all -> 0x01c8 }
            o.onPageScrollStateChanged r13 = (o.onPageScrollStateChanged) r13     // Catch:{ all -> 0x01c8 }
            r0.<init>()     // Catch:{ all -> 0x01c8 }
            r1.isInside = r0     // Catch:{ all -> 0x01c8 }
            goto L_0x0172
        L_0x018a:
            r6 = 10
            goto L_0x010a
        L_0x018e:
            r1.length = r15     // Catch:{ all -> 0x01c8 }
            r1.getMax(r13)     // Catch:{ all -> 0x01c8 }
            r1.getMax(r10)     // Catch:{ all -> 0x01c8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c8 }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x01c8 }
            r1.getMax(r10)     // Catch:{ all -> 0x01c8 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x01c8 }
            o.setGlobalUserData r6 = (o.setGlobalUserData) r6     // Catch:{ all -> 0x01c8 }
            r0.execute(r6)     // Catch:{ all -> 0x01c8 }
            goto L_0x01c5
        L_0x01a5:
            r6 = 38
            goto L_0x010a
        L_0x01a9:
            r1.getMax(r15)     // Catch:{ all -> 0x01c8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01c8 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01c8 }
            throw r0     // Catch:{ all -> 0x01c8 }
        L_0x01b1:
            r1.getMax(r14)     // Catch:{ all -> 0x01c8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x01c8 }
            if (r0 != 0) goto L_0x01c5
            r0 = 63
            r6 = 63
            goto L_0x010a
        L_0x01be:
            r6 = 65
            goto L_0x010a
        L_0x01c2:
            r6 = 1
            goto L_0x010a
        L_0x01c5:
            r6 = r12
            goto L_0x010a
        L_0x01c8:
            r0 = move-exception
            r6 = 5485(0x156d, float:7.686E-42)
            short r6 = (short) r6
            r13 = 985(0x3d9, float:1.38E-42)
            short r13 = (short) r13
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r6, r13, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            r4 = 64
            r17 = 30
            r18 = 31
            if (r15 == 0) goto L_0x01f0
            if (r12 < r3) goto L_0x01f0
            if (r12 > r7) goto L_0x01f0
        L_0x01ec:
            r6 = 31
            goto L_0x02b8
        L_0x01f0:
            int r15 = setMin
            r15 = r15 | 7559(0x1d87, float:1.0592E-41)
            short r15 = (short) r15
            r3 = 975(0x3cf, float:1.366E-42)
            short r3 = (short) r3
            byte[] r19 = getMax
            byte r10 = r19[r9]
            byte r10 = (byte) r10
            java.lang.String r3 = setMin(r15, r3, r10)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0212
            r3 = 18
            if (r12 < r3) goto L_0x0212
            if (r12 > r7) goto L_0x0212
            goto L_0x01ec
        L_0x0212:
            r3 = 97
            short r3 = (short) r3
            r10 = 976(0x3d0, float:1.368E-42)
            short r10 = (short) r10
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r3 = setMin(r3, r10, r15)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0235
            r3 = 24
            if (r12 < r3) goto L_0x0235
            if (r12 > r14) goto L_0x0235
        L_0x0231:
            r6 = 30
            goto L_0x02b8
        L_0x0235:
            byte[] r3 = getMax
            r10 = 5474(0x1562, float:7.671E-42)
            byte r10 = r3[r10]
            short r10 = (short) r10
            r15 = 969(0x3c9, float:1.358E-42)
            short r15 = (short) r15
            byte r3 = r3[r9]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r10, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0257
            if (r12 < r14) goto L_0x0257
            r3 = 29
            if (r12 > r3) goto L_0x0257
            goto L_0x01ec
        L_0x0257:
            if (r12 < r11) goto L_0x025e
            if (r12 > r8) goto L_0x025e
            r6 = 64
            goto L_0x02b8
        L_0x025e:
            byte[] r3 = getMax
            byte r3 = r3[r9]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r6, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0278
            r3 = 34
            if (r12 < r3) goto L_0x0278
            if (r12 > r8) goto L_0x0278
            goto L_0x0231
        L_0x0278:
            int r3 = setMin
            r3 = r3 | 68
            short r3 = (short) r3
            r6 = 974(0x3ce, float:1.365E-42)
            short r6 = (short) r6
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r3 = setMin(r3, r6, r10)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0298
            if (r12 < r8) goto L_0x0298
            if (r12 > r4) goto L_0x0298
            goto L_0x0231
        L_0x0298:
            int r3 = setMin
            r3 = r3 | 68
            short r3 = (short) r3
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r3 = setMin(r3, r6, r10)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x02c4
            r3 = 59
            if (r12 < r3) goto L_0x02c4
            if (r12 > r4) goto L_0x02c4
            goto L_0x01ec
        L_0x02b8:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r3 = 10
            r4 = 1
            goto L_0x0109
        L_0x02c4:
            throw r0
        L_0x02c5:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x02cd
            throw r1
        L_0x02cd:
            goto L_0x02cf
        L_0x02ce:
            throw r0
        L_0x02cf:
            goto L_0x02ce
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.getMin():void");
    }

    /* JADX WARNING: type inference failed for: r0v11, types: [int, boolean] */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x0321, code lost:
        if (r14 <= 82) goto L_0x026d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:53:0x01ad, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:74:0x0209, code lost:
        r11 = 35;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:93:0x0269, code lost:
        if (r14 <= 24) goto L_0x026b;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final boolean isInside() {
        /*
            r21 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r21
            r1.<init>(r2)
            r0 = 7643(0x1ddb, float:1.071E-41)
            short r0 = (short) r0
            r3 = 726(0x2d6, float:1.017E-42)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0351 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x0351 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x0351 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0351 }
            byte[] r8 = getMax     // Catch:{ all -> 0x0351 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x0351 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0351 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x0351 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0351 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x0351 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0351 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0351 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0351 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0351 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x0351 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x0351 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0351 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x0351 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0351 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x0351 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0351 }
            r11[r6] = r12     // Catch:{ all -> 0x0351 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x0351 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x0351 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0351 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            r12 = 0
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r13[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r14 = r10 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fa }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r14, r15)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fa }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r16[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r14, r15, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fa }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fa }
            java.lang.String r15 = setMin(r3, r7, r15)     // Catch:{ all -> 0x00fa }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fa }
            r14[r6] = r15     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Object r10 = r10.invoke(r12, r13)     // Catch:{ all -> 0x00fa }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f1 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00f1 }
            int r11 = r11 + r4
            short r11 = (short) r11     // Catch:{ all -> 0x00f1 }
            r13 = r11 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r11 = setMin(r11, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r11 = r11.getMethod(r13, r12)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r11.invoke(r10, r12)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r7 = 5
            r10 = 34
        L_0x0106:
            r13 = 4
        L_0x0107:
            int r14 = r6 + 1
            r15 = 78
            r0 = r5[r6]     // Catch:{ all -> 0x020d }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x020d }
            r6 = 8
            switch(r0) {
                case -20: goto L_0x0205;
                case -19: goto L_0x0202;
                case -18: goto L_0x01f6;
                case -17: goto L_0x01f2;
                case -16: goto L_0x01ef;
                case -15: goto L_0x01e3;
                case -14: goto L_0x01d4;
                case -13: goto L_0x01cf;
                case -12: goto L_0x01be;
                case -11: goto L_0x01ba;
                case -10: goto L_0x016c;
                case -9: goto L_0x0155;
                case -8: goto L_0x0153;
                case -7: goto L_0x0142;
                case -6: goto L_0x013a;
                case -5: goto L_0x0137;
                case -4: goto L_0x0126;
                case -3: goto L_0x011d;
                case -2: goto L_0x011a;
                case -1: goto L_0x0118;
                default: goto L_0x0116;
            }     // Catch:{ all -> 0x020d }
        L_0x0116:
            goto L_0x0208
        L_0x0118:
            r6 = 5
            goto L_0x0107
        L_0x011a:
            r6 = 14
            goto L_0x0107
        L_0x011d:
            r0 = 2
            r1.getMax(r0)     // Catch:{ all -> 0x020d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x020d }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x020d }
            throw r0     // Catch:{ all -> 0x020d }
        L_0x0126:
            r1.getMax(r11)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            r6 = 20
            if (r0 == r15) goto L_0x0132
            r14 = 83
            goto L_0x0107
        L_0x0132:
            r0 = 26
            r6 = 26
            goto L_0x0107
        L_0x0137:
            r6 = 34
            goto L_0x0107
        L_0x013a:
            r0 = 210(0xd2, float:2.94E-43)
            r1.getMax(r0)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            return r0
        L_0x0142:
            r1.getMax(r11)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            r14 = 74
            if (r0 == r14) goto L_0x0107
            r14 = 86
            if (r0 == r14) goto L_0x0150
            goto L_0x0107
        L_0x0150:
            r6 = 82
            goto L_0x0107
        L_0x0153:
            r6 = 4
            goto L_0x0107
        L_0x0155:
            r1.length = r4     // Catch:{ all -> 0x020d }
            r1.getMax(r13)     // Catch:{ all -> 0x020d }
            r1.getMax(r7)     // Catch:{ all -> 0x020d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x020d }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x020d }
            java.lang.Boolean r0 = r0.Mean$Arithmetic     // Catch:{ all -> 0x020d }
            r1.isInside = r0     // Catch:{ all -> 0x020d }
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x020d }
            goto L_0x0208
        L_0x016c:
            r1.length = r4     // Catch:{ all -> 0x020d }
            r1.getMax(r13)     // Catch:{ all -> 0x020d }
            r1.getMax(r7)     // Catch:{ all -> 0x020d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x020d }
            int r11 = setMin     // Catch:{ all -> 0x01b1 }
            r11 = r11 | 1922(0x782, float:2.693E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x01b1 }
            r15 = 987(0x3db, float:1.383E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x01b1 }
            byte[] r17 = getMax     // Catch:{ all -> 0x01b1 }
            byte r8 = r17[r9]     // Catch:{ all -> 0x01b1 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x01b1 }
            java.lang.String r8 = setMin(r11, r15, r8)     // Catch:{ all -> 0x01b1 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x01b1 }
            r11 = 7604(0x1db4, float:1.0655E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x01b1 }
            r15 = 992(0x3e0, float:1.39E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x01b1 }
            byte[] r17 = getMax     // Catch:{ all -> 0x01b1 }
            r18 = 4875(0x130b, float:6.831E-42)
            byte r3 = r17[r18]     // Catch:{ all -> 0x01b1 }
            int r3 = -r3
            byte r3 = (byte) r3     // Catch:{ all -> 0x01b1 }
            java.lang.String r3 = setMin(r11, r15, r3)     // Catch:{ all -> 0x01b1 }
            java.lang.reflect.Method r3 = r8.getMethod(r3, r12)     // Catch:{ all -> 0x01b1 }
            java.lang.Object r0 = r3.invoke(r0, r12)     // Catch:{ all -> 0x01b1 }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x01b1 }
            boolean r0 = r0.booleanValue()     // Catch:{ all -> 0x01b1 }
            r1.length = r0     // Catch:{ all -> 0x020d }
        L_0x01ad:
            r1.getMax(r6)     // Catch:{ all -> 0x020d }
            goto L_0x0208
        L_0x01b1:
            r0 = move-exception
            java.lang.Throwable r3 = r0.getCause()     // Catch:{ all -> 0x020d }
            if (r3 == 0) goto L_0x01b9
            throw r3     // Catch:{ all -> 0x020d }
        L_0x01b9:
            throw r0     // Catch:{ all -> 0x020d }
        L_0x01ba:
            r6 = 58
            goto L_0x0107
        L_0x01be:
            r1.length = r4     // Catch:{ all -> 0x020d }
            r1.getMax(r13)     // Catch:{ all -> 0x020d }
            r1.getMax(r7)     // Catch:{ all -> 0x020d }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x020d }
            int r0 = super.hashCode()     // Catch:{ all -> 0x020d }
            r1.length = r0     // Catch:{ all -> 0x020d }
            goto L_0x01ad
        L_0x01cf:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x020d }
            r1.length = r0     // Catch:{ all -> 0x020d }
            goto L_0x01ad
        L_0x01d4:
            r1.length = r4     // Catch:{ all -> 0x020d }
            r1.getMax(r13)     // Catch:{ all -> 0x020d }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x020d }
            goto L_0x0208
        L_0x01e3:
            r1.getMax(r10)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            if (r0 != 0) goto L_0x0208
            r0 = 57
            r6 = 57
            goto L_0x0209
        L_0x01ef:
            r6 = 17
            goto L_0x0209
        L_0x01f2:
            r6 = 24
            goto L_0x0107
        L_0x01f6:
            r1.getMax(r10)     // Catch:{ all -> 0x020d }
            int r0 = r1.setMax     // Catch:{ all -> 0x020d }
            if (r0 != 0) goto L_0x0208
            r0 = 81
            r6 = 81
            goto L_0x0209
        L_0x0202:
            r6 = 15
            goto L_0x0209
        L_0x0205:
            r6 = 1
            goto L_0x0107
        L_0x0208:
            r6 = r14
        L_0x0209:
            r11 = 35
            goto L_0x0107
        L_0x020d:
            r0 = move-exception
            r3 = 9
            r8 = 13
            r11 = 33
            if (r14 < r3) goto L_0x0222
            if (r14 > r8) goto L_0x0222
            r3 = 19
            r3 = 58
            r6 = 19
        L_0x021e:
            r15 = 24
            goto L_0x0342
        L_0x0222:
            byte[] r3 = getMax
            r15 = 5474(0x1562, float:7.671E-42)
            byte r15 = r3[r15]
            short r15 = (short) r15
            r4 = 969(0x3c9, float:1.358E-42)
            short r4 = (short) r4
            byte r3 = r3[r9]
            byte r3 = (byte) r3
            java.lang.String r3 = setMin(r15, r4, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x024a
            r3 = 21
            if (r14 < r3) goto L_0x024a
            r3 = 24
            if (r14 > r3) goto L_0x024a
            r3 = 58
            r6 = 33
            goto L_0x021e
        L_0x024a:
            r3 = 97
            short r3 = (short) r3
            r4 = 976(0x3d0, float:1.368E-42)
            short r4 = (short) r4
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r3, r4, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            if (r15 == 0) goto L_0x0271
            r15 = 22
            if (r14 < r15) goto L_0x0271
            r15 = 24
            if (r14 > r15) goto L_0x0273
        L_0x026b:
            r3 = 58
        L_0x026d:
            r6 = 33
            goto L_0x0342
        L_0x0271:
            r15 = 24
        L_0x0273:
            r6 = 29
            if (r14 < r6) goto L_0x027f
            if (r14 > r11) goto L_0x027f
            r3 = 58
            r6 = 13
            goto L_0x0342
        L_0x027f:
            r6 = 5397(0x1515, float:7.563E-42)
            short r6 = (short) r6
            r8 = 973(0x3cd, float:1.363E-42)
            short r8 = (short) r8
            byte[] r19 = getMax
            byte r7 = r19[r9]
            byte r7 = (byte) r7
            java.lang.String r7 = setMin(r6, r8, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x029f
            r7 = 27
            if (r14 < r7) goto L_0x029f
            if (r14 > r11) goto L_0x029f
            goto L_0x026b
        L_0x029f:
            int r7 = setMin
            r7 = r7 | 2374(0x946, float:3.327E-42)
            short r7 = (short) r7
            r12 = 965(0x3c5, float:1.352E-42)
            short r12 = (short) r12
            byte[] r20 = getMax
            byte r13 = r20[r9]
            byte r13 = (byte) r13
            java.lang.String r7 = setMin(r7, r12, r13)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02c5
            r7 = 28
            if (r14 < r7) goto L_0x02c5
            if (r14 > r11) goto L_0x02c5
        L_0x02c0:
            r3 = 58
            r6 = 3
            goto L_0x0342
        L_0x02c5:
            r7 = 5485(0x156d, float:7.686E-42)
            short r7 = (short) r7
            r12 = 985(0x3d9, float:1.38E-42)
            short r12 = (short) r12
            byte[] r13 = getMax
            byte r13 = r13[r9]
            byte r13 = (byte) r13
            java.lang.String r7 = setMin(r7, r12, r13)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02e5
            if (r14 < r10) goto L_0x02e5
            r7 = 58
            if (r14 > r7) goto L_0x02e5
            goto L_0x02c0
        L_0x02e5:
            byte[] r7 = getMax
            byte r7 = r7[r9]
            byte r7 = (byte) r7
            java.lang.String r3 = setMin(r3, r4, r7)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0302
            r3 = 53
            if (r14 < r3) goto L_0x0302
            r3 = 58
            if (r14 > r3) goto L_0x0302
        L_0x0300:
            goto L_0x026d
        L_0x0302:
            r3 = 5427(0x1533, float:7.605E-42)
            short r3 = (short) r3
            r4 = 978(0x3d2, float:1.37E-42)
            short r4 = (short) r4
            byte[] r7 = getMax
            byte r7 = r7[r9]
            byte r7 = (byte) r7
            java.lang.String r3 = setMin(r3, r4, r7)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0324
            r3 = 58
            if (r14 < r3) goto L_0x0326
            r4 = 82
            if (r14 > r4) goto L_0x0326
            goto L_0x0300
        L_0x0324:
            r3 = 58
        L_0x0326:
            byte[] r4 = getMax
            byte r4 = r4[r9]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r6, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0350
            r4 = 77
            if (r14 < r4) goto L_0x0350
            r4 = 78
            if (r14 > r4) goto L_0x0350
            goto L_0x0300
        L_0x0342:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r4 = 1
            r7 = 5
            r11 = 35
            r12 = 0
            goto L_0x0106
        L_0x0350:
            throw r0
        L_0x0351:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0359
            throw r1
        L_0x0359:
            goto L_0x035b
        L_0x035a:
            throw r0
        L_0x035b:
            goto L_0x035a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.isInside():boolean");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v6, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v9, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v11, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v12, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v13, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v21, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v38, resolved type: java.lang.Object} */
    /* JADX WARNING: type inference failed for: r9v5 */
    /* JADX WARNING: type inference failed for: r9v8 */
    /* JADX WARNING: type inference failed for: r9v20 */
    /* JADX WARNING: type inference failed for: r9v40 */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:109:0x0329, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x0399, code lost:
        r12 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x039f, code lost:
        r12 = r9;
        r0 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:28:0x011a, code lost:
        r9 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x012f, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x014b, code lost:
        r0 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:60:0x01ac, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x029a, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:97:0x029d, code lost:
        r9 = null;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x0338 A[Catch:{ all -> 0x032e, all -> 0x0395 }] */
    /* JADX WARNING: Removed duplicated region for block: B:117:0x0339 A[Catch:{ all -> 0x032e, all -> 0x0395 }] */
    /* JADX WARNING: Removed duplicated region for block: B:134:0x03c9 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:147:0x03fc  */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x0405  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x0424  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x042c  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x0451  */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x0455  */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x028d A[Catch:{ all -> 0x0282, all -> 0x033a }] */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x028e A[Catch:{ all -> 0x0282, all -> 0x033a }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void length() {
        /*
            r21 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r21
            r1.<init>(r2)
            r0 = 3290(0xcda, float:4.61E-42)
            short r0 = (short) r0
            r3 = 680(0x2a8, float:9.53E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x047f }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x047f }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x047f }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x047f }
            byte[] r8 = getMax     // Catch:{ all -> 0x047f }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x047f }
            byte r8 = (byte) r8     // Catch:{ all -> 0x047f }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x047f }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x047f }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x047f }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x047f }
            byte[] r12 = getMax     // Catch:{ all -> 0x047f }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x047f }
            byte r12 = (byte) r12     // Catch:{ all -> 0x047f }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x047f }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x047f }
            byte[] r12 = getMax     // Catch:{ all -> 0x047f }
            byte r12 = r12[r9]     // Catch:{ all -> 0x047f }
            byte r12 = (byte) r12     // Catch:{ all -> 0x047f }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x047f }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x047f }
            r11[r6] = r12     // Catch:{ all -> 0x047f }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x047f }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x047f }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x047f }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            r12 = 0
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r13[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r14 = r10 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fa }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r14, r15)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fa }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r16[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r14, r15, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r15 = r15[r9]     // Catch:{ all -> 0x00fa }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fa }
            java.lang.String r15 = setMin(r3, r7, r15)     // Catch:{ all -> 0x00fa }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fa }
            r14[r6] = r15     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Object r10 = r10.invoke(r12, r13)     // Catch:{ all -> 0x00fa }
            byte[] r11 = getMax     // Catch:{ all -> 0x00f1 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x00f1 }
            int r11 = r11 + r4
            short r11 = (short) r11     // Catch:{ all -> 0x00f1 }
            r13 = r11 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r11 = setMin(r11, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r11 = r11.getMethod(r13, r12)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r11.invoke(r10, r12)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r13 = 2
            r14 = 88
            r0 = 0
        L_0x0107:
            int r15 = r0 + 1
            r0 = r5[r0]     // Catch:{ all -> 0x03a6 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x03a6 }
            r10 = 8
            r9 = 25
            r8 = 28
            r12 = 4
            r6 = 5
            switch(r0) {
                case -33: goto L_0x0397;
                case -32: goto L_0x0382;
                case -31: goto L_0x036c;
                case -30: goto L_0x0358;
                case -29: goto L_0x033e;
                case -28: goto L_0x02e7;
                case -27: goto L_0x02d4;
                case -26: goto L_0x02b3;
                case -25: goto L_0x02a0;
                case -24: goto L_0x0294;
                case -23: goto L_0x0228;
                case -22: goto L_0x0211;
                case -21: goto L_0x0200;
                case -20: goto L_0x01b6;
                case -19: goto L_0x01b1;
                case -18: goto L_0x01a8;
                case -17: goto L_0x01a4;
                case -16: goto L_0x01a0;
                case -15: goto L_0x0193;
                case -14: goto L_0x0186;
                case -13: goto L_0x0181;
                case -12: goto L_0x017e;
                case -11: goto L_0x017a;
                case -10: goto L_0x0179;
                case -9: goto L_0x0168;
                case -8: goto L_0x0156;
                case -7: goto L_0x0152;
                case -6: goto L_0x014e;
                case -5: goto L_0x0140;
                case -4: goto L_0x0133;
                case -3: goto L_0x012b;
                case -2: goto L_0x0123;
                case -1: goto L_0x011f;
                default: goto L_0x011a;
            }
        L_0x011a:
            r9 = 0
            r20 = 0
            goto L_0x039f
        L_0x011f:
            r0 = 35
            goto L_0x0399
        L_0x0123:
            r1.getMax(r13)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0224 }
            throw r0     // Catch:{ all -> 0x0224 }
        L_0x012b:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0224 }
            r1.length = r0     // Catch:{ all -> 0x0224 }
        L_0x012f:
            r1.getMax(r10)     // Catch:{ all -> 0x0224 }
            goto L_0x011a
        L_0x0133:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r9)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0224 }
            goto L_0x011a
        L_0x0140:
            r1.getMax(r8)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 != 0) goto L_0x014b
            r0 = 25
            goto L_0x0399
        L_0x014b:
            r0 = r15
            goto L_0x0399
        L_0x014e:
            r0 = 83
            goto L_0x0399
        L_0x0152:
            r0 = 88
            goto L_0x0399
        L_0x0156:
            r1.getMax(r11)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 == 0) goto L_0x0164
            if (r0 == r4) goto L_0x0160
            goto L_0x0164
        L_0x0160:
            r0 = 86
            goto L_0x0399
        L_0x0164:
            r0 = 28
            goto L_0x0399
        L_0x0168:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r6)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0224 }
            r1.length = r0     // Catch:{ all -> 0x0224 }
            goto L_0x012f
        L_0x0179:
            return
        L_0x017a:
            r0 = 26
            goto L_0x0399
        L_0x017e:
            r0 = 2
            goto L_0x0399
        L_0x0181:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0224 }
            r1.length = r0     // Catch:{ all -> 0x0224 }
            goto L_0x012f
        L_0x0186:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r9)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0224 }
            goto L_0x011a
        L_0x0193:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x0224 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0224 }
            if (r0 != 0) goto L_0x014b
            r0 = 62
            goto L_0x0399
        L_0x01a0:
            r0 = 33
            goto L_0x0399
        L_0x01a4:
            r0 = 84
            goto L_0x0399
        L_0x01a8:
            java.lang.String r0 = "Qrcode"
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
        L_0x01ac:
            r1.getMax(r14)     // Catch:{ all -> 0x0224 }
            goto L_0x011a
        L_0x01b1:
            java.lang.String r0 = "[QrcodeGenerate]"
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
            goto L_0x01ac
        L_0x01b6:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r6)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ all -> 0x01f7 }
            r8 = 0
            r6[r8] = r0     // Catch:{ all -> 0x01f7 }
            r0 = 7582(0x1d9e, float:1.0625E-41)
            short r0 = (short) r0     // Catch:{ all -> 0x01f7 }
            r8 = 981(0x3d5, float:1.375E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x01f7 }
            byte[] r9 = getMax     // Catch:{ all -> 0x01f7 }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x01f7 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x01f7 }
            java.lang.String r0 = setMin(r0, r8, r9)     // Catch:{ all -> 0x01f7 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x01f7 }
            java.lang.Class[] r8 = new java.lang.Class[r4]     // Catch:{ all -> 0x01f7 }
            byte[] r9 = getMax     // Catch:{ all -> 0x01f7 }
            byte r9 = r9[r10]     // Catch:{ all -> 0x01f7 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x01f7 }
            java.lang.String r9 = setMin(r3, r7, r9)     // Catch:{ all -> 0x01f7 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x01f7 }
            r10 = 0
            r8[r10] = r9     // Catch:{ all -> 0x01f7 }
            java.lang.reflect.Constructor r0 = r0.getDeclaredConstructor(r8)     // Catch:{ all -> 0x01f7 }
            java.lang.Object r0 = r0.newInstance(r6)     // Catch:{ all -> 0x01f7 }
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
            goto L_0x01ac
        L_0x01f7:
            r0 = move-exception
            java.lang.Throwable r6 = r0.getCause()     // Catch:{ all -> 0x0224 }
            if (r6 == 0) goto L_0x01ff
            throw r6     // Catch:{ all -> 0x0224 }
        L_0x01ff:
            throw r0     // Catch:{ all -> 0x0224 }
        L_0x0200:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r6)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            java.lang.Class r0 = r0.getClass()     // Catch:{ all -> 0x0224 }
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
            goto L_0x01ac
        L_0x0211:
            r1.length = r4     // Catch:{ all -> 0x0224 }
            r1.getMax(r12)     // Catch:{ all -> 0x0224 }
            r1.getMax(r6)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0224 }
            java.lang.Class r0 = (java.lang.Class) r0     // Catch:{ all -> 0x0224 }
            java.lang.String r0 = r0.getName()     // Catch:{ all -> 0x0224 }
            r1.isInside = r0     // Catch:{ all -> 0x0224 }
            goto L_0x01ac
        L_0x0224:
            r0 = move-exception
            r9 = 0
            goto L_0x03a8
        L_0x0228:
            r1.length = r13     // Catch:{ all -> 0x028f }
            r1.getMax(r12)     // Catch:{ all -> 0x028f }
            r1.getMax(r6)     // Catch:{ all -> 0x028f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x028f }
            r1.getMax(r6)     // Catch:{ all -> 0x028f }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x028f }
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ all -> 0x0284 }
            r9 = 0
            r8[r9] = r6     // Catch:{ all -> 0x0284 }
            r6 = 7582(0x1d9e, float:1.0625E-41)
            short r6 = (short) r6     // Catch:{ all -> 0x0284 }
            r9 = 981(0x3d5, float:1.375E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0284 }
            byte[] r10 = getMax     // Catch:{ all -> 0x0284 }
            r12 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0284 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0284 }
            java.lang.String r6 = setMin(r6, r9, r10)     // Catch:{ all -> 0x0284 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0284 }
            r9 = 7920(0x1ef0, float:1.1098E-41)
            short r9 = (short) r9     // Catch:{ all -> 0x0284 }
            r10 = 998(0x3e6, float:1.398E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x0284 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0284 }
            r20 = 70
            byte r12 = r12[r20]     // Catch:{ all -> 0x0284 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0284 }
            java.lang.String r9 = setMin(r9, r10, r12)     // Catch:{ all -> 0x0284 }
            java.lang.Class[] r10 = new java.lang.Class[r4]     // Catch:{ all -> 0x0284 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0284 }
            r19 = 4873(0x1309, float:6.829E-42)
            byte r12 = r12[r19]     // Catch:{ all -> 0x0284 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0284 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x0284 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0284 }
            r20 = 0
            r10[r20] = r12     // Catch:{ all -> 0x0282 }
            java.lang.reflect.Method r6 = r6.getMethod(r9, r10)     // Catch:{ all -> 0x0282 }
            java.lang.Object r0 = r6.invoke(r0, r8)     // Catch:{ all -> 0x0282 }
            r1.isInside = r0     // Catch:{ all -> 0x033a }
            goto L_0x029a
        L_0x0282:
            r0 = move-exception
            goto L_0x0287
        L_0x0284:
            r0 = move-exception
            r20 = 0
        L_0x0287:
            java.lang.Throwable r6 = r0.getCause()     // Catch:{ all -> 0x033a }
            if (r6 == 0) goto L_0x028e
            throw r6     // Catch:{ all -> 0x033a }
        L_0x028e:
            throw r0     // Catch:{ all -> 0x033a }
        L_0x028f:
            r0 = move-exception
            r20 = 0
            goto L_0x033b
        L_0x0294:
            r20 = 0
            java.lang.String r0 = "pause onError"
            r1.isInside = r0     // Catch:{ all -> 0x033a }
        L_0x029a:
            r1.getMax(r14)     // Catch:{ all -> 0x033a }
        L_0x029d:
            r9 = 0
            goto L_0x039f
        L_0x02a0:
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x033a }
            r1.getMax(r12)     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x033a }
            r1.isInside = r0     // Catch:{ all -> 0x033a }
            goto L_0x029a
        L_0x02b3:
            r8 = 3
            r20 = 0
            r1.length = r8     // Catch:{ all -> 0x033a }
            r1.getMax(r12)     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r8 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            java.lang.String r8 = (java.lang.String) r8     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            java.lang.Throwable r6 = (java.lang.Throwable) r6     // Catch:{ all -> 0x033a }
            o.updateActionSheetContent.e(r0, r8, r6)     // Catch:{ all -> 0x033a }
            goto L_0x029d
        L_0x02d4:
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x033a }
            r1.getMax(r12)     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x033a }
            o.isUserInputEnabled$length r0 = r0.IsOverlapping     // Catch:{ all -> 0x033a }
            r1.isInside = r0     // Catch:{ all -> 0x033a }
            goto L_0x029a
        L_0x02e7:
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x033a }
            r1.getMax(r12)     // Catch:{ all -> 0x033a }
            r1.getMax(r6)     // Catch:{ all -> 0x033a }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x033a }
            byte[] r6 = getMax     // Catch:{ all -> 0x0330 }
            r8 = 19
            byte r6 = r6[r8]     // Catch:{ all -> 0x0330 }
            short r6 = (short) r6     // Catch:{ all -> 0x0330 }
            r8 = r6 & 985(0x3d9, float:1.38E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0330 }
            byte[] r9 = getMax     // Catch:{ all -> 0x0330 }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x0330 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0330 }
            java.lang.String r6 = setMin(r6, r8, r9)     // Catch:{ all -> 0x0330 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0330 }
            r8 = 4864(0x1300, float:6.816E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0330 }
            r9 = 994(0x3e2, float:1.393E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0330 }
            byte[] r10 = getMax     // Catch:{ all -> 0x0330 }
            r12 = 177(0xb1, float:2.48E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0330 }
            int r10 = -r10
            byte r10 = (byte) r10     // Catch:{ all -> 0x0330 }
            java.lang.String r8 = setMin(r8, r9, r10)     // Catch:{ all -> 0x0330 }
            r9 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r8, r9)     // Catch:{ all -> 0x032e }
            java.lang.Object r0 = r6.invoke(r0, r9)     // Catch:{ all -> 0x032e }
            r1.isInside = r0     // Catch:{ all -> 0x0395 }
        L_0x0329:
            r1.getMax(r14)     // Catch:{ all -> 0x0395 }
            goto L_0x039f
        L_0x032e:
            r0 = move-exception
            goto L_0x0332
        L_0x0330:
            r0 = move-exception
            r9 = 0
        L_0x0332:
            java.lang.Throwable r6 = r0.getCause()     // Catch:{ all -> 0x0395 }
            if (r6 == 0) goto L_0x0339
            throw r6     // Catch:{ all -> 0x0395 }
        L_0x0339:
            throw r0     // Catch:{ all -> 0x0395 }
        L_0x033a:
            r0 = move-exception
        L_0x033b:
            r9 = 0
            goto L_0x03aa
        L_0x033e:
            r9 = 0
            r20 = 0
            r1.length = r13     // Catch:{ all -> 0x0395 }
            r1.getMax(r12)     // Catch:{ all -> 0x0395 }
            r1.getMax(r6)     // Catch:{ all -> 0x0395 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0395 }
            o.isUserInputEnabled$length r0 = (o.isUserInputEnabled.length) r0     // Catch:{ all -> 0x0395 }
            r1.getMax(r6)     // Catch:{ all -> 0x0395 }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x0395 }
            java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x0395 }
            r0.onError(r6)     // Catch:{ all -> 0x0395 }
            goto L_0x039f
        L_0x0358:
            r9 = 0
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x0395 }
            r1.getMax(r12)     // Catch:{ all -> 0x0395 }
            r1.getMax(r6)     // Catch:{ all -> 0x0395 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0395 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0395 }
            o.isAppIdInPreDownloadConfig r0 = r0.toDoubleRange     // Catch:{ all -> 0x0395 }
            r1.isInside = r0     // Catch:{ all -> 0x0395 }
            goto L_0x0329
        L_0x036c:
            r9 = 0
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x0395 }
            r1.getMax(r12)     // Catch:{ all -> 0x0395 }
            r1.getMax(r6)     // Catch:{ all -> 0x0395 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0395 }
            o.GriverAppxLoadFailedPoint r0 = (o.GriverAppxLoadFailedPoint) r0     // Catch:{ all -> 0x0395 }
            java.lang.Object r0 = r0.execute()     // Catch:{ all -> 0x0395 }
            r1.isInside = r0     // Catch:{ all -> 0x0395 }
            goto L_0x0329
        L_0x0382:
            r9 = 0
            r20 = 0
            r1.length = r4     // Catch:{ all -> 0x0395 }
            r1.getMax(r12)     // Catch:{ all -> 0x0395 }
            r1.getMax(r6)     // Catch:{ all -> 0x0395 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0395 }
            o.isUserInputEnabled$length r0 = (o.isUserInputEnabled.length) r0     // Catch:{ all -> 0x0395 }
            r0.setMax()     // Catch:{ all -> 0x0395 }
            goto L_0x039f
        L_0x0395:
            r0 = move-exception
            goto L_0x03aa
        L_0x0397:
            r0 = 39
        L_0x0399:
            r6 = 0
            r9 = 4873(0x1309, float:6.829E-42)
            r12 = 0
            goto L_0x0107
        L_0x039f:
            r12 = r9
            r0 = r15
        L_0x03a1:
            r6 = 0
            r9 = 4873(0x1309, float:6.829E-42)
            goto L_0x0107
        L_0x03a6:
            r0 = move-exception
            r9 = r12
        L_0x03a8:
            r20 = 0
        L_0x03aa:
            byte[] r6 = getMax
            r8 = 5474(0x1562, float:7.671E-42)
            byte r8 = r6[r8]
            short r8 = (short) r8
            r10 = 969(0x3c9, float:1.358E-42)
            short r10 = (short) r10
            r12 = 4873(0x1309, float:6.829E-42)
            byte r6 = r6[r12]
            byte r6 = (byte) r6
            java.lang.String r6 = setMin(r8, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r8 = 63
            if (r6 == 0) goto L_0x03d4
            if (r15 < r13) goto L_0x03d4
            r6 = 3
            if (r15 > r6) goto L_0x03d4
        L_0x03ce:
            r6 = 33
        L_0x03d0:
            r16 = 4873(0x1309, float:6.829E-42)
            goto L_0x0472
        L_0x03d4:
            r6 = 97
            short r6 = (short) r6
            r10 = 976(0x3d0, float:1.368E-42)
            short r10 = (short) r10
            byte[] r12 = getMax
            r18 = 4873(0x1309, float:6.829E-42)
            byte r12 = r12[r18]
            byte r12 = (byte) r12
            java.lang.String r6 = setMin(r6, r10, r12)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x03f8
            r6 = 20
            if (r15 < r6) goto L_0x03f8
            r6 = 21
            if (r15 > r6) goto L_0x03f8
            goto L_0x03ce
        L_0x03f8:
            r6 = 29
            if (r15 < r6) goto L_0x0405
            r6 = 33
            if (r15 > r6) goto L_0x0407
            r8 = 27
            r4 = 27
            goto L_0x03d0
        L_0x0405:
            r6 = 33
        L_0x0407:
            int r10 = setMin
            r10 = r10 | 68
            short r10 = (short) r10
            r12 = 974(0x3ce, float:1.365E-42)
            short r12 = (short) r12
            byte[] r17 = getMax
            r18 = 4873(0x1309, float:6.829E-42)
            byte r4 = r17[r18]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r10, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x042c
            r4 = 39
            if (r15 < r4) goto L_0x042e
            if (r15 > r8) goto L_0x042e
            r4 = 1
            goto L_0x03d0
        L_0x042c:
            r4 = 39
        L_0x042e:
            r10 = 5485(0x156d, float:7.686E-42)
            short r10 = (short) r10
            r12 = 985(0x3d9, float:1.38E-42)
            short r12 = (short) r12
            byte[] r16 = getMax
            r17 = 4873(0x1309, float:6.829E-42)
            byte r4 = r16[r17]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r10, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0455
            r4 = 57
            if (r15 < r4) goto L_0x0455
            r4 = 58
            if (r15 > r4) goto L_0x0455
            r4 = 82
            goto L_0x03d0
        L_0x0455:
            byte[] r4 = getMax
            r16 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r16]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r10, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x047e
            if (r15 < r14) goto L_0x047e
            r4 = 96
            if (r15 > r4) goto L_0x047e
            r4 = 63
        L_0x0472:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r0 = r4
            r12 = r9
            r4 = 1
            goto L_0x03a1
        L_0x047e:
            throw r0
        L_0x047f:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0487
            throw r1
        L_0x0487:
            goto L_0x0489
        L_0x0488:
            throw r0
        L_0x0489:
            goto L_0x0488
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.length():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x0319, code lost:
        r18 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:150:0x0432, code lost:
        if (r13 <= 58) goto L_0x040a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:156:0x0455, code lost:
        if (r13 <= 93) goto L_0x040e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x0158, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x018f, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:98:0x030d, code lost:
        r0 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:99:0x030e, code lost:
        r18 = r0;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void setMax() {
        /*
            r22 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r22
            r1.<init>(r2)
            r0 = 5774(0x168e, float:8.091E-42)
            short r0 = (short) r0
            r3 = 395(0x18b, float:5.54E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x04da }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x04da }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x04da }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x04da }
            byte[] r9 = getMax     // Catch:{ all -> 0x04da }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x04da }
            byte r9 = (byte) r9     // Catch:{ all -> 0x04da }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x04da }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x04da }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x04da }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x04da }
            byte[] r13 = getMax     // Catch:{ all -> 0x04da }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x04da }
            byte r13 = (byte) r13     // Catch:{ all -> 0x04da }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x04da }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x04da }
            byte[] r13 = getMax     // Catch:{ all -> 0x04da }
            byte r13 = r13[r10]     // Catch:{ all -> 0x04da }
            byte r13 = (byte) r13     // Catch:{ all -> 0x04da }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x04da }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x04da }
            r12[r7] = r13     // Catch:{ all -> 0x04da }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x04da }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x04da }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x04da }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x006c:
            int r11 = r0.length
            r12 = 35
            if (r9 >= r11) goto L_0x0104
            r11 = r0[r9]
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ all -> 0x00fb }
            r13[r7] = r11     // Catch:{ all -> 0x00fb }
            byte[] r11 = getMax     // Catch:{ all -> 0x00fb }
            byte r11 = r11[r7]     // Catch:{ all -> 0x00fb }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x00fb }
            r14 = r11 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fb }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fb }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fb }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fb }
            java.lang.String r11 = setMin(r11, r14, r15)     // Catch:{ all -> 0x00fb }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x00fb }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fb }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fb }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fb }
            byte r12 = r16[r12]     // Catch:{ all -> 0x00fb }
            byte r12 = (byte) r12     // Catch:{ all -> 0x00fb }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x00fb }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x00fb }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fb }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fb }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fb }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x00fb }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fb }
            r14[r7] = r15     // Catch:{ all -> 0x00fb }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r14)     // Catch:{ all -> 0x00fb }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r13)     // Catch:{ all -> 0x00fb }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f2 }
            byte r13 = r13[r7]     // Catch:{ all -> 0x00f2 }
            int r13 = r13 + r5
            short r13 = (short) r13     // Catch:{ all -> 0x00f2 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f2 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00f2 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f2 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f2 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f2 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f2 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f2 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f2 }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00f2 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00f2 }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00f2 }
            java.lang.reflect.Method r7 = r13.getMethod(r7, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Object r7 = r7.invoke(r11, r12)     // Catch:{ all -> 0x00f2 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00f2 }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00f2 }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x006c
        L_0x00f2:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fa
            throw r1
        L_0x00fa:
            throw r0
        L_0x00fb:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0103
            throw r1
        L_0x0103:
            throw r0
        L_0x0104:
            r9 = 16
            r11 = 4
            r18 = 0
        L_0x0109:
            int r13 = r18 + 1
            r14 = 88
            r0 = r6[r18]     // Catch:{ all -> 0x031f }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x031f }
            r15 = 25
            r4 = 34
            r7 = 8
            r8 = 28
            r10 = 5
            switch(r0) {
                case -45: goto L_0x0311;
                case -44: goto L_0x0303;
                case -43: goto L_0x02f3;
                case -42: goto L_0x02ed;
                case -41: goto L_0x02db;
                case -40: goto L_0x02c9;
                case -39: goto L_0x02c1;
                case -38: goto L_0x02b9;
                case -37: goto L_0x02b1;
                case -36: goto L_0x02a7;
                case -35: goto L_0x029f;
                case -34: goto L_0x028d;
                case -33: goto L_0x028c;
                case -32: goto L_0x0286;
                case -31: goto L_0x0274;
                case -30: goto L_0x026e;
                case -29: goto L_0x0266;
                case -28: goto L_0x025b;
                case -27: goto L_0x024d;
                case -26: goto L_0x0247;
                case -25: goto L_0x023f;
                case -24: goto L_0x0237;
                case -23: goto L_0x022c;
                case -22: goto L_0x0224;
                case -21: goto L_0x0212;
                case -20: goto L_0x0200;
                case -19: goto L_0x01fa;
                case -18: goto L_0x01e8;
                case -17: goto L_0x01d6;
                case -16: goto L_0x01cf;
                case -15: goto L_0x01c6;
                case -14: goto L_0x01c0;
                case -13: goto L_0x01ba;
                case -12: goto L_0x01af;
                case -11: goto L_0x01a1;
                case -10: goto L_0x019c;
                case -9: goto L_0x0194;
                case -8: goto L_0x017f;
                case -7: goto L_0x016e;
                case -6: goto L_0x015d;
                case -5: goto L_0x0148;
                case -4: goto L_0x0141;
                case -3: goto L_0x012f;
                case -2: goto L_0x0128;
                case -1: goto L_0x0121;
                default: goto L_0x011f;
            }     // Catch:{ all -> 0x031f }
        L_0x011f:
            goto L_0x0319
        L_0x0121:
            r0 = 142(0x8e, float:1.99E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 142(0x8e, float:1.99E-43)
            goto L_0x0109
        L_0x0128:
            r0 = 122(0x7a, float:1.71E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 122(0x7a, float:1.71E-43)
            goto L_0x0109
        L_0x012f:
            r1.getMax(r12)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            r4 = 83
            if (r0 == r4) goto L_0x013d
            r4 = 97
            r0 = 6
            goto L_0x030e
        L_0x013d:
            r0 = 157(0x9d, float:2.2E-43)
            goto L_0x030e
        L_0x0141:
            r0 = 164(0xa4, float:2.3E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 164(0xa4, float:2.3E-43)
            goto L_0x0109
        L_0x0148:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.AppPreDownloadManager$2 r0 = r0.FastBitmap$CoordinateSystem     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
        L_0x0158:
            r1.getMax(r14)     // Catch:{ all -> 0x031f }
            goto L_0x0319
        L_0x015d:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x031f }
            r0.dispose()     // Catch:{ all -> 0x031f }
            goto L_0x0319
        L_0x016e:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.getAppPreDownloadCacheManager r0 = r0.isInside     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x017f:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            int r0 = super.hashCode()     // Catch:{ all -> 0x031f }
            r1.length = r0     // Catch:{ all -> 0x031f }
        L_0x018f:
            r1.getMax(r7)     // Catch:{ all -> 0x031f }
            goto L_0x0319
        L_0x0194:
            r0 = 95
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 95
            goto L_0x0109
        L_0x019c:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x031f }
            r1.length = r0     // Catch:{ all -> 0x031f }
            goto L_0x018f
        L_0x01a1:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r15)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x031f }
            goto L_0x0319
        L_0x01af:
            r1.getMax(r4)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 != 0) goto L_0x030d
            r0 = 44
            goto L_0x030e
        L_0x01ba:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 4
            goto L_0x0109
        L_0x01c0:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 93
            goto L_0x0109
        L_0x01c6:
            r0 = 2
            r1.getMax(r0)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x031f }
            throw r0     // Catch:{ all -> 0x031f }
        L_0x01cf:
            r0 = 3
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 3
            goto L_0x0109
        L_0x01d6:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.setRetryCount r0 = r0.toIntRange     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x01e8:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.getDelay r0 = r0.getMin     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x01fa:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 58
            goto L_0x0109
        L_0x0200:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.NetworkUtils$NetworkDetailCallback r0 = r0.setMax     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x0212:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x0224:
            r0 = 165(0xa5, float:2.31E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 165(0xa5, float:2.31E-43)
            goto L_0x0109
        L_0x022c:
            r1.getMax(r4)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 != 0) goto L_0x030d
            r0 = 92
            goto L_0x030e
        L_0x0237:
            r0 = 141(0x8d, float:1.98E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 141(0x8d, float:1.98E-43)
            goto L_0x0109
        L_0x023f:
            r0 = 116(0x74, float:1.63E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 116(0x74, float:1.63E-43)
            goto L_0x0109
        L_0x0247:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x031f }
            r1.length = r0     // Catch:{ all -> 0x031f }
            goto L_0x018f
        L_0x024d:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r15)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            onNavigationEvent = r0     // Catch:{ all -> 0x031f }
            goto L_0x0319
        L_0x025b:
            r1.getMax(r8)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 != 0) goto L_0x030d
            r0 = 108(0x6c, float:1.51E-43)
            goto L_0x030e
        L_0x0266:
            r0 = 139(0x8b, float:1.95E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 139(0x8b, float:1.95E-43)
            goto L_0x0109
        L_0x026e:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 1
            goto L_0x0109
        L_0x0274:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.syncJsApi r0 = r0.equals     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x0286:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 16
            goto L_0x0109
        L_0x028c:
            return
        L_0x028d:
            r1.getMax(r12)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 == 0) goto L_0x029b
            if (r0 == r5) goto L_0x0297
            goto L_0x029b
        L_0x0297:
            r0 = 109(0x6d, float:1.53E-43)
            goto L_0x030e
        L_0x029b:
            r0 = 49
            goto L_0x030e
        L_0x029f:
            r0 = 148(0x94, float:2.07E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 148(0x94, float:2.07E-43)
            goto L_0x0109
        L_0x02a7:
            r1.getMax(r8)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 != 0) goto L_0x030d
            r0 = 137(0x89, float:1.92E-43)
            goto L_0x030e
        L_0x02b1:
            r0 = 155(0x9b, float:2.17E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 155(0x9b, float:2.17E-43)
            goto L_0x0109
        L_0x02b9:
            r0 = 46
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 46
            goto L_0x0109
        L_0x02c1:
            r0 = 125(0x7d, float:1.75E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 125(0x7d, float:1.75E-43)
            goto L_0x0109
        L_0x02c9:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.uploadMonitorEvent r0 = r0.hashCode     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x02db:
            r1.length = r5     // Catch:{ all -> 0x031f }
            r1.getMax(r11)     // Catch:{ all -> 0x031f }
            r1.getMax(r10)     // Catch:{ all -> 0x031f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x031f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x031f }
            o.appConfigIsEnable r0 = r0.length     // Catch:{ all -> 0x031f }
            r1.isInside = r0     // Catch:{ all -> 0x031f }
            goto L_0x0158
        L_0x02ed:
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 65
            goto L_0x0109
        L_0x02f3:
            r1.getMax(r12)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 == 0) goto L_0x0300
            if (r0 == r5) goto L_0x02fd
            goto L_0x0300
        L_0x02fd:
            r0 = 120(0x78, float:1.68E-43)
            goto L_0x030e
        L_0x0300:
            r0 = 178(0xb2, float:2.5E-43)
            goto L_0x030e
        L_0x0303:
            r1.getMax(r8)     // Catch:{ all -> 0x031f }
            int r0 = r1.setMax     // Catch:{ all -> 0x031f }
            if (r0 != 0) goto L_0x030d
            r0 = 177(0xb1, float:2.48E-43)
            goto L_0x030e
        L_0x030d:
            r0 = r13
        L_0x030e:
            r18 = r0
            goto L_0x031b
        L_0x0311:
            r0 = 123(0x7b, float:1.72E-43)
            r10 = 4873(0x1309, float:6.829E-42)
            r18 = 123(0x7b, float:1.72E-43)
            goto L_0x0109
        L_0x0319:
            r18 = r13
        L_0x031b:
            r10 = 4873(0x1309, float:6.829E-42)
            goto L_0x0109
        L_0x031f:
            r0 = move-exception
            r4 = 12
            r7 = 52
            r10 = 45
            if (r13 < r4) goto L_0x0338
            if (r13 > r9) goto L_0x0338
            r4 = 138(0x8a, float:1.93E-43)
            r8 = 58
            r10 = 65
            r11 = 93
            r14 = 4873(0x1309, float:6.829E-42)
            r18 = 138(0x8a, float:1.93E-43)
            goto L_0x04cc
        L_0x0338:
            byte[] r4 = getMax
            r15 = 5474(0x1562, float:7.671E-42)
            byte r5 = r4[r15]
            short r5 = (short) r5
            r8 = 969(0x3c9, float:1.358E-42)
            short r8 = (short) r8
            r19 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r19]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r5, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0365
            if (r13 < r9) goto L_0x0365
            if (r13 > r10) goto L_0x0365
        L_0x0359:
            r8 = 58
            r10 = 65
            r11 = 93
        L_0x035f:
            r14 = 4873(0x1309, float:6.829E-42)
            r18 = 45
            goto L_0x04cc
        L_0x0365:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            r5 = 974(0x3ce, float:1.365E-42)
            short r5 = (short) r5
            byte[] r20 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r9 = r20[r19]
            byte r9 = (byte) r9
            java.lang.String r4 = setMin(r4, r5, r9)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0389
            r4 = 40
            if (r13 < r4) goto L_0x0389
            if (r13 > r10) goto L_0x0389
            goto L_0x0359
        L_0x0389:
            r4 = 55
            if (r13 < r4) goto L_0x039f
            r4 = 58
            if (r13 > r4) goto L_0x039f
            r4 = 147(0x93, float:2.06E-43)
            r8 = 58
            r10 = 65
            r11 = 93
            r14 = 4873(0x1309, float:6.829E-42)
            r18 = 147(0x93, float:2.06E-43)
            goto L_0x04cc
        L_0x039f:
            r4 = 970(0x3ca, float:1.359E-42)
            short r4 = (short) r4
            byte[] r9 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r19]
            byte r9 = (byte) r9
            java.lang.String r4 = setMin(r3, r4, r9)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03c0
            r4 = 50
            if (r13 < r4) goto L_0x03c0
            r4 = 51
            if (r13 > r4) goto L_0x03c0
            goto L_0x0359
        L_0x03c0:
            byte[] r4 = getMax
            r9 = 41
            byte r9 = r4[r9]
            short r9 = (short) r9
            r10 = 973(0x3cd, float:1.363E-42)
            short r10 = (short) r10
            r19 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r19]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r9, r10, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e5
            r4 = 51
            if (r13 < r4) goto L_0x03e5
            if (r13 > r7) goto L_0x03e5
            goto L_0x0359
        L_0x03e5:
            r4 = 5485(0x156d, float:7.686E-42)
            short r4 = (short) r4
            r9 = 985(0x3d9, float:1.38E-42)
            short r9 = (short) r9
            byte[] r21 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r11 = r21[r19]
            byte r11 = (byte) r11
            java.lang.String r11 = setMin(r4, r9, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0414
            r11 = 53
            if (r13 < r11) goto L_0x0414
            r11 = 54
            if (r13 > r11) goto L_0x0414
            r8 = 58
        L_0x040a:
            r10 = 65
            r11 = 93
        L_0x040e:
            r14 = 4873(0x1309, float:6.829E-42)
        L_0x0410:
            r18 = 124(0x7c, float:1.74E-43)
            goto L_0x04cc
        L_0x0414:
            byte[] r11 = getMax
            byte r15 = r11[r15]
            short r15 = (short) r15
            r19 = 4873(0x1309, float:6.829E-42)
            byte r11 = r11[r19]
            byte r11 = (byte) r11
            java.lang.String r8 = setMin(r15, r8, r11)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x0435
            r8 = 54
            if (r13 < r8) goto L_0x0435
            r8 = 58
            if (r13 > r8) goto L_0x0437
            goto L_0x040a
        L_0x0435:
            r8 = 58
        L_0x0437:
            r11 = 5397(0x1515, float:7.563E-42)
            short r11 = (short) r11
            byte[] r15 = getMax
            r18 = 4873(0x1309, float:6.829E-42)
            byte r15 = r15[r18]
            byte r15 = (byte) r15
            java.lang.String r10 = setMin(r11, r10, r15)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x0458
            r10 = 65
            r11 = 93
            if (r13 < r10) goto L_0x045c
            if (r13 > r11) goto L_0x045c
        L_0x0457:
            goto L_0x040e
        L_0x0458:
            r10 = 65
            r11 = 93
        L_0x045c:
            byte[] r15 = getMax
            r16 = 4873(0x1309, float:6.829E-42)
            byte r15 = r15[r16]
            byte r15 = (byte) r15
            java.lang.String r4 = setMin(r4, r9, r15)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0478
            r4 = 87
            if (r13 < r4) goto L_0x0478
            if (r13 > r14) goto L_0x0478
            goto L_0x0457
        L_0x0478:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            byte[] r9 = getMax
            r14 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r14]
            byte r9 = (byte) r9
            java.lang.String r4 = setMin(r4, r5, r9)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x049c
            r4 = 117(0x75, float:1.64E-43)
            if (r13 < r4) goto L_0x049c
            r4 = 118(0x76, float:1.65E-43)
            if (r13 > r4) goto L_0x049c
            goto L_0x035f
        L_0x049c:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            byte[] r9 = getMax
            r14 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r14]
            byte r9 = (byte) r9
            java.lang.String r4 = setMin(r4, r5, r9)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04c0
            r4 = 118(0x76, float:1.65E-43)
            if (r13 < r4) goto L_0x04c0
            r4 = 120(0x78, float:1.68E-43)
            if (r13 > r4) goto L_0x04c0
            goto L_0x0410
        L_0x04c0:
            r4 = 179(0xb3, float:2.51E-43)
            if (r13 < r4) goto L_0x04d9
            r4 = 183(0xb7, float:2.56E-43)
            if (r13 > r4) goto L_0x04d9
            r4 = 48
            r18 = 48
        L_0x04cc:
            r1.isInside = r0
            r1.getMax(r7)
            r5 = 1
            r9 = 16
            r10 = 4873(0x1309, float:6.829E-42)
            r11 = 4
            goto L_0x0109
        L_0x04d9:
            throw r0
        L_0x04da:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x04e2
            throw r1
        L_0x04e2:
            goto L_0x04e4
        L_0x04e3:
            throw r0
        L_0x04e4:
            goto L_0x04e3
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMax():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:105:0x02ee, code lost:
        if (r7 <= 48) goto L_0x0257;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:133:0x0386, code lost:
        if (r7 <= 74) goto L_0x029d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x0134, code lost:
        r1.getMax(8);
     */
    @javax.inject.Inject
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void setMax(o.AppPreDownloadManager.AnonymousClass2 r19, o.AppPreDownloadManager.AnonymousClass1 r20, o.isAppIdInPreDownloadConfig r21, o.uploadMonitorEvent r22, o.copyBackForwardList r23) {
        /*
            r18 = this;
            o.setLayoutDirection r8 = new o.setLayoutDirection
            r1 = r8
            r2 = r18
            r3 = r19
            r4 = r20
            r5 = r21
            r6 = r22
            r7 = r23
            r1.<init>(r2, r3, r4, r5, r6, r7)
            r0 = 2125(0x84d, float:2.978E-42)
            short r0 = (short) r0
            int r1 = setMin
            r1 = r1 | 642(0x282, float:9.0E-43)
            short r1 = (short) r1
            r2 = 73
            byte r3 = (byte) r2
            java.lang.String r0 = setMin(r0, r1, r3)
            r1 = 5452(0x154c, float:7.64E-42)
            short r1 = (short) r1
            r3 = 1003(0x3eb, float:1.406E-42)
            short r3 = (short) r3
            r4 = r3 & 94
            byte r4 = (byte) r4
            java.lang.String r3 = setMin(r1, r3, r4)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x03bb }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x03bb }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x03bb }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x03bb }
            byte[] r9 = getMax     // Catch:{ all -> 0x03bb }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x03bb }
            byte r9 = (byte) r9     // Catch:{ all -> 0x03bb }
            java.lang.String r9 = setMin(r3, r7, r9)     // Catch:{ all -> 0x03bb }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x03bb }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x03bb }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x03bb }
            byte[] r13 = getMax     // Catch:{ all -> 0x03bb }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x03bb }
            byte r13 = (byte) r13     // Catch:{ all -> 0x03bb }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x03bb }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x03bb }
            byte[] r13 = getMax     // Catch:{ all -> 0x03bb }
            byte r13 = r13[r10]     // Catch:{ all -> 0x03bb }
            byte r13 = (byte) r13     // Catch:{ all -> 0x03bb }
            java.lang.String r13 = setMin(r3, r7, r13)     // Catch:{ all -> 0x03bb }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x03bb }
            r12[r6] = r13     // Catch:{ all -> 0x03bb }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x03bb }
            java.lang.Object r0 = r9.invoke(r0, r5)     // Catch:{ all -> 0x03bb }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x03bb }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r9 = 0
        L_0x0079:
            int r11 = r0.length
            r12 = 35
            if (r9 >= r11) goto L_0x0111
            r11 = r0[r9]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x0108 }
            r13[r6] = r11     // Catch:{ all -> 0x0108 }
            byte[] r11 = getMax     // Catch:{ all -> 0x0108 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x0108 }
            int r11 = r11 + r4
            short r11 = (short) r11     // Catch:{ all -> 0x0108 }
            r14 = r11 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0108 }
            byte[] r15 = getMax     // Catch:{ all -> 0x0108 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x0108 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0108 }
            java.lang.String r11 = setMin(r11, r14, r15)     // Catch:{ all -> 0x0108 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x0108 }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0108 }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0108 }
            byte[] r16 = getMax     // Catch:{ all -> 0x0108 }
            byte r12 = r16[r12]     // Catch:{ all -> 0x0108 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0108 }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x0108 }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x0108 }
            byte[] r15 = getMax     // Catch:{ all -> 0x0108 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x0108 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0108 }
            java.lang.String r15 = setMin(r3, r7, r15)     // Catch:{ all -> 0x0108 }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x0108 }
            r14[r6] = r15     // Catch:{ all -> 0x0108 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r14)     // Catch:{ all -> 0x0108 }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r13)     // Catch:{ all -> 0x0108 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00ff }
            byte r13 = r13[r6]     // Catch:{ all -> 0x00ff }
            int r13 = r13 + r4
            short r13 = (short) r13     // Catch:{ all -> 0x00ff }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00ff }
            byte[] r15 = getMax     // Catch:{ all -> 0x00ff }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00ff }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00ff }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00ff }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00ff }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00ff }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00ff }
            byte[] r16 = getMax     // Catch:{ all -> 0x00ff }
            r17 = 76
            byte r6 = r16[r17]     // Catch:{ all -> 0x00ff }
            byte r6 = (byte) r6     // Catch:{ all -> 0x00ff }
            java.lang.String r6 = setMin(r14, r15, r6)     // Catch:{ all -> 0x00ff }
            java.lang.reflect.Method r6 = r13.getMethod(r6, r12)     // Catch:{ all -> 0x00ff }
            java.lang.Object r6 = r6.invoke(r11, r12)     // Catch:{ all -> 0x00ff }
            java.lang.Integer r6 = (java.lang.Integer) r6     // Catch:{ all -> 0x00ff }
            int r6 = r6.intValue()     // Catch:{ all -> 0x00ff }
            r5[r9] = r6
            int r9 = r9 + 1
            r6 = 0
            goto L_0x0079
        L_0x00ff:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0107
            throw r1
        L_0x0107:
            throw r0
        L_0x0108:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0110
            throw r1
        L_0x0110:
            throw r0
        L_0x0111:
            r6 = 26
            r0 = 0
        L_0x0114:
            int r7 = r0 + 1
            r11 = 28
            r13 = 34
            r0 = r5[r0]     // Catch:{ all -> 0x0231 }
            int r0 = r8.getMax(r0)     // Catch:{ all -> 0x0231 }
            r14 = 8
            r15 = 25
            r2 = 2
            r3 = 4
            r9 = 5
            switch(r0) {
                case -26: goto L_0x0229;
                case -25: goto L_0x0226;
                case -24: goto L_0x021c;
                case -23: goto L_0x020f;
                case -22: goto L_0x0209;
                case -21: goto L_0x01fc;
                case -20: goto L_0x01fb;
                case -19: goto L_0x01f8;
                case -18: goto L_0x01f6;
                case -17: goto L_0x01e0;
                case -16: goto L_0x01ca;
                case -15: goto L_0x01c7;
                case -14: goto L_0x01b0;
                case -13: goto L_0x0199;
                case -12: goto L_0x0185;
                case -11: goto L_0x0181;
                case -10: goto L_0x0179;
                case -9: goto L_0x0175;
                case -8: goto L_0x015e;
                case -7: goto L_0x015a;
                case -6: goto L_0x0156;
                case -5: goto L_0x0152;
                case -4: goto L_0x0147;
                case -3: goto L_0x0139;
                case -2: goto L_0x0130;
                case -1: goto L_0x012c;
                default: goto L_0x012a;
            }     // Catch:{ all -> 0x0231 }
        L_0x012a:
            goto L_0x022c
        L_0x012c:
            r0 = 35
            goto L_0x022d
        L_0x0130:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0231 }
            r8.length = r0     // Catch:{ all -> 0x0231 }
        L_0x0134:
            r8.getMax(r14)     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x0139:
            r8.length = r4     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r15)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x0147:
            r8.getMax(r11)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            if (r0 != 0) goto L_0x022c
            r0 = 25
            goto L_0x022d
        L_0x0152:
            r0 = 96
            goto L_0x022d
        L_0x0156:
            r0 = 54
            goto L_0x022d
        L_0x015a:
            r0 = 38
            goto L_0x022d
        L_0x015e:
            r8.length = r2     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r2 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.copyBackForwardList r2 = (o.copyBackForwardList) r2     // Catch:{ all -> 0x0231 }
            r0.toFloatRange = r2     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x0175:
            r0 = 56
            goto L_0x022d
        L_0x0179:
            r8.getMax(r2)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0231 }
            throw r0     // Catch:{ all -> 0x0231 }
        L_0x0181:
            r0 = 73
            goto L_0x022d
        L_0x0185:
            r8.getMax(r12)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            r2 = 62
            if (r0 == 0) goto L_0x0195
            if (r0 == r4) goto L_0x0191
            goto L_0x0195
        L_0x0191:
            r0 = 39
            goto L_0x022d
        L_0x0195:
            r0 = 62
            goto L_0x022d
        L_0x0199:
            r8.length = r2     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r2 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.AppPreDownloadManager$2 r2 = (o.AppPreDownloadManager.AnonymousClass2) r2     // Catch:{ all -> 0x0231 }
            r0.FastBitmap$CoordinateSystem = r2     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x01b0:
            r8.length = r2     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r2 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.AppPreDownloadManager$1 r2 = (o.AppPreDownloadManager.AnonymousClass1) r2     // Catch:{ all -> 0x0231 }
            r0.toString = r2     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x01c7:
            r0 = 47
            goto L_0x022d
        L_0x01ca:
            r8.length = r2     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r2 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.isAppIdInPreDownloadConfig r2 = (o.isAppIdInPreDownloadConfig) r2     // Catch:{ all -> 0x0231 }
            r0.toDoubleRange = r2     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x01e0:
            r8.length = r2     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r0 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0231 }
            r8.getMax(r9)     // Catch:{ all -> 0x0231 }
            java.lang.Object r2 = r8.IsOverlapping     // Catch:{ all -> 0x0231 }
            o.uploadMonitorEvent r2 = (o.uploadMonitorEvent) r2     // Catch:{ all -> 0x0231 }
            r0.hashCode = r2     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x01f6:
            r0 = 1
            goto L_0x022d
        L_0x01f8:
            r0 = 58
            goto L_0x022d
        L_0x01fb:
            return
        L_0x01fc:
            r8.getMax(r12)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            if (r0 == 0) goto L_0x0206
            r0 = 28
            goto L_0x022d
        L_0x0206:
            r0 = 30
            goto L_0x022d
        L_0x0209:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0231 }
            r8.length = r0     // Catch:{ all -> 0x0231 }
            goto L_0x0134
        L_0x020f:
            r8.length = r4     // Catch:{ all -> 0x0231 }
            r8.getMax(r3)     // Catch:{ all -> 0x0231 }
            r8.getMax(r15)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0231 }
            goto L_0x022c
        L_0x021c:
            r8.getMax(r13)     // Catch:{ all -> 0x0231 }
            int r0 = r8.setMax     // Catch:{ all -> 0x0231 }
            if (r0 != 0) goto L_0x022c
            r0 = 95
            goto L_0x022d
        L_0x0226:
            r0 = 26
            goto L_0x022d
        L_0x0229:
            r0 = 59
            goto L_0x022d
        L_0x022c:
            r0 = r7
        L_0x022d:
            r2 = 73
            goto L_0x0114
        L_0x0231:
            r0 = move-exception
            int r2 = setMin
            r2 = r2 | 68
            short r2 = (short) r2
            r3 = 974(0x3ce, float:1.365E-42)
            short r3 = (short) r3
            byte[] r9 = getMax
            byte r9 = r9[r10]
            byte r9 = (byte) r9
            java.lang.String r2 = setMin(r2, r3, r9)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            r9 = 72
            r14 = 61
            if (r2 == 0) goto L_0x025b
            if (r7 < r4) goto L_0x025b
            if (r7 > r6) goto L_0x025b
        L_0x0255:
            r2 = 47
        L_0x0257:
            r3 = 73
            goto L_0x03ad
        L_0x025b:
            r2 = 5397(0x1515, float:7.563E-42)
            short r2 = (short) r2
            r15 = 973(0x3cd, float:1.363E-42)
            short r15 = (short) r15
            byte[] r16 = getMax
            byte r4 = r16[r10]
            byte r4 = (byte) r4
            java.lang.String r2 = setMin(r2, r15, r4)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x027b
            r2 = 20
            if (r7 < r2) goto L_0x027b
            if (r7 > r6) goto L_0x027b
            goto L_0x0255
        L_0x027b:
            int r2 = setMin
            r2 = r2 | 68
            short r2 = (short) r2
            byte[] r4 = getMax
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r2 = setMin(r2, r3, r4)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x02a1
            if (r7 < r11) goto L_0x02a1
            r2 = 30
            if (r7 > r2) goto L_0x02a1
            r2 = 47
        L_0x029b:
            r3 = 73
        L_0x029d:
            r13 = 61
            goto L_0x03ad
        L_0x02a1:
            r2 = 31
            if (r7 < r2) goto L_0x02af
            if (r7 > r13) goto L_0x02af
            r2 = 47
            r3 = 73
            r13 = 72
            goto L_0x03ad
        L_0x02af:
            int r2 = setMin
            r2 = r2 | 68
            short r2 = (short) r2
            byte[] r4 = getMax
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r2 = setMin(r2, r3, r4)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x02d0
            r2 = 41
            if (r7 < r2) goto L_0x02d0
            r2 = 47
            if (r7 > r2) goto L_0x02d0
        L_0x02cf:
            goto L_0x029b
        L_0x02d0:
            int r2 = setMin
            r2 = r2 | 68
            short r2 = (short) r2
            byte[] r4 = getMax
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r2 = setMin(r2, r3, r4)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x02f2
            r2 = 47
            if (r7 < r2) goto L_0x02f4
            r4 = 48
            if (r7 > r4) goto L_0x02f4
        L_0x02f0:
            goto L_0x0257
        L_0x02f2:
            r2 = 47
        L_0x02f4:
            byte[] r4 = getMax
            r11 = 5474(0x1562, float:7.671E-42)
            byte r11 = r4[r11]
            short r11 = (short) r11
            r15 = 969(0x3c9, float:1.358E-42)
            short r15 = (short) r15
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r11, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0318
            r4 = 50
            if (r7 < r4) goto L_0x0318
            r4 = 51
            if (r7 > r4) goto L_0x0318
            goto L_0x02f0
        L_0x0318:
            r4 = 69
            if (r7 < r4) goto L_0x0326
            if (r7 > r9) goto L_0x0326
            r3 = 98
            r3 = 73
            r13 = 98
            goto L_0x03ad
        L_0x0326:
            int r4 = setMin
            r4 = r4 | 2374(0x946, float:3.327E-42)
            short r4 = (short) r4
            r11 = 965(0x3c5, float:1.352E-42)
            short r11 = (short) r11
            byte[] r15 = getMax
            byte r15 = r15[r10]
            byte r15 = (byte) r15
            java.lang.String r4 = setMin(r4, r11, r15)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x034a
            r4 = 64
            if (r7 < r4) goto L_0x034a
            r4 = 65
            if (r7 > r4) goto L_0x034a
            goto L_0x02f0
        L_0x034a:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r3 = setMin(r4, r3, r11)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x036a
            r3 = 67
            if (r7 < r3) goto L_0x036a
            if (r7 > r9) goto L_0x036a
            goto L_0x02cf
        L_0x036a:
            r3 = 970(0x3ca, float:1.359E-42)
            short r3 = (short) r3
            byte[] r4 = getMax
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r3 = setMin(r1, r3, r4)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x038a
            r3 = 73
            if (r7 < r3) goto L_0x038c
            r4 = 74
            if (r7 > r4) goto L_0x038c
            goto L_0x029d
        L_0x038a:
            r3 = 73
        L_0x038c:
            r4 = 5485(0x156d, float:7.686E-42)
            short r4 = (short) r4
            r9 = 985(0x3d9, float:1.38E-42)
            short r9 = (short) r9
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r4 = setMin(r4, r9, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03ba
            r4 = 91
            if (r7 < r4) goto L_0x03ba
            r4 = 92
            if (r7 > r4) goto L_0x03ba
        L_0x03ad:
            r8.isInside = r0
            r0 = 52
            r8.getMax(r0)
            r0 = r13
            r2 = 73
            r4 = 1
            goto L_0x0114
        L_0x03ba:
            throw r0
        L_0x03bb:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03c3
            throw r1
        L_0x03c3:
            goto L_0x03c5
        L_0x03c4:
            throw r0
        L_0x03c5:
            goto L_0x03c4
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMax(o.AppPreDownloadManager$2, o.AppPreDownloadManager$1, o.isAppIdInPreDownloadConfig, o.uploadMonitorEvent, o.copyBackForwardList):void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:103:0x02d1, code lost:
        if (r15 <= 58) goto L_0x034f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x02f6, code lost:
        if (r15 <= 61) goto L_0x026f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x031c, code lost:
        if (r15 <= 88) goto L_0x026f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:90:0x028e, code lost:
        if (r15 <= 39) goto L_0x026f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:97:0x02ac, code lost:
        if (r15 <= 58) goto L_0x034f;
     */
    @javax.inject.Inject
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void setMax(o.syncJsApi r20, o.setRetryCount r21, o.getAppPreDownloadCacheManager r22) {
        /*
            r19 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r19
            r0 = r20
            r3 = r21
            r4 = r22
            r1.<init>(r2, r0, r3, r4)
            r0 = 5090(0x13e2, float:7.133E-42)
            short r0 = (short) r0
            int r3 = setMin
            r3 = r3 | 640(0x280, float:8.97E-43)
            short r3 = (short) r3
            r4 = 73
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r3, r4, r5)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x0359 }
            r7 = 0
            r6[r7] = r4     // Catch:{ all -> 0x0359 }
            r4 = 1994(0x7ca, float:2.794E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0359 }
            r8 = 988(0x3dc, float:1.384E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0359 }
            byte[] r9 = getMax     // Catch:{ all -> 0x0359 }
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]     // Catch:{ all -> 0x0359 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0359 }
            java.lang.String r9 = setMin(r4, r8, r9)     // Catch:{ all -> 0x0359 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0359 }
            r11 = 1028(0x404, float:1.44E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0359 }
            r12 = 999(0x3e7, float:1.4E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0359 }
            byte[] r13 = getMax     // Catch:{ all -> 0x0359 }
            r14 = 145(0x91, float:2.03E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0359 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0359 }
            java.lang.String r11 = setMin(r11, r12, r13)     // Catch:{ all -> 0x0359 }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x0359 }
            byte[] r13 = getMax     // Catch:{ all -> 0x0359 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0359 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0359 }
            java.lang.String r13 = setMin(r4, r8, r13)     // Catch:{ all -> 0x0359 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0359 }
            r12[r7] = r13     // Catch:{ all -> 0x0359 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x0359 }
            java.lang.Object r0 = r9.invoke(r0, r6)     // Catch:{ all -> 0x0359 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0359 }
            int r6 = r0.length
            int[] r6 = new int[r6]
            r9 = 0
        L_0x0074:
            int r11 = r0.length
            r12 = 35
            if (r9 >= r11) goto L_0x010c
            r11 = r0[r9]
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ all -> 0x0103 }
            r13[r7] = r11     // Catch:{ all -> 0x0103 }
            byte[] r11 = getMax     // Catch:{ all -> 0x0103 }
            byte r11 = r11[r7]     // Catch:{ all -> 0x0103 }
            int r11 = r11 + r5
            short r11 = (short) r11     // Catch:{ all -> 0x0103 }
            r14 = r11 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0103 }
            byte[] r15 = getMax     // Catch:{ all -> 0x0103 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x0103 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0103 }
            java.lang.String r11 = setMin(r11, r14, r15)     // Catch:{ all -> 0x0103 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x0103 }
            r14 = 3277(0xccd, float:4.592E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0103 }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0103 }
            byte[] r16 = getMax     // Catch:{ all -> 0x0103 }
            byte r12 = r16[r12]     // Catch:{ all -> 0x0103 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0103 }
            java.lang.String r12 = setMin(r14, r15, r12)     // Catch:{ all -> 0x0103 }
            java.lang.Class[] r14 = new java.lang.Class[r5]     // Catch:{ all -> 0x0103 }
            byte[] r15 = getMax     // Catch:{ all -> 0x0103 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x0103 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0103 }
            java.lang.String r15 = setMin(r4, r8, r15)     // Catch:{ all -> 0x0103 }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x0103 }
            r14[r7] = r15     // Catch:{ all -> 0x0103 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r14)     // Catch:{ all -> 0x0103 }
            r12 = 0
            java.lang.Object r11 = r11.invoke(r12, r13)     // Catch:{ all -> 0x0103 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00fa }
            byte r13 = r13[r7]     // Catch:{ all -> 0x00fa }
            int r13 = r13 + r5
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r15 = r15[r10]     // Catch:{ all -> 0x00fa }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fa }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00fa }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00fa }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fa }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fa }
            r17 = 76
            byte r7 = r16[r17]     // Catch:{ all -> 0x00fa }
            byte r7 = (byte) r7     // Catch:{ all -> 0x00fa }
            java.lang.String r7 = setMin(r14, r15, r7)     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r7 = r13.getMethod(r7, r12)     // Catch:{ all -> 0x00fa }
            java.lang.Object r7 = r7.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ all -> 0x00fa }
            int r7 = r7.intValue()     // Catch:{ all -> 0x00fa }
            r6[r9] = r7
            int r9 = r9 + 1
            r7 = 0
            goto L_0x0074
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x010b
            throw r1
        L_0x010b:
            throw r0
        L_0x010c:
            r9 = 14
            r14 = 4
            r0 = 0
        L_0x0110:
            int r15 = r0 + 1
            r0 = r6[r0]     // Catch:{ all -> 0x0205 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x0205 }
            r7 = 25
            r4 = 34
            r13 = 8
            r8 = 2
            r11 = 5
            switch(r0) {
                case -25: goto L_0x0201;
                case -24: goto L_0x01ef;
                case -23: goto L_0x01eb;
                case -22: goto L_0x01d5;
                case -21: goto L_0x01d1;
                case -20: goto L_0x01c6;
                case -19: goto L_0x01b7;
                case -18: goto L_0x01b4;
                case -17: goto L_0x01b0;
                case -16: goto L_0x01a5;
                case -15: goto L_0x0198;
                case -14: goto L_0x0193;
                case -13: goto L_0x018f;
                case -12: goto L_0x018c;
                case -11: goto L_0x018a;
                case -10: goto L_0x017e;
                case -9: goto L_0x0170;
                case -8: goto L_0x0167;
                case -7: goto L_0x0164;
                case -6: goto L_0x0161;
                case -5: goto L_0x014a;
                case -4: goto L_0x0133;
                case -3: goto L_0x012b;
                case -2: goto L_0x0128;
                case -1: goto L_0x0125;
                default: goto L_0x0123;
            }     // Catch:{ all -> 0x0205 }
        L_0x0123:
            goto L_0x0202
        L_0x0125:
            r0 = 39
            goto L_0x0110
        L_0x0128:
            r0 = 58
            goto L_0x0110
        L_0x012b:
            r1.getMax(r8)     // Catch:{ all -> 0x0205 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0205 }
            throw r0     // Catch:{ all -> 0x0205 }
        L_0x0133:
            r1.length = r8     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.syncJsApi r4 = (o.syncJsApi) r4     // Catch:{ all -> 0x0205 }
            r0.equals = r4     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x014a:
            r1.length = r8     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.setRetryCount r4 = (o.setRetryCount) r4     // Catch:{ all -> 0x0205 }
            r0.toIntRange = r4     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x0161:
            r0 = 60
            goto L_0x0110
        L_0x0164:
            r0 = 90
            goto L_0x0110
        L_0x0167:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x0205 }
            r1.length = r0     // Catch:{ all -> 0x0205 }
        L_0x016b:
            r1.getMax(r13)     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x0170:
            r1.length = r5     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r7)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            onNavigationEvent = r0     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x017e:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            if (r0 != 0) goto L_0x0202
            r0 = 38
            goto L_0x0110
        L_0x018a:
            r0 = 1
            goto L_0x0110
        L_0x018c:
            r0 = 88
            goto L_0x0110
        L_0x018f:
            r0 = 44
            goto L_0x0110
        L_0x0193:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x0205 }
            r1.length = r0     // Catch:{ all -> 0x0205 }
            goto L_0x016b
        L_0x0198:
            r1.length = r5     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r7)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x01a5:
            r1.getMax(r4)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            if (r0 != 0) goto L_0x0202
            r0 = 57
            goto L_0x0110
        L_0x01b0:
            r0 = 59
            goto L_0x0110
        L_0x01b4:
            r0 = 4
            goto L_0x0110
        L_0x01b7:
            r1.getMax(r12)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            if (r0 == 0) goto L_0x01c2
            r0 = 93
            goto L_0x0110
        L_0x01c2:
            r0 = 98
            goto L_0x0110
        L_0x01c6:
            r1.getMax(r4)     // Catch:{ all -> 0x0205 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0205 }
            if (r0 != 0) goto L_0x0202
            r0 = 87
            goto L_0x0110
        L_0x01d1:
            r0 = 12
            goto L_0x0110
        L_0x01d5:
            r1.length = r8     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            o.getAppPreDownloadCacheManager r4 = (o.getAppPreDownloadCacheManager) r4     // Catch:{ all -> 0x0205 }
            r0.isInside = r4     // Catch:{ all -> 0x0205 }
            goto L_0x0202
        L_0x01eb:
            r0 = 14
            goto L_0x0110
        L_0x01ef:
            r1.length = r5     // Catch:{ all -> 0x0205 }
            r1.getMax(r14)     // Catch:{ all -> 0x0205 }
            r1.getMax(r11)     // Catch:{ all -> 0x0205 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x0205 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0205 }
            r1.length = r0     // Catch:{ all -> 0x0205 }
            goto L_0x016b
        L_0x0201:
            return
        L_0x0202:
            r0 = r15
            goto L_0x0110
        L_0x0205:
            r0 = move-exception
            byte[] r4 = getMax
            r7 = 41
            byte r7 = r4[r7]
            short r7 = (short) r7
            r8 = 973(0x3cd, float:1.363E-42)
            short r8 = (short) r8
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r7, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r7 = 52
            r13 = 13
            if (r4 == 0) goto L_0x022f
            r4 = 6
            if (r15 < r4) goto L_0x022f
            r4 = 7
            if (r15 > r4) goto L_0x022f
        L_0x022b:
            r5 = 39
            goto L_0x034f
        L_0x022f:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            r5 = 974(0x3ce, float:1.365E-42)
            short r5 = (short) r5
            byte[] r18 = getMax
            byte r11 = r18[r10]
            byte r11 = (byte) r11
            java.lang.String r4 = setMin(r4, r5, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0253
            r4 = 9
            if (r15 < r4) goto L_0x0253
            r4 = 10
            if (r15 > r4) goto L_0x0253
            goto L_0x022b
        L_0x0253:
            r4 = 5397(0x1515, float:7.563E-42)
            short r4 = (short) r4
            byte[] r5 = getMax
            byte r5 = r5[r10]
            byte r5 = (byte) r5
            java.lang.String r5 = setMin(r4, r8, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0272
            if (r15 < r9) goto L_0x0272
            r5 = 39
            if (r15 > r5) goto L_0x0272
        L_0x026f:
            r13 = 3
            goto L_0x034f
        L_0x0272:
            r5 = 970(0x3ca, float:1.359E-42)
            short r5 = (short) r5
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r5 = setMin(r3, r5, r11)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0291
            r5 = 33
            if (r15 < r5) goto L_0x0291
            r5 = 39
            if (r15 > r5) goto L_0x0293
        L_0x0290:
            goto L_0x026f
        L_0x0291:
            r5 = 39
        L_0x0293:
            byte[] r11 = getMax
            byte r11 = r11[r10]
            byte r11 = (byte) r11
            java.lang.String r4 = setMin(r4, r8, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02b0
            r4 = 44
            if (r15 < r4) goto L_0x02b2
            r8 = 58
            if (r15 > r8) goto L_0x02b2
            goto L_0x034f
        L_0x02b0:
            r4 = 44
        L_0x02b2:
            int r8 = setMin
            r8 = r8 | 7559(0x1d87, float:1.0592E-41)
            short r8 = (short) r8
            r11 = 975(0x3cf, float:1.366E-42)
            short r11 = (short) r11
            byte[] r16 = getMax
            byte r4 = r16[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r8, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02d5
            if (r15 < r7) goto L_0x02d5
            r4 = 58
            if (r15 > r4) goto L_0x02d7
            goto L_0x034f
        L_0x02d5:
            r4 = 58
        L_0x02d7:
            r8 = 5485(0x156d, float:7.686E-42)
            short r8 = (short) r8
            r11 = 985(0x3d9, float:1.38E-42)
            short r11 = (short) r11
            byte[] r16 = getMax
            byte r4 = r16[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r8, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02f9
            r4 = 60
            if (r15 < r4) goto L_0x02fb
            r8 = 61
            if (r15 > r8) goto L_0x02fb
            goto L_0x0290
        L_0x02f9:
            r4 = 60
        L_0x02fb:
            int r8 = setMin
            r8 = r8 | 2374(0x946, float:3.327E-42)
            short r8 = (short) r8
            r11 = 965(0x3c5, float:1.352E-42)
            short r11 = (short) r11
            byte[] r16 = getMax
            byte r4 = r16[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r8, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0320
            r4 = 83
            if (r15 < r4) goto L_0x0320
            r4 = 88
            if (r15 > r4) goto L_0x0322
            goto L_0x026f
        L_0x0320:
            r4 = 88
        L_0x0322:
            int r8 = setMin
            r8 = r8 | 2374(0x946, float:3.327E-42)
            short r8 = (short) r8
            byte[] r16 = getMax
            byte r4 = r16[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r8, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0343
            r4 = 91
            if (r15 < r4) goto L_0x0343
            r4 = 92
            if (r15 > r4) goto L_0x0343
            goto L_0x034f
        L_0x0343:
            r4 = 94
            if (r15 < r4) goto L_0x0358
            r4 = 98
            if (r15 > r4) goto L_0x0358
            r4 = 43
            r13 = 43
        L_0x034f:
            r1.isInside = r0
            r1.getMax(r7)
            r0 = r13
            r5 = 1
            goto L_0x0110
        L_0x0358:
            throw r0
        L_0x0359:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0361
            throw r1
        L_0x0361:
            goto L_0x0363
        L_0x0362:
            throw r0
        L_0x0363:
            goto L_0x0362
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMax(o.syncJsApi, o.setRetryCount, o.getAppPreDownloadCacheManager):void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x0133, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x0151, code lost:
        r1.getMax(88);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void setMin() {
        /*
            r18 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r18
            r1.<init>(r2)
            r0 = 371(0x173, float:5.2E-43)
            short r0 = (short) r0
            r3 = 845(0x34d, float:1.184E-42)
            short r3 = (short) r3
            r4 = r3 & 251(0xfb, float:3.52E-43)
            byte r4 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r4)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r4 = 1003(0x3eb, float:1.406E-42)
            short r4 = (short) r4
            r5 = r4 & 94
            byte r5 = (byte) r5
            java.lang.String r3 = setMin(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0261 }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x0261 }
            r3 = 1994(0x7ca, float:2.794E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x0261 }
            r7 = 988(0x3dc, float:1.384E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0261 }
            byte[] r8 = getMax     // Catch:{ all -> 0x0261 }
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]     // Catch:{ all -> 0x0261 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0261 }
            java.lang.String r8 = setMin(r3, r7, r8)     // Catch:{ all -> 0x0261 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0261 }
            r10 = 1028(0x404, float:1.44E-42)
            short r10 = (short) r10     // Catch:{ all -> 0x0261 }
            r11 = 999(0x3e7, float:1.4E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0261 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0261 }
            r13 = 145(0x91, float:2.03E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0261 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0261 }
            java.lang.String r10 = setMin(r10, r11, r12)     // Catch:{ all -> 0x0261 }
            java.lang.Class[] r11 = new java.lang.Class[r4]     // Catch:{ all -> 0x0261 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0261 }
            byte r12 = r12[r9]     // Catch:{ all -> 0x0261 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0261 }
            java.lang.String r12 = setMin(r3, r7, r12)     // Catch:{ all -> 0x0261 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0261 }
            r11[r6] = r12     // Catch:{ all -> 0x0261 }
            java.lang.reflect.Method r8 = r8.getMethod(r10, r11)     // Catch:{ all -> 0x0261 }
            java.lang.Object r0 = r8.invoke(r0, r5)     // Catch:{ all -> 0x0261 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0261 }
            int r5 = r0.length
            int[] r5 = new int[r5]
            r8 = 0
        L_0x006c:
            int r10 = r0.length
            r11 = 35
            if (r8 >= r10) goto L_0x0103
            r10 = r0[r8]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x00fa }
            r12[r6] = r10     // Catch:{ all -> 0x00fa }
            byte[] r10 = getMax     // Catch:{ all -> 0x00fa }
            byte r10 = r10[r6]     // Catch:{ all -> 0x00fa }
            int r10 = r10 + r4
            short r10 = (short) r10     // Catch:{ all -> 0x00fa }
            r13 = r10 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r10 = setMin(r10, r13, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x00fa }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00fa }
            r14 = 997(0x3e5, float:1.397E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00fa }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fa }
            byte r11 = r15[r11]     // Catch:{ all -> 0x00fa }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00fa }
            java.lang.String r11 = setMin(r13, r14, r11)     // Catch:{ all -> 0x00fa }
            java.lang.Class[] r13 = new java.lang.Class[r4]     // Catch:{ all -> 0x00fa }
            byte[] r14 = getMax     // Catch:{ all -> 0x00fa }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00fa }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00fa }
            java.lang.String r14 = setMin(r3, r7, r14)     // Catch:{ all -> 0x00fa }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x00fa }
            r13[r6] = r14     // Catch:{ all -> 0x00fa }
            java.lang.reflect.Method r10 = r10.getMethod(r11, r13)     // Catch:{ all -> 0x00fa }
            r11 = 0
            java.lang.Object r10 = r10.invoke(r11, r12)     // Catch:{ all -> 0x00fa }
            byte[] r12 = getMax     // Catch:{ all -> 0x00f1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x00f1 }
            int r12 = r12 + r4
            short r12 = (short) r12     // Catch:{ all -> 0x00f1 }
            r13 = r12 | 906(0x38a, float:1.27E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x00f1 }
            byte r14 = r14[r9]     // Catch:{ all -> 0x00f1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x00f1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x00f1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x00f1 }
            r13 = 3283(0xcd3, float:4.6E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x00f1 }
            r14 = 996(0x3e4, float:1.396E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f1 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f1 }
            r16 = 76
            byte r15 = r15[r16]     // Catch:{ all -> 0x00f1 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f1 }
            java.lang.reflect.Method r12 = r12.getMethod(r13, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r10 = r12.invoke(r10, r11)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ all -> 0x00f1 }
            int r10 = r10.intValue()     // Catch:{ all -> 0x00f1 }
            r5[r8] = r10
            int r8 = r8 + 1
            goto L_0x006c
        L_0x00f1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00f9
            throw r1
        L_0x00f9:
            throw r0
        L_0x00fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0102
            throw r1
        L_0x0102:
            throw r0
        L_0x0103:
            r3 = 19
            r7 = 44
        L_0x0107:
            int r8 = r6 + 1
            r10 = 17
            r12 = 8
            r13 = 4
            r0 = r5[r6]     // Catch:{ all -> 0x01cb }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x01cb }
            r6 = 88
            r14 = 2
            r15 = 5
            switch(r0) {
                case -16: goto L_0x01b2;
                case -15: goto L_0x01ae;
                case -14: goto L_0x01aa;
                case -13: goto L_0x01a7;
                case -12: goto L_0x0198;
                case -11: goto L_0x0189;
                case -10: goto L_0x0184;
                case -9: goto L_0x0181;
                case -8: goto L_0x016a;
                case -7: goto L_0x0156;
                case -6: goto L_0x0141;
                case -5: goto L_0x0139;
                case -4: goto L_0x0138;
                case -3: goto L_0x0123;
                case -2: goto L_0x0120;
                case -1: goto L_0x011d;
                default: goto L_0x011b;
            }     // Catch:{ all -> 0x01cb }
        L_0x011b:
            goto L_0x01c8
        L_0x011d:
            r6 = 46
            goto L_0x0107
        L_0x0120:
            r6 = 51
            goto L_0x0107
        L_0x0123:
            r1.length = r4     // Catch:{ all -> 0x01cb }
            r1.getMax(r13)     // Catch:{ all -> 0x01cb }
            r1.getMax(r15)     // Catch:{ all -> 0x01cb }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01cb }
            r1.length = r0     // Catch:{ all -> 0x01cb }
        L_0x0133:
            r1.getMax(r12)     // Catch:{ all -> 0x01cb }
            goto L_0x01c8
        L_0x0138:
            return
        L_0x0139:
            r1.getMax(r14)     // Catch:{ all -> 0x01cb }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01cb }
            throw r0     // Catch:{ all -> 0x01cb }
        L_0x0141:
            r1.length = r4     // Catch:{ all -> 0x01cb }
            r1.getMax(r13)     // Catch:{ all -> 0x01cb }
            r1.getMax(r15)     // Catch:{ all -> 0x01cb }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x01cb }
            o.copyBackForwardList r0 = r0.toFloatRange     // Catch:{ all -> 0x01cb }
            r1.isInside = r0     // Catch:{ all -> 0x01cb }
        L_0x0151:
            r1.getMax(r6)     // Catch:{ all -> 0x01cb }
            goto L_0x01c8
        L_0x0156:
            o.onPageScrollStateChanged$3 r0 = new o.onPageScrollStateChanged$3     // Catch:{ all -> 0x01cb }
            r1.length = r4     // Catch:{ all -> 0x01cb }
            r1.getMax(r13)     // Catch:{ all -> 0x01cb }
            r1.getMax(r15)     // Catch:{ all -> 0x01cb }
            java.lang.Object r14 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            o.onPageScrollStateChanged r14 = (o.onPageScrollStateChanged) r14     // Catch:{ all -> 0x01cb }
            r0.<init>()     // Catch:{ all -> 0x01cb }
            r1.isInside = r0     // Catch:{ all -> 0x01cb }
            goto L_0x0151
        L_0x016a:
            r1.length = r14     // Catch:{ all -> 0x01cb }
            r1.getMax(r13)     // Catch:{ all -> 0x01cb }
            r1.getMax(r15)     // Catch:{ all -> 0x01cb }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x01cb }
            r1.getMax(r15)     // Catch:{ all -> 0x01cb }
            java.lang.Object r6 = r1.IsOverlapping     // Catch:{ all -> 0x01cb }
            o.setGlobalUserData r6 = (o.setGlobalUserData) r6     // Catch:{ all -> 0x01cb }
            r0.execute(r6)     // Catch:{ all -> 0x01cb }
            goto L_0x01c8
        L_0x0181:
            r6 = 19
            goto L_0x0107
        L_0x0184:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x01cb }
            r1.length = r0     // Catch:{ all -> 0x01cb }
            goto L_0x0133
        L_0x0189:
            r1.length = r4     // Catch:{ all -> 0x01cb }
            r1.getMax(r13)     // Catch:{ all -> 0x01cb }
            r0 = 25
            r1.getMax(r0)     // Catch:{ all -> 0x01cb }
            int r0 = r1.setMax     // Catch:{ all -> 0x01cb }
            onNavigationEvent = r0     // Catch:{ all -> 0x01cb }
            goto L_0x01c8
        L_0x0198:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x01cb }
            int r0 = r1.setMax     // Catch:{ all -> 0x01cb }
            if (r0 != 0) goto L_0x01c8
            r0 = 43
            r6 = 43
            goto L_0x0107
        L_0x01a7:
            r6 = 1
            goto L_0x0107
        L_0x01aa:
            r6 = 44
            goto L_0x0107
        L_0x01ae:
            r6 = 11
            goto L_0x0107
        L_0x01b2:
            r1.getMax(r11)     // Catch:{ all -> 0x01cb }
            int r0 = r1.setMax     // Catch:{ all -> 0x01cb }
            r6 = 30
            r8 = 3
            if (r0 == r6) goto L_0x01c5
            r6 = 37
            if (r0 == r6) goto L_0x01c1
            goto L_0x01c5
        L_0x01c1:
            r6 = 17
            goto L_0x0107
        L_0x01c5:
            r6 = 3
            goto L_0x0107
        L_0x01c8:
            r6 = r8
            goto L_0x0107
        L_0x01cb:
            r0 = move-exception
            if (r8 < r13) goto L_0x01d4
            if (r8 > r12) goto L_0x01d4
            r6 = 10
            goto L_0x0256
        L_0x01d4:
            r13 = 5397(0x1515, float:7.563E-42)
            short r13 = (short) r13
            r14 = 973(0x3cd, float:1.363E-42)
            short r14 = (short) r14
            byte[] r15 = getMax
            byte r15 = r15[r9]
            byte r15 = (byte) r15
            java.lang.String r15 = setMin(r13, r14, r15)
            java.lang.Class r15 = java.lang.Class.forName(r15)
            boolean r15 = r15.isInstance(r0)
            if (r15 == 0) goto L_0x01f8
            r15 = 12
            if (r8 < r15) goto L_0x01f8
            r15 = 13
            if (r8 > r15) goto L_0x01f8
        L_0x01f5:
            r6 = 9
            goto L_0x0256
        L_0x01f8:
            r15 = 5427(0x1533, float:7.605E-42)
            short r15 = (short) r15
            r4 = 978(0x3d2, float:1.37E-42)
            short r4 = (short) r4
            byte[] r17 = getMax
            byte r6 = r17[r9]
            byte r6 = (byte) r6
            java.lang.String r4 = setMin(r15, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0218
            r4 = 15
            if (r8 < r4) goto L_0x0218
            if (r8 > r10) goto L_0x0218
            goto L_0x01f5
        L_0x0218:
            byte[] r4 = getMax
            byte r4 = r4[r9]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r13, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0232
            if (r8 < r3) goto L_0x0232
            if (r8 > r7) goto L_0x0232
        L_0x022f:
            r6 = 8
            goto L_0x0256
        L_0x0232:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            r6 = 974(0x3ce, float:1.365E-42)
            short r6 = (short) r6
            byte[] r10 = getMax
            byte r10 = r10[r9]
            byte r10 = (byte) r10
            java.lang.String r4 = setMin(r4, r6, r10)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0260
            r4 = 38
            if (r8 < r4) goto L_0x0260
            r4 = 39
            if (r8 > r4) goto L_0x0260
            goto L_0x022f
        L_0x0256:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r4 = 1
            goto L_0x0107
        L_0x0260:
            throw r0
        L_0x0261:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0269
            throw r1
        L_0x0269:
            goto L_0x026b
        L_0x026a:
            throw r0
        L_0x026b:
            goto L_0x026a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.setMin():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:164:0x03da, code lost:
        r16 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:168:0x03f4, code lost:
        r16 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:239:0x056c, code lost:
        if (r13 <= 240) goto L_0x0424;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:33:0x0140, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x01b7, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Removed duplicated region for block: B:207:0x04bc  */
    /* JADX WARNING: Removed duplicated region for block: B:208:0x04c4  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void toFloatRange() {
        /*
            r21 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r21
            r1.<init>(r2)
            r0 = 3861(0xf15, float:5.41E-42)
            short r0 = (short) r0
            byte[] r3 = getMax
            r4 = 35
            byte r3 = r3[r4]
            short r3 = (short) r3
            r5 = r3 | 73
            byte r5 = (byte) r5
            java.lang.String r0 = setMin(r0, r3, r5)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r5 = 1003(0x3eb, float:1.406E-42)
            short r5 = (short) r5
            r6 = r5 & 94
            byte r6 = (byte) r6
            java.lang.String r5 = setMin(r3, r5, r6)
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ all -> 0x05a1 }
            r8 = 0
            r7[r8] = r5     // Catch:{ all -> 0x05a1 }
            r5 = 1994(0x7ca, float:2.794E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x05a1 }
            r9 = 988(0x3dc, float:1.384E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x05a1 }
            byte[] r10 = getMax     // Catch:{ all -> 0x05a1 }
            r11 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r11]     // Catch:{ all -> 0x05a1 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x05a1 }
            java.lang.String r10 = setMin(r5, r9, r10)     // Catch:{ all -> 0x05a1 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x05a1 }
            r12 = 1028(0x404, float:1.44E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x05a1 }
            r13 = 999(0x3e7, float:1.4E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x05a1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x05a1 }
            r15 = 145(0x91, float:2.03E-43)
            byte r14 = r14[r15]     // Catch:{ all -> 0x05a1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x05a1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x05a1 }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x05a1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x05a1 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x05a1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x05a1 }
            java.lang.String r14 = setMin(r5, r9, r14)     // Catch:{ all -> 0x05a1 }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x05a1 }
            r13[r8] = r14     // Catch:{ all -> 0x05a1 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r13)     // Catch:{ all -> 0x05a1 }
            java.lang.Object r0 = r10.invoke(r0, r7)     // Catch:{ all -> 0x05a1 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x05a1 }
            int r7 = r0.length
            int[] r7 = new int[r7]
            r10 = 0
        L_0x0070:
            int r12 = r0.length
            if (r10 >= r12) goto L_0x010a
            r12 = r0[r10]
            java.lang.Object[] r14 = new java.lang.Object[r6]     // Catch:{ all -> 0x0101 }
            r14[r8] = r12     // Catch:{ all -> 0x0101 }
            byte[] r12 = getMax     // Catch:{ all -> 0x0101 }
            byte r12 = r12[r8]     // Catch:{ all -> 0x0101 }
            int r12 = r12 + r6
            short r12 = (short) r12     // Catch:{ all -> 0x0101 }
            r15 = r12 | 906(0x38a, float:1.27E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0101 }
            byte[] r16 = getMax     // Catch:{ all -> 0x0101 }
            byte r13 = r16[r11]     // Catch:{ all -> 0x0101 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0101 }
            java.lang.String r12 = setMin(r12, r15, r13)     // Catch:{ all -> 0x0101 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0101 }
            r13 = 3277(0xccd, float:4.592E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0101 }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0101 }
            byte[] r16 = getMax     // Catch:{ all -> 0x0101 }
            byte r8 = r16[r4]     // Catch:{ all -> 0x0101 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0101 }
            java.lang.String r8 = setMin(r13, r15, r8)     // Catch:{ all -> 0x0101 }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x0101 }
            byte[] r15 = getMax     // Catch:{ all -> 0x0101 }
            byte r15 = r15[r11]     // Catch:{ all -> 0x0101 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0101 }
            java.lang.String r15 = setMin(r5, r9, r15)     // Catch:{ all -> 0x0101 }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x0101 }
            r16 = 0
            r13[r16] = r15     // Catch:{ all -> 0x0101 }
            java.lang.reflect.Method r8 = r12.getMethod(r8, r13)     // Catch:{ all -> 0x0101 }
            r12 = 0
            java.lang.Object r8 = r8.invoke(r12, r14)     // Catch:{ all -> 0x0101 }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f8 }
            byte r13 = r13[r16]     // Catch:{ all -> 0x00f8 }
            int r13 = r13 + r6
            short r13 = (short) r13     // Catch:{ all -> 0x00f8 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f8 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f8 }
            byte r15 = r15[r11]     // Catch:{ all -> 0x00f8 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f8 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f8 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f8 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f8 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f8 }
            byte[] r18 = getMax     // Catch:{ all -> 0x00f8 }
            r17 = 76
            byte r11 = r18[r17]     // Catch:{ all -> 0x00f8 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x00f8 }
            java.lang.String r11 = setMin(r14, r15, r11)     // Catch:{ all -> 0x00f8 }
            java.lang.reflect.Method r11 = r13.getMethod(r11, r12)     // Catch:{ all -> 0x00f8 }
            java.lang.Object r8 = r11.invoke(r8, r12)     // Catch:{ all -> 0x00f8 }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ all -> 0x00f8 }
            int r8 = r8.intValue()     // Catch:{ all -> 0x00f8 }
            r7[r10] = r8
            int r10 = r10 + 1
            r8 = 0
            r11 = 4873(0x1309, float:6.829E-42)
            goto L_0x0070
        L_0x00f8:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0100
            throw r1
        L_0x0100:
            throw r0
        L_0x0101:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0109
            throw r1
        L_0x0109:
            throw r0
        L_0x010a:
            r16 = 0
            r11 = 25
            r12 = 4
        L_0x010f:
            int r13 = r16 + 1
            r14 = 52
            r0 = r7[r16]     // Catch:{ all -> 0x03f8 }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x03f8 }
            r15 = 88
            r8 = 191(0xbf, float:2.68E-43)
            r9 = 2
            r5 = 34
            r10 = 5
            switch(r0) {
                case -68: goto L_0x03ea;
                case -67: goto L_0x03e0;
                case -66: goto L_0x03cb;
                case -65: goto L_0x03b4;
                case -64: goto L_0x03ac;
                case -63: goto L_0x03a4;
                case -62: goto L_0x0398;
                case -61: goto L_0x0390;
                case -60: goto L_0x0388;
                case -59: goto L_0x037c;
                case -58: goto L_0x0378;
                case -57: goto L_0x0374;
                case -56: goto L_0x0360;
                case -55: goto L_0x0358;
                case -54: goto L_0x0350;
                case -53: goto L_0x0341;
                case -52: goto L_0x0339;
                case -51: goto L_0x0331;
                case -50: goto L_0x0324;
                case -49: goto L_0x031c;
                case -48: goto L_0x0314;
                case -47: goto L_0x0307;
                case -46: goto L_0x02f0;
                case -45: goto L_0x02ea;
                case -44: goto L_0x02e4;
                case -43: goto L_0x02de;
                case -42: goto L_0x02d1;
                case -41: goto L_0x02c3;
                case -40: goto L_0x02bd;
                case -39: goto L_0x02b7;
                case -38: goto L_0x02b3;
                case -37: goto L_0x02a8;
                case -36: goto L_0x02a2;
                case -35: goto L_0x028c;
                case -34: goto L_0x0286;
                case -33: goto L_0x0282;
                case -32: goto L_0x027c;
                case -31: goto L_0x0278;
                case -30: goto L_0x0277;
                case -29: goto L_0x0271;
                case -28: goto L_0x025a;
                case -27: goto L_0x0248;
                case -26: goto L_0x0236;
                case -25: goto L_0x0222;
                case -24: goto L_0x021c;
                case -23: goto L_0x0205;
                case -22: goto L_0x01f4;
                case -21: goto L_0x01f0;
                case -20: goto L_0x01ea;
                case -19: goto L_0x01e4;
                case -18: goto L_0x01cd;
                case -17: goto L_0x01bc;
                case -16: goto L_0x01a7;
                case -15: goto L_0x01a3;
                case -14: goto L_0x019f;
                case -13: goto L_0x0199;
                case -12: goto L_0x018e;
                case -11: goto L_0x017c;
                case -10: goto L_0x0177;
                case -9: goto L_0x0168;
                case -8: goto L_0x0163;
                case -7: goto L_0x015e;
                case -6: goto L_0x0153;
                case -5: goto L_0x0146;
                case -4: goto L_0x013c;
                case -3: goto L_0x0134;
                case -2: goto L_0x012f;
                case -1: goto L_0x012a;
                default: goto L_0x0124;
            }     // Catch:{ all -> 0x03f8 }
        L_0x0124:
            r5 = 73
            r9 = 76
            goto L_0x03f4
        L_0x012a:
            r0 = 234(0xea, float:3.28E-43)
            r16 = 234(0xea, float:3.28E-43)
            goto L_0x010f
        L_0x012f:
            r0 = 110(0x6e, float:1.54E-43)
            r16 = 110(0x6e, float:1.54E-43)
            goto L_0x010f
        L_0x0134:
            r1.getMax(r9)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x03f8 }
            throw r0     // Catch:{ all -> 0x03f8 }
        L_0x013c:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x03f8 }
            r1.length = r0     // Catch:{ all -> 0x03f8 }
        L_0x0140:
            r0 = 8
            r1.getMax(r0)     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x0146:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r11)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x0153:
            r1.getMax(r5)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 != 0) goto L_0x03d9
            r0 = 24
            goto L_0x03da
        L_0x015e:
            r0 = 99
            r16 = 99
            goto L_0x010f
        L_0x0163:
            r0 = 265(0x109, float:3.71E-43)
            r16 = 265(0x109, float:3.71E-43)
            goto L_0x010f
        L_0x0168:
            r1.getMax(r4)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 == 0) goto L_0x0173
            r0 = 30
            goto L_0x03da
        L_0x0173:
            r0 = 233(0xe9, float:3.27E-43)
            goto L_0x03da
        L_0x0177:
            r0 = 233(0xe9, float:3.27E-43)
            r16 = 233(0xe9, float:3.27E-43)
            goto L_0x010f
        L_0x017c:
            r1.getMax(r4)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 == 0) goto L_0x018a
            if (r0 == r6) goto L_0x0186
            goto L_0x018a
        L_0x0186:
            r0 = 52
            goto L_0x03da
        L_0x018a:
            r0 = 275(0x113, float:3.85E-43)
            goto L_0x03da
        L_0x018e:
            r1.getMax(r5)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 != 0) goto L_0x03d9
            r0 = 51
            goto L_0x03da
        L_0x0199:
            r0 = 164(0xa4, float:2.3E-43)
            r16 = 164(0xa4, float:2.3E-43)
            goto L_0x010f
        L_0x019f:
            r16 = 76
            goto L_0x010f
        L_0x01a3:
            r16 = 201(0xc9, float:2.82E-43)
            goto L_0x010f
        L_0x01a7:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            o.FragmentStateAdapter$2<o.GriverRpcExtension> r0 = r0.invokeSuspend     // Catch:{ all -> 0x03f8 }
            r1.isInside = r0     // Catch:{ all -> 0x03f8 }
        L_0x01b7:
            r1.getMax(r15)     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x01bc:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.setGlobalUserData r0 = (o.setGlobalUserData) r0     // Catch:{ all -> 0x03f8 }
            r0.dispose()     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x01cd:
            r1.length = r9     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r5 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.FragmentStateAdapter$2 r5 = (o.FragmentStateAdapter$2) r5     // Catch:{ all -> 0x03f8 }
            r0.invokeSuspend = r5     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x01e4:
            r0 = 94
            r16 = 94
            goto L_0x010f
        L_0x01ea:
            r0 = 75
            r16 = 75
            goto L_0x010f
        L_0x01f0:
            r16 = 25
            goto L_0x010f
        L_0x01f4:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            o.FragmentStateAdapter$2<o.AppPreDownloadManager$3> r0 = r0.valueOf     // Catch:{ all -> 0x03f8 }
            r1.isInside = r0     // Catch:{ all -> 0x03f8 }
            goto L_0x01b7
        L_0x0205:
            r1.length = r9     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r5 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.FragmentStateAdapter$2 r5 = (o.FragmentStateAdapter$2) r5     // Catch:{ all -> 0x03f8 }
            r0.valueOf = r5     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x021c:
            r0 = 206(0xce, float:2.89E-43)
            r16 = 206(0xce, float:2.89E-43)
            goto L_0x010f
        L_0x0222:
            r1.getMax(r4)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 == r14) goto L_0x0232
            r5 = 96
            if (r0 == r5) goto L_0x022e
            goto L_0x0232
        L_0x022e:
            r0 = 280(0x118, float:3.92E-43)
            goto L_0x03da
        L_0x0232:
            r0 = 26
            goto L_0x03da
        L_0x0236:
            r1.getMax(r4)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 == 0) goto L_0x0244
            if (r0 == r6) goto L_0x0240
            goto L_0x0244
        L_0x0240:
            r0 = 167(0xa7, float:2.34E-43)
            goto L_0x03da
        L_0x0244:
            r0 = 66
            goto L_0x03da
        L_0x0248:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            o.GriverAppVirtualHostProxy<java.lang.String> r0 = r0.invoke     // Catch:{ all -> 0x03f8 }
            r1.isInside = r0     // Catch:{ all -> 0x03f8 }
            goto L_0x01b7
        L_0x025a:
            r1.length = r9     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x03f8 }
            r1.getMax(r10)     // Catch:{ all -> 0x03f8 }
            java.lang.Object r5 = r1.IsOverlapping     // Catch:{ all -> 0x03f8 }
            o.GriverAppVirtualHostProxy r5 = (o.GriverAppVirtualHostProxy) r5     // Catch:{ all -> 0x03f8 }
            r0.invoke = r5     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x0271:
            r0 = 139(0x8b, float:1.95E-43)
            r16 = 139(0x8b, float:1.95E-43)
            goto L_0x010f
        L_0x0277:
            return
        L_0x0278:
            r16 = 73
            goto L_0x010f
        L_0x027c:
            r0 = 274(0x112, float:3.84E-43)
            r16 = 274(0x112, float:3.84E-43)
            goto L_0x010f
        L_0x0282:
            r16 = 287(0x11f, float:4.02E-43)
            goto L_0x010f
        L_0x0286:
            r0 = 179(0xb3, float:2.51E-43)
            r16 = 179(0xb3, float:2.51E-43)
            goto L_0x010f
        L_0x028c:
            r1.getMax(r4)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            r5 = 57
            if (r0 == r5) goto L_0x029e
            r5 = 61
            if (r0 == r5) goto L_0x029a
            goto L_0x029e
        L_0x029a:
            r0 = 101(0x65, float:1.42E-43)
            goto L_0x03da
        L_0x029e:
            r0 = 55
            goto L_0x03da
        L_0x02a2:
            r0 = 232(0xe8, float:3.25E-43)
            r16 = 232(0xe8, float:3.25E-43)
            goto L_0x010f
        L_0x02a8:
            r1.getMax(r5)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 != 0) goto L_0x03d9
            r0 = 137(0x89, float:1.92E-43)
            goto L_0x03da
        L_0x02b3:
            r16 = 1
            goto L_0x010f
        L_0x02b7:
            r0 = 174(0xae, float:2.44E-43)
            r16 = 174(0xae, float:2.44E-43)
            goto L_0x010f
        L_0x02bd:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x03f8 }
            r1.length = r0     // Catch:{ all -> 0x03f8 }
            goto L_0x0140
        L_0x02c3:
            r1.length = r6     // Catch:{ all -> 0x03f8 }
            r1.getMax(r12)     // Catch:{ all -> 0x03f8 }
            r1.getMax(r11)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            onNavigationEvent = r0     // Catch:{ all -> 0x03f8 }
            goto L_0x0124
        L_0x02d1:
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x03f8 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03f8 }
            if (r0 != 0) goto L_0x03d9
            r0 = 163(0xa3, float:2.28E-43)
            goto L_0x03da
        L_0x02de:
            r0 = 90
            r16 = 90
            goto L_0x010f
        L_0x02e4:
            r0 = 263(0x107, float:3.69E-43)
            r16 = 263(0x107, float:3.69E-43)
            goto L_0x010f
        L_0x02ea:
            r0 = 29
            r16 = 29
            goto L_0x010f
        L_0x02f0:
            r1.getMax(r4)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMax     // Catch:{ all -> 0x0302 }
            r5 = 7
            r9 = 76
            if (r0 == r5) goto L_0x02fe
            r0 = 85
            goto L_0x03da
        L_0x02fe:
            r0 = 180(0xb4, float:2.52E-43)
            goto L_0x03da
        L_0x0302:
            r0 = move-exception
            r9 = 76
            goto L_0x03c8
        L_0x0307:
            r9 = 76
            r1.getMax(r5)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 != 0) goto L_0x03d9
            r0 = 200(0xc8, float:2.8E-43)
            goto L_0x03da
        L_0x0314:
            r9 = 76
            r0 = 278(0x116, float:3.9E-43)
            r16 = 278(0x116, float:3.9E-43)
            goto L_0x010f
        L_0x031c:
            r9 = 76
            r0 = 62
            r16 = 62
            goto L_0x010f
        L_0x0324:
            r9 = 76
            r1.getMax(r8)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 != 0) goto L_0x03d9
            r0 = 205(0xcd, float:2.87E-43)
            goto L_0x03da
        L_0x0331:
            r9 = 76
            r0 = 64
            r16 = 64
            goto L_0x010f
        L_0x0339:
            r9 = 76
            r0 = 83
            r16 = 83
            goto L_0x010f
        L_0x0341:
            r9 = 76
            r0 = 28
            r1.getMax(r0)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 != 0) goto L_0x03d9
            r0 = 231(0xe7, float:3.24E-43)
            goto L_0x03da
        L_0x0350:
            r9 = 76
            r0 = 165(0xa5, float:2.31E-43)
            r16 = 165(0xa5, float:2.31E-43)
            goto L_0x010f
        L_0x0358:
            r9 = 76
            r0 = 267(0x10b, float:3.74E-43)
            r16 = 267(0x10b, float:3.74E-43)
            goto L_0x010f
        L_0x0360:
            r9 = 76
            r1.getMax(r4)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 == 0) goto L_0x0370
            if (r0 == r6) goto L_0x036c
            goto L_0x0370
        L_0x036c:
            r0 = 182(0xb6, float:2.55E-43)
            goto L_0x03da
        L_0x0370:
            r0 = 201(0xc9, float:2.82E-43)
            goto L_0x03da
        L_0x0374:
            r16 = 4
            goto L_0x010f
        L_0x0378:
            r16 = 239(0xef, float:3.35E-43)
            goto L_0x010f
        L_0x037c:
            r9 = 76
            r1.getMax(r5)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 != 0) goto L_0x03d9
            r0 = 262(0x106, float:3.67E-43)
            goto L_0x03da
        L_0x0388:
            r9 = 76
            r0 = 286(0x11e, float:4.01E-43)
            r16 = 286(0x11e, float:4.01E-43)
            goto L_0x010f
        L_0x0390:
            r9 = 76
            r0 = 269(0x10d, float:3.77E-43)
            r16 = 269(0x10d, float:3.77E-43)
            goto L_0x010f
        L_0x0398:
            r9 = 76
            r1.getMax(r8)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 != 0) goto L_0x03d9
            r0 = 273(0x111, float:3.83E-43)
            goto L_0x03da
        L_0x03a4:
            r9 = 76
            r0 = 92
            r16 = 92
            goto L_0x010f
        L_0x03ac:
            r9 = 76
            r0 = 284(0x11c, float:3.98E-43)
            r16 = 284(0x11c, float:3.98E-43)
            goto L_0x010f
        L_0x03b4:
            r9 = 76
            r1.getMax(r4)     // Catch:{ all -> 0x03c7 }
            int r0 = r1.setMax     // Catch:{ all -> 0x03c7 }
            if (r0 == r5) goto L_0x03c2
            r5 = 73
            r0 = 287(0x11f, float:4.02E-43)
            goto L_0x03da
        L_0x03c2:
            r5 = 73
            r0 = 113(0x71, float:1.58E-43)
            goto L_0x03da
        L_0x03c7:
            r0 = move-exception
        L_0x03c8:
            r5 = 73
            goto L_0x03fd
        L_0x03cb:
            r5 = 73
            r9 = 76
            r1.getMax(r8)     // Catch:{ all -> 0x03de }
            int r0 = r1.setMax     // Catch:{ all -> 0x03de }
            if (r0 != 0) goto L_0x03d9
            r0 = 291(0x123, float:4.08E-43)
            goto L_0x03da
        L_0x03d9:
            r0 = r13
        L_0x03da:
            r16 = r0
            goto L_0x010f
        L_0x03de:
            r0 = move-exception
            goto L_0x03fd
        L_0x03e0:
            r5 = 73
            r9 = 76
            r0 = 177(0xb1, float:2.48E-43)
            r16 = 177(0xb1, float:2.48E-43)
            goto L_0x010f
        L_0x03ea:
            r5 = 73
            r9 = 76
            r0 = 111(0x6f, float:1.56E-43)
            r16 = 111(0x6f, float:1.56E-43)
            goto L_0x010f
        L_0x03f4:
            r16 = r13
            goto L_0x010f
        L_0x03f8:
            r0 = move-exception
            r5 = 73
            r9 = 76
        L_0x03fd:
            byte[] r8 = getMax
            r10 = 5474(0x1562, float:7.671E-42)
            byte r15 = r8[r10]
            short r15 = (short) r15
            r4 = 969(0x3c9, float:1.358E-42)
            short r4 = (short) r4
            r19 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r19]
            byte r8 = (byte) r8
            java.lang.String r8 = setMin(r15, r4, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            r15 = 74
            r5 = 138(0x8a, float:1.93E-43)
            if (r8 == 0) goto L_0x042a
            if (r13 < r12) goto L_0x042a
            if (r13 > r11) goto L_0x042a
        L_0x0422:
            r4 = 239(0xef, float:3.35E-43)
        L_0x0424:
            r5 = 74
        L_0x0426:
            r10 = 4873(0x1309, float:6.829E-42)
            goto L_0x0594
        L_0x042a:
            r8 = 5485(0x156d, float:7.686E-42)
            short r8 = (short) r8
            r6 = 985(0x3d9, float:1.38E-42)
            short r6 = (short) r6
            byte[] r20 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r9 = r20[r19]
            byte r9 = (byte) r9
            java.lang.String r6 = setMin(r8, r6, r9)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0450
            r6 = 19
            if (r13 < r6) goto L_0x0450
            r6 = 20
            if (r13 > r6) goto L_0x0450
        L_0x044d:
            r4 = 239(0xef, float:3.35E-43)
            goto L_0x0426
        L_0x0450:
            r6 = 97
            short r6 = (short) r6
            r8 = 976(0x3d0, float:1.368E-42)
            short r8 = (short) r8
            byte[] r9 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r19]
            byte r9 = (byte) r9
            java.lang.String r9 = setMin(r6, r8, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x0474
            r9 = 77
            if (r13 < r9) goto L_0x0474
            r9 = 78
            if (r13 > r9) goto L_0x0474
            goto L_0x0422
        L_0x0474:
            byte[] r9 = getMax
            r19 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r19]
            byte r9 = (byte) r9
            java.lang.String r6 = setMin(r6, r8, r9)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0492
            r6 = 78
            if (r13 < r6) goto L_0x0492
            r6 = 79
            if (r13 > r6) goto L_0x0492
            goto L_0x044d
        L_0x0492:
            byte[] r6 = getMax
            byte r8 = r6[r10]
            short r8 = (short) r8
            r9 = 4873(0x1309, float:6.829E-42)
            byte r6 = r6[r9]
            byte r6 = (byte) r6
            java.lang.String r4 = setMin(r8, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04b4
            r4 = 81
            if (r13 < r4) goto L_0x04b4
            r4 = 83
            if (r13 > r4) goto L_0x04b4
            goto L_0x0422
        L_0x04b4:
            r4 = 86
            if (r13 < r4) goto L_0x04c4
            r4 = 90
            if (r13 > r4) goto L_0x04c4
            r4 = 176(0xb0, float:2.47E-43)
            r4 = 239(0xef, float:3.35E-43)
            r5 = 176(0xb0, float:2.47E-43)
            goto L_0x0426
        L_0x04c4:
            r4 = 106(0x6a, float:1.49E-43)
            if (r13 < r4) goto L_0x04d2
            r4 = 110(0x6e, float:1.54E-43)
            if (r13 > r4) goto L_0x04d2
            r4 = 3
            r4 = 239(0xef, float:3.35E-43)
            r5 = 3
            goto L_0x0426
        L_0x04d2:
            int r4 = setMin
            r4 = r4 | 7559(0x1d87, float:1.0592E-41)
            short r4 = (short) r4
            r6 = 975(0x3cf, float:1.366E-42)
            short r6 = (short) r6
            byte[] r8 = getMax
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r4, r6, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04f7
            r4 = 113(0x71, float:1.58E-43)
            if (r13 < r4) goto L_0x04f7
            if (r13 > r5) goto L_0x04f7
            goto L_0x044d
        L_0x04f7:
            r4 = 970(0x3ca, float:1.359E-42)
            short r4 = (short) r4
            byte[] r8 = getMax
            r9 = 4873(0x1309, float:6.829E-42)
            byte r8 = r8[r9]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r3, r4, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0517
            r4 = 133(0x85, float:1.86E-43)
            if (r13 < r4) goto L_0x0517
            if (r13 > r5) goto L_0x0517
            goto L_0x044d
        L_0x0517:
            r4 = 172(0xac, float:2.41E-43)
            if (r13 < r4) goto L_0x0527
            r4 = 174(0xae, float:2.44E-43)
            if (r13 > r4) goto L_0x0527
            r4 = 292(0x124, float:4.09E-43)
            r4 = 239(0xef, float:3.35E-43)
            r5 = 292(0x124, float:4.09E-43)
            goto L_0x0426
        L_0x0527:
            r4 = 5397(0x1515, float:7.563E-42)
            short r4 = (short) r4
            r8 = 973(0x3cd, float:1.363E-42)
            short r8 = (short) r8
            byte[] r9 = getMax
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]
            byte r9 = (byte) r9
            java.lang.String r4 = setMin(r4, r8, r9)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x054c
            r4 = 202(0xca, float:2.83E-43)
            if (r13 < r4) goto L_0x054c
            r4 = 206(0xce, float:2.89E-43)
            if (r13 > r4) goto L_0x054c
            goto L_0x044d
        L_0x054c:
            byte[] r4 = getMax
            r9 = 41
            byte r9 = r4[r9]
            short r9 = (short) r9
            r10 = 4873(0x1309, float:6.829E-42)
            byte r4 = r4[r10]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r9, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0570
            r4 = 239(0xef, float:3.35E-43)
            if (r13 < r4) goto L_0x0572
            r8 = 240(0xf0, float:3.36E-43)
            if (r13 > r8) goto L_0x0572
            goto L_0x0424
        L_0x0570:
            r4 = 239(0xef, float:3.35E-43)
        L_0x0572:
            int r8 = setMin
            r8 = r8 | 7559(0x1d87, float:1.0592E-41)
            short r8 = (short) r8
            byte[] r9 = getMax
            r10 = 4873(0x1309, float:6.829E-42)
            byte r9 = r9[r10]
            byte r9 = (byte) r9
            java.lang.String r6 = setMin(r8, r6, r9)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x05a0
            r6 = 270(0x10e, float:3.78E-43)
            if (r13 < r6) goto L_0x05a0
            r6 = 271(0x10f, float:3.8E-43)
            if (r13 > r6) goto L_0x05a0
        L_0x0594:
            r1.isInside = r0
            r1.getMax(r14)
            r16 = r5
            r4 = 35
            r6 = 1
            goto L_0x010f
        L_0x05a0:
            throw r0
        L_0x05a1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x05a9
            throw r1
        L_0x05a9:
            goto L_0x05ab
        L_0x05aa:
            throw r0
        L_0x05ab:
            goto L_0x05aa
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.toFloatRange():void");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:108:0x02b6, code lost:
        if (r9 <= 74) goto L_0x03d4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:122:0x0302, code lost:
        if (r9 <= 75) goto L_0x03d4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x0167, code lost:
        r1.getMax(8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:60:0x01c5, code lost:
        r0 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:0x01c6, code lost:
        r18 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:79:0x021e, code lost:
        r1.getMax(88);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:82:0x023b, code lost:
        r18 = r9;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public final void toIntRange() {
        /*
            r19 = this;
            o.setLayoutDirection r1 = new o.setLayoutDirection
            r2 = r19
            r1.<init>(r2)
            r0 = 2862(0xb2e, float:4.01E-42)
            short r0 = (short) r0
            r3 = 588(0x24c, float:8.24E-43)
            short r3 = (short) r3
            r4 = 73
            byte r5 = (byte) r4
            java.lang.String r0 = setMin(r0, r3, r5)
            r3 = 5452(0x154c, float:7.64E-42)
            short r3 = (short) r3
            r5 = 1003(0x3eb, float:1.406E-42)
            short r5 = (short) r5
            r6 = r5 & 94
            byte r6 = (byte) r6
            java.lang.String r5 = setMin(r3, r5, r6)
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ all -> 0x03e1 }
            r8 = 0
            r7[r8] = r5     // Catch:{ all -> 0x03e1 }
            r5 = 1994(0x7ca, float:2.794E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x03e1 }
            r9 = 988(0x3dc, float:1.384E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x03e1 }
            byte[] r10 = getMax     // Catch:{ all -> 0x03e1 }
            r11 = 4873(0x1309, float:6.829E-42)
            byte r10 = r10[r11]     // Catch:{ all -> 0x03e1 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x03e1 }
            java.lang.String r10 = setMin(r5, r9, r10)     // Catch:{ all -> 0x03e1 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x03e1 }
            r12 = 1028(0x404, float:1.44E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x03e1 }
            r13 = 999(0x3e7, float:1.4E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x03e1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x03e1 }
            r15 = 145(0x91, float:2.03E-43)
            byte r14 = r14[r15]     // Catch:{ all -> 0x03e1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x03e1 }
            java.lang.String r12 = setMin(r12, r13, r14)     // Catch:{ all -> 0x03e1 }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x03e1 }
            byte[] r14 = getMax     // Catch:{ all -> 0x03e1 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x03e1 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x03e1 }
            java.lang.String r14 = setMin(r5, r9, r14)     // Catch:{ all -> 0x03e1 }
            java.lang.Class r14 = java.lang.Class.forName(r14)     // Catch:{ all -> 0x03e1 }
            r13[r8] = r14     // Catch:{ all -> 0x03e1 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r13)     // Catch:{ all -> 0x03e1 }
            java.lang.Object r0 = r10.invoke(r0, r7)     // Catch:{ all -> 0x03e1 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x03e1 }
            int r7 = r0.length
            int[] r7 = new int[r7]
            r10 = 0
        L_0x006c:
            int r12 = r0.length
            r13 = 35
            if (r10 >= r12) goto L_0x0106
            r12 = r0[r10]
            java.lang.Object[] r14 = new java.lang.Object[r6]     // Catch:{ all -> 0x00fd }
            r14[r8] = r12     // Catch:{ all -> 0x00fd }
            byte[] r12 = getMax     // Catch:{ all -> 0x00fd }
            byte r12 = r12[r8]     // Catch:{ all -> 0x00fd }
            int r12 = r12 + r6
            short r12 = (short) r12     // Catch:{ all -> 0x00fd }
            r15 = r12 | 906(0x38a, float:1.27E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fd }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fd }
            byte r4 = r16[r11]     // Catch:{ all -> 0x00fd }
            byte r4 = (byte) r4     // Catch:{ all -> 0x00fd }
            java.lang.String r4 = setMin(r12, r15, r4)     // Catch:{ all -> 0x00fd }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x00fd }
            r12 = 3277(0xccd, float:4.592E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x00fd }
            r15 = 997(0x3e5, float:1.397E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00fd }
            byte[] r16 = getMax     // Catch:{ all -> 0x00fd }
            byte r13 = r16[r13]     // Catch:{ all -> 0x00fd }
            byte r13 = (byte) r13     // Catch:{ all -> 0x00fd }
            java.lang.String r12 = setMin(r12, r15, r13)     // Catch:{ all -> 0x00fd }
            java.lang.Class[] r13 = new java.lang.Class[r6]     // Catch:{ all -> 0x00fd }
            byte[] r15 = getMax     // Catch:{ all -> 0x00fd }
            byte r15 = r15[r11]     // Catch:{ all -> 0x00fd }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00fd }
            java.lang.String r15 = setMin(r5, r9, r15)     // Catch:{ all -> 0x00fd }
            java.lang.Class r15 = java.lang.Class.forName(r15)     // Catch:{ all -> 0x00fd }
            r13[r8] = r15     // Catch:{ all -> 0x00fd }
            java.lang.reflect.Method r4 = r4.getMethod(r12, r13)     // Catch:{ all -> 0x00fd }
            r12 = 0
            java.lang.Object r4 = r4.invoke(r12, r14)     // Catch:{ all -> 0x00fd }
            byte[] r13 = getMax     // Catch:{ all -> 0x00f4 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x00f4 }
            int r13 = r13 + r6
            short r13 = (short) r13     // Catch:{ all -> 0x00f4 }
            r14 = r13 | 906(0x38a, float:1.27E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            byte[] r15 = getMax     // Catch:{ all -> 0x00f4 }
            byte r15 = r15[r11]     // Catch:{ all -> 0x00f4 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x00f4 }
            java.lang.String r13 = setMin(r13, r14, r15)     // Catch:{ all -> 0x00f4 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x00f4 }
            r14 = 3283(0xcd3, float:4.6E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x00f4 }
            r15 = 996(0x3e4, float:1.396E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x00f4 }
            byte[] r16 = getMax     // Catch:{ all -> 0x00f4 }
            r17 = 76
            byte r8 = r16[r17]     // Catch:{ all -> 0x00f4 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x00f4 }
            java.lang.String r8 = setMin(r14, r15, r8)     // Catch:{ all -> 0x00f4 }
            java.lang.reflect.Method r8 = r13.getMethod(r8, r12)     // Catch:{ all -> 0x00f4 }
            java.lang.Object r4 = r8.invoke(r4, r12)     // Catch:{ all -> 0x00f4 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x00f4 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x00f4 }
            r7[r10] = r4
            int r10 = r10 + 1
            r4 = 73
            r8 = 0
            goto L_0x006c
        L_0x00f4:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x00fc
            throw r1
        L_0x00fc:
            throw r0
        L_0x00fd:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0105
            throw r1
        L_0x0105:
            throw r0
        L_0x0106:
            r18 = 0
        L_0x0108:
            int r9 = r18 + 1
            r12 = 9
            r14 = 8
            r0 = r7[r18]     // Catch:{ all -> 0x023f }
            int r0 = r1.getMax(r0)     // Catch:{ all -> 0x023f }
            r15 = 25
            r10 = 2
            r8 = 28
            r4 = 5
            r5 = 4
            switch(r0) {
                case -29: goto L_0x0237;
                case -28: goto L_0x0224;
                case -27: goto L_0x020e;
                case -26: goto L_0x01fe;
                case -25: goto L_0x01f8;
                case -24: goto L_0x01e6;
                case -23: goto L_0x01d6;
                case -22: goto L_0x01d0;
                case -21: goto L_0x01ca;
                case -20: goto L_0x01bb;
                case -19: goto L_0x01b5;
                case -18: goto L_0x01af;
                case -17: goto L_0x01a4;
                case -16: goto L_0x0196;
                case -15: goto L_0x0191;
                case -14: goto L_0x018b;
                case -13: goto L_0x0186;
                case -12: goto L_0x017a;
                case -11: goto L_0x016c;
                case -10: goto L_0x0163;
                case -9: goto L_0x015e;
                case -8: goto L_0x015d;
                case -7: goto L_0x014e;
                case -6: goto L_0x014b;
                case -5: goto L_0x0133;
                case -4: goto L_0x012b;
                case -3: goto L_0x0126;
                case -2: goto L_0x0123;
                case -1: goto L_0x0120;
                default: goto L_0x011e;
            }     // Catch:{ all -> 0x023f }
        L_0x011e:
            goto L_0x023b
        L_0x0120:
            r18 = 1
            goto L_0x0108
        L_0x0123:
            r18 = 49
            goto L_0x0108
        L_0x0126:
            r0 = 11
            r18 = 11
            goto L_0x0108
        L_0x012b:
            r1.getMax(r10)     // Catch:{ all -> 0x023f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x023f }
            throw r0     // Catch:{ all -> 0x023f }
        L_0x0133:
            r1.length = r10     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r4)     // Catch:{ all -> 0x023f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            o.parseFailed r0 = (o.parseFailed) r0     // Catch:{ all -> 0x023f }
            r1.getMax(r4)     // Catch:{ all -> 0x023f }
            java.lang.Object r4 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            o.setGlobalUserData r4 = (o.setGlobalUserData) r4     // Catch:{ all -> 0x023f }
            r0.execute(r4)     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x014b:
            r18 = 74
            goto L_0x0108
        L_0x014e:
            r1.getMax(r13)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            if (r0 == 0) goto L_0x0156
            goto L_0x015a
        L_0x0156:
            r0 = 97
            r12 = 97
        L_0x015a:
            r18 = r12
            goto L_0x0108
        L_0x015d:
            return
        L_0x015e:
            r0 = 103(0x67, float:1.44E-43)
            r18 = 103(0x67, float:1.44E-43)
            goto L_0x0108
        L_0x0163:
            int r0 = onNavigationEvent     // Catch:{ all -> 0x023f }
            r1.length = r0     // Catch:{ all -> 0x023f }
        L_0x0167:
            r1.getMax(r14)     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x016c:
            r1.length = r6     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r15)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            Grayscale$Algorithm = r0     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x017a:
            r0 = 34
            r1.getMax(r0)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            if (r0 != 0) goto L_0x01c5
            r0 = 45
            goto L_0x01c6
        L_0x0186:
            r0 = 6
            r18 = 6
            goto L_0x0108
        L_0x018b:
            r0 = 104(0x68, float:1.46E-43)
            r18 = 104(0x68, float:1.46E-43)
            goto L_0x0108
        L_0x0191:
            int r0 = Grayscale$Algorithm     // Catch:{ all -> 0x023f }
            r1.length = r0     // Catch:{ all -> 0x023f }
            goto L_0x0167
        L_0x0196:
            r1.length = r6     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r15)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            onNavigationEvent = r0     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x01a4:
            r1.getMax(r8)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            if (r0 != 0) goto L_0x023b
            r9 = 73
            goto L_0x023b
        L_0x01af:
            r0 = 14
            r18 = 14
            goto L_0x0108
        L_0x01b5:
            r0 = 46
            r18 = 46
            goto L_0x0108
        L_0x01bb:
            r1.getMax(r8)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            if (r0 != 0) goto L_0x01c5
            r0 = 95
            goto L_0x01c6
        L_0x01c5:
            r0 = r9
        L_0x01c6:
            r18 = r0
            goto L_0x0108
        L_0x01ca:
            r0 = 106(0x6a, float:1.49E-43)
            r18 = 106(0x6a, float:1.49E-43)
            goto L_0x0108
        L_0x01d0:
            r0 = 108(0x6c, float:1.51E-43)
            r18 = 108(0x6c, float:1.51E-43)
            goto L_0x0108
        L_0x01d6:
            r1.getMax(r13)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            if (r0 == 0) goto L_0x01e3
            if (r0 == r6) goto L_0x01e0
            goto L_0x01e3
        L_0x01e0:
            r0 = 12
            goto L_0x01c6
        L_0x01e3:
            r0 = 17
            goto L_0x01c6
        L_0x01e6:
            r1.getMax(r13)     // Catch:{ all -> 0x023f }
            int r0 = r1.setMax     // Catch:{ all -> 0x023f }
            r4 = 110(0x6e, float:1.54E-43)
            if (r0 == 0) goto L_0x01f4
            if (r0 == r6) goto L_0x01f2
            goto L_0x01f4
        L_0x01f2:
            r4 = 120(0x78, float:1.68E-43)
        L_0x01f4:
            r18 = r4
            goto L_0x0108
        L_0x01f8:
            r0 = 102(0x66, float:1.43E-43)
            r18 = 102(0x66, float:1.43E-43)
            goto L_0x0108
        L_0x01fe:
            r1.length = r6     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r4)     // Catch:{ all -> 0x023f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x023f }
            r0.toFloatRange()     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x020e:
            r1.length = r6     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r4)     // Catch:{ all -> 0x023f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x023f }
            o.syncJsApi r0 = r0.equals     // Catch:{ all -> 0x023f }
            r1.isInside = r0     // Catch:{ all -> 0x023f }
        L_0x021e:
            r0 = 88
            r1.getMax(r0)     // Catch:{ all -> 0x023f }
            goto L_0x023b
        L_0x0224:
            r1.length = r6     // Catch:{ all -> 0x023f }
            r1.getMax(r5)     // Catch:{ all -> 0x023f }
            r1.getMax(r4)     // Catch:{ all -> 0x023f }
            java.lang.Object r0 = r1.IsOverlapping     // Catch:{ all -> 0x023f }
            o.onPageScrollStateChanged r0 = (o.onPageScrollStateChanged) r0     // Catch:{ all -> 0x023f }
            o.GriverAppVirtualHostProxy r0 = r0.Grayscale$Algorithm()     // Catch:{ all -> 0x023f }
            r1.isInside = r0     // Catch:{ all -> 0x023f }
            goto L_0x021e
        L_0x0237:
            r18 = 21
            goto L_0x0108
        L_0x023b:
            r18 = r9
            goto L_0x0108
        L_0x023f:
            r0 = move-exception
            int r4 = setMin
            r4 = r4 | 7559(0x1d87, float:1.0592E-41)
            short r4 = (short) r4
            r5 = 975(0x3cf, float:1.366E-42)
            short r5 = (short) r5
            byte[] r8 = getMax
            byte r8 = r8[r11]
            byte r8 = (byte) r8
            java.lang.String r4 = setMin(r4, r5, r8)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r8 = 16
            if (r4 == 0) goto L_0x0264
            if (r9 < r12) goto L_0x0264
            r4 = 10
            if (r9 > r4) goto L_0x0264
            goto L_0x0270
        L_0x0264:
            r4 = 18
            if (r9 < r4) goto L_0x0274
            r4 = 21
            if (r9 > r4) goto L_0x0274
            r4 = 96
            r8 = 96
        L_0x0270:
            r10 = 49
            goto L_0x03d4
        L_0x0274:
            r4 = 5427(0x1533, float:7.605E-42)
            short r4 = (short) r4
            r10 = 978(0x3d2, float:1.37E-42)
            short r10 = (short) r10
            byte[] r12 = getMax
            byte r12 = r12[r11]
            byte r12 = (byte) r12
            java.lang.String r4 = setMin(r4, r10, r12)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0298
            r4 = 21
            if (r9 < r4) goto L_0x029a
            r10 = 22
            if (r9 > r10) goto L_0x029a
            r8 = 8
            goto L_0x0270
        L_0x0298:
            r4 = 21
        L_0x029a:
            r10 = 970(0x3ca, float:1.359E-42)
            short r10 = (short) r10
            byte[] r12 = getMax
            byte r12 = r12[r11]
            byte r12 = (byte) r12
            java.lang.String r10 = setMin(r3, r10, r12)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x02ba
            r10 = 49
            if (r9 < r10) goto L_0x02bc
            r12 = 74
            if (r9 > r12) goto L_0x02bc
            goto L_0x03d4
        L_0x02ba:
            r10 = 49
        L_0x02bc:
            int r12 = setMin
            r12 = r12 | 68
            short r12 = (short) r12
            r15 = 974(0x3ce, float:1.365E-42)
            short r15 = (short) r15
            byte[] r18 = getMax
            byte r4 = r18[r11]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r12, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02e3
            r4 = 69
            if (r9 < r4) goto L_0x02e3
            r4 = 74
            if (r9 > r4) goto L_0x02e3
        L_0x02df:
            r8 = 8
            goto L_0x03d4
        L_0x02e3:
            r4 = 5485(0x156d, float:7.686E-42)
            short r4 = (short) r4
            r12 = 985(0x3d9, float:1.38E-42)
            short r12 = (short) r12
            byte[] r18 = getMax
            byte r6 = r18[r11]
            byte r6 = (byte) r6
            java.lang.String r4 = setMin(r4, r12, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0306
            r4 = 74
            if (r9 < r4) goto L_0x0308
            r6 = 75
            if (r9 > r6) goto L_0x0308
            goto L_0x03d4
        L_0x0306:
            r4 = 74
        L_0x0308:
            r6 = 97
            short r6 = (short) r6
            r12 = 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            byte[] r17 = getMax
            byte r4 = r17[r11]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x032b
            r4 = 90
            if (r9 < r4) goto L_0x032b
            r4 = 91
            if (r9 > r4) goto L_0x032b
            goto L_0x03d4
        L_0x032b:
            r4 = 98
            if (r9 < r4) goto L_0x0339
            r4 = 101(0x65, float:1.42E-43)
            if (r9 > r4) goto L_0x0339
            r4 = 48
            r8 = 48
            goto L_0x03d4
        L_0x0339:
            r4 = 116(0x74, float:1.63E-43)
            if (r9 < r4) goto L_0x0347
            r4 = 120(0x78, float:1.68E-43)
            if (r9 > r4) goto L_0x0347
            r4 = 101(0x65, float:1.42E-43)
            r8 = 101(0x65, float:1.42E-43)
            goto L_0x03d4
        L_0x0347:
            int r4 = setMin
            r4 = r4 | 7559(0x1d87, float:1.0592E-41)
            short r4 = (short) r4
            byte[] r6 = getMax
            byte r6 = r6[r11]
            byte r6 = (byte) r6
            java.lang.String r4 = setMin(r4, r5, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0369
            r4 = 111(0x6f, float:1.56E-43)
            if (r9 < r4) goto L_0x0369
            r4 = 120(0x78, float:1.68E-43)
            if (r9 > r4) goto L_0x0369
            goto L_0x02df
        L_0x0369:
            byte[] r4 = getMax
            r5 = 41
            byte r5 = r4[r5]
            short r5 = (short) r5
            r6 = 973(0x3cd, float:1.363E-42)
            short r6 = (short) r6
            byte r4 = r4[r11]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x038e
            r4 = 113(0x71, float:1.58E-43)
            if (r9 < r4) goto L_0x038e
            r4 = 114(0x72, float:1.6E-43)
            if (r9 > r4) goto L_0x038e
            goto L_0x02df
        L_0x038e:
            int r4 = setMin
            r4 = r4 | 68
            short r4 = (short) r4
            byte[] r5 = getMax
            byte r5 = r5[r11]
            byte r5 = (byte) r5
            java.lang.String r4 = setMin(r4, r15, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03af
            r4 = 121(0x79, float:1.7E-43)
            if (r9 < r4) goto L_0x03af
            r4 = 127(0x7f, float:1.78E-43)
            if (r9 > r4) goto L_0x03af
            goto L_0x03d4
        L_0x03af:
            byte[] r4 = getMax
            r5 = 5474(0x1562, float:7.671E-42)
            byte r5 = r4[r5]
            short r5 = (short) r5
            r6 = 969(0x3c9, float:1.358E-42)
            short r6 = (short) r6
            byte r4 = r4[r11]
            byte r4 = (byte) r4
            java.lang.String r4 = setMin(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e0
            r4 = 123(0x7b, float:1.72E-43)
            if (r9 < r4) goto L_0x03e0
            r4 = 124(0x7c, float:1.74E-43)
            if (r9 > r4) goto L_0x03e0
            goto L_0x02df
        L_0x03d4:
            r1.isInside = r0
            r0 = 52
            r1.getMax(r0)
            r18 = r8
            r6 = 1
            goto L_0x0108
        L_0x03e0:
            throw r0
        L_0x03e1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03e9
            throw r1
        L_0x03e9:
            goto L_0x03eb
        L_0x03ea:
            throw r0
        L_0x03eb:
            goto L_0x03ea
        */
        throw new UnsupportedOperationException("Method not decompiled: o.onPageScrollStateChanged.toIntRange():void");
    }

    @Inject
    public onPageScrollStateChanged(isUserInputEnabled.length length2, NetworkUtils.NetworkDetailCallback networkDetailCallback, getDelay getdelay, appConfigIsEnable appconfigisenable) {
        try {
            try {
                this.Mean$Arithmetic = Boolean.FALSE;
                try {
                    this.IsOverlapping = length2;
                } catch (IndexOutOfBoundsException e) {
                    e = e;
                    throw e;
                }
            } catch (UnsupportedOperationException e2) {
                e = e2;
                throw e;
            }
            try {
                this.setMax = networkDetailCallback;
                try {
                    this.getMin = getdelay;
                    this.length = appconfigisenable;
                    toDoubleRange();
                } catch (NumberFormatException e3) {
                    e = e3;
                    throw e;
                }
            } catch (UnsupportedOperationException e4) {
                e = e4;
                throw e;
            }
        } catch (IndexOutOfBoundsException e5) {
            e = e5;
            throw e;
        }
    }
}
