package o;

import javax.inject.Inject;
import javax.inject.Singleton;
import o.CommonExitPerform;
import o.CreatePromptParam;

@Singleton
public class lock implements setDistanceCalculator {
    public static final int getMax = 91;
    private static int getMin = 0;
    private static int setMax = 1;
    public static final byte[] setMin;
    private final DialogLayout accountEntityDataFactory;
    private final positiveButtonClicked avatarEntityDataFactory;
    private final getPageId deepLinkEntityDataFactory;
    private final waitOnFinalized deepLinkPayloadManager;
    private final getPerformanceTracker deviceInformationProvider;
    private final PackageInstallCallback generalPreferencesDataFactory;
    private final CreatePromptParam.PositiveListener geocodeEntityRepository;
    private final CommonExitPerform.CollectJsApiHandler pushNotificationEntityDataFactory;
    private final getLogType regManager;
    private final setParentId registrationEntityDataFactory;
    private final setStatusCode registrationMapper;
    private final access$2300 securityEntityDataFactory;
    private final BackKeyDownPoint securityGuardFacade;

    static {
        byte[] bArr = new byte[15972];
        System.arraycopy("2à-.\të\u00153Â\u000bó\u00079åÛ\nÿí)Ú\u0001%é$Óú\u0007\nñ.Í\u0015þõü\u000bú\u0001\të\u00153Â\u000bó\u00079åÝ\u0000\u0007þ\u0006õ\u0019ß\u0013í\u000f Í\u0015þõü\u000bú\u0001ü\u0005öþ\fÿû\u0006ÿú\u0007ÿù\bÿø\tÿ÷\nÿö\u000bó\u0002\u000bÿõ\fÿ÷\nÿô\rûú\u0001\nÿô\rÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007öþ\fÿû\u0006úü\u0004\u0006õ\u0006\u0005õ\u0005\u0006õ\u000bÿüý\bÿù\bÿø\tÿüü\tú\u0006ÿüû\nÿ÷\nøÿ\tÿüú\u000búü\u0003\u0007úü\u0002\bõ\u000bÿüù\fÿüø\rúü\u0001\tÿû\u0002\u0004úý\tÿû\u0001\u0005ÿû\u0000\u0006õ\u0004\u0007ûú\u0004\u0007ÿû\u0006ÿûÿ\u0007ÿûþ\bÿûý\tøÿ\tÿûü\nö\u0001\tÿû\u0006ÿûû\u000bÿûú\fÿûù\rÿú\u0003\u0004úü\u0000\nûþ\u0007úüÿ\u000bø\u0004\u0004ûÿ\u0006ûýû\rõ\u0000\u000bõÿ\fø\u0004\u0004ùú\rô\u0001\u000bö\nÿú\u0002\u0005ú\u0001\u0005ÿú\u0001\u0006ÿú\u0000\u0007ÿúÿ\bÿúþ\tó\u0002\u000bÿüú\u000bö\u0001\tÿúý\nÿ÷\nû\u0001÷\rõ\u000bÿúü\u000búüþ\fÿû\u0002\u0004ÿúû\fÿúú\rÿù\u0004\u0004ÿù\u0003\u0005ÿù\u0002\u0006ó\u0002\u000bÿûü\nÿú\u0003\u0004úüý\rõþ\rõ\u000bõ\u0000\u000bù\u0003\u0004ûú\u000bú\u0002\u0004ÿú\u0002\u0005ú\u0001\u0005ÿù\u0001\u0007ÿù\u0000\bÿùÿ\túû\u0007\u0004ÿùþ\nÿùý\u000bÿ÷\nÿùü\f÷\tö\nõ\u000bÿùû\röþ\fûú\u0004\u0007ÿüù\fÿú\u0003\u0004úû\u0006\u0005ú\u0001ø\rÿú\u0002\u0005ú\u0001\u0005ÿø\u0005\u0004ÿø\u0004\u0005ÿùý\u000bÿô\rûú\u0001\nÿô\rÿü\u0001\u0004ÿü\u0000\u0005úû\u0005\u0006õ\u000bÿüÿ\u0006ÿø\u0003\u0006øÿ\tÿõ\fÿø\u0002\u0007úû\u0004\u0007û\u0000ý\bûüÿ\nùú\ró\u0006\u0007ûø\u0000\røÿ\tøþ\nùú\r÷ü\rú\u0001ø\rÿø\u0001\bù\u0001\u0006ö\nÿø\u0000\tÿøÿ\nÿøþ\u000búÿÿ\bÿùþ\nÿø\u0002\u0007úû\u0003\b÷ÿ\núû\u0002\túû\u0001\nö\u0006\u0004ö\u0005\u0005ö\nÿø\u0001\bù\u0001\u0006ö\nÿøý\fÿøü\rÿúþ\tÿú\u0003\u0004ú\u0000ÿ\u0007û\u0000ÿ\u0006ùú\rû\u0000ý\bõ\u000bûúþ\rúû\u0000\u000bõþ\rõ\u000bû\u0001û\tû\u0000þ\u0007õ\u000bûü\túûÿ\fûÿ\u0006ùú\rø\u0004\u0004ûÿ\u0006ó\b\u0005õÿ\fù\u0003\u0004ö\u0005\u0005ö\nÿú\u0002\u0005ù\u0001\u0006ö\nÿ÷\u0006\u0004ÿ÷\u0005\u0005ÿö\u000bö\u0001\tÿô\rÿ÷\u0004\u0006ÿô\röþ\fÿô\rÿ÷\u0003\u0007ÿ÷\u0002\bù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿøü\u0005ûø\u0006\u0007ûø\u0005\bûù\u0003\tûþ\u0003\u0004÷\u0001\bûø\u0004\tÿû\u0006ÿú\u0007ûÿþ\bô\u0000\fûø\u0003\nûú\u0003\bûø\u0002\u000bÿù\bÿø\tûø\u0001\fûý\u0001\u0007ø\u0004\u0004ûü\u0002\u0007õ\u000bó\b\u0005ûø\u0000\r÷\u0005\u0004ú\u0002\u0000\u0004ô\u0001\u000bö\nÿ÷\nú\u0001\u0005ÿö\u000bÿõ\fÿô\rú\u0006ÿü\u0001\u0004ú\u0002ÿ\u0005ÿü\u0000\u0005ú\u0002þ\u0006ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007úý\tûþ\u0003\u0004ÿüý\búý\tûÿÿ\u0007ú\u0002ý\u0007ÿüü\tÿüû\nÿüú\u000bú\u0002ü\bõ\u0006\u0005ûù\u0002\nÿüù\fû\u0001÷\rõ\u000bÿüø\rÿû\u0002\u0004ú\u0002û\tûýü\fûþü\u000búú\fûþ\u0002\u0005ø\u0004\u0004ó\b\u0005ûýû\rõ\u0000\u000b÷\u0005\u0004ú\u0002\u0000\u0004û\u0000ù\fú\u0002\u0004ÿû\u0001\u0005ú\u0001\u0005ÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bÿø\tû\u0000\u0005úû\u000bûþ\u0007ùú\rõþ\rûù\u0004\bõÿ\fõþ\rõ\u000bûÿ\u0006ûý\u0001\u0007ùü\u000bùú\rõþ\rú\u0002ú\nû\u0000ù\fù\u0002\u0005ö\nÿ÷\nú\u0001\u0005ÿûý\tÿûü\nÿüþ\u0007ÿüÿ\u0006ÿüú\u000bÿüù\fÿô\rÿüÿ\të\u00153Â\u000bó\u00079ÛÚ\u0006ÿ\u000fø\të\u00153Â\u000bó\u00079åÛú\u000fþ\u0002ó\të\u00153Â\u000bó\u00079àÙ\t\u0000\u001cá\u0006ûú\u000fó-Í\u0015þõü\u000bú\u0001ü\u0005ÿû\u0006úý\tÿú\u0007ÿù\bÿø\tó\u0001\fú\u0000ù\rÿ÷\n÷\tûû\u0006\u0004ÿö\u000bÿõ\fûø\u0001\fûÿ\u0006ûùÿ\rùü\u000bùú\rùú\rõ\u000bó\b\u0005ûü\u0004\u0005ûþ\u0007ùú\ró\u0006\u0007ú\u0001ù\fûýþ\nûüü\rûü\u0004\u0005÷\u0003\u0006ù\u0002\u0005ö\nÿô\rú\u0001\u0005ÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ú\u0006ÿüý\búý\tÿú\u0007ÿù\bÿø\tÿ÷\nó\u0002\u000bÿüü\tÿû\u0006ÿû\u0006øÿ\tÿüüü\u0005ÿû\u0006ÿû\u0006ÿú\u0007úý\tÿù\bûú\u0006\u0005ÿø\tÿ÷\nûú\u0005\u0006ûú\u0004\u0007ûú\u0003\bûý\u0004\u0004ûú\u0002\t÷\u0001\bö\u0001\tûú\u0001\nöþ\fÿö\u000bÿõ\fÿô\rÿü\u0001\u0004õ\u0007\u0004úû\u000bûü\u0002\u0007õ\u000bó\b\u0005õ\u0000\u000bõÿ\fõþ\rõ\u000bûú\u0000\u000bûúÿ\fõ\u000bûúþ\rùú\rûù\b\u0004ûþ\u0007ùú\rõþ\rõ\u000bûù\u0007\u0005ó\u0004\tù\u0002\u0005ö\nÿü\u0000\u0005ù\u0001\u0006ö\nÿüÿ\u0006ÿüþ\u0007ÿüý\bøÿ\tÿüü\tÿû\u0006ó\u0002\u000bÿüû\nÿüú\u000bÿüù\fÿû\u0006ú\u0006ûþú\rÿüø\rÿû\u0002\u0004ÿû\u0001\u0005úý\töþ\föý\rûþ\u0003\u0004ÿû\u0000\u0006ó\u0002\u000bÿüü\tù\u0001\u0006ù\u0001\u0006ûû\u0006\u0004ÿûÿ\u0007ÿü\u0001\u0004ûù\u0006\u0006ûú\u0000\u000bùú\rùú\rûù\u0005\u0007ô\b\u0004ûþÿ\bûù\u0004\bûÿ\u0006ûýþ\nó\b\u0005õþ\rõ\u000bûÿ\u0006õ\u0000\u000bûü\u0001\bö\nÿü\u0000\u0005ú\u0001\u0005ÿûþ\bÿûý\tÿûü\núý\tÿù\b÷\u0001\bûù\u0003\tÿø\tûýý\u000bõ\u0006\u0005ûù\u0002\nÿ÷\nú\u0006ÿüø\røÿ\tÿüû\nÿûû\u000bû\u0000\u0000\u0005úû\u000bûýü\fùú\rûù\u0005\u0007õ\u000bûÿ\u0006õ\u0000\u000bù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿûú\fú\u0001\u0005ÿûù\rÿú\u0003\u0004ÿú\u0002\u0005ÿûüü\u0005ÿû\u0006ÿú\u0007ûýý\u000bÿù\bÿø\tùú\u0005\bûú\u000bùü\u000bùú\r÷þ\u000bø\u0003þ\u0007ùü\u000bùû\fô\u0002\nô\u0002\nûÿ\u0006ûú\u000b÷ý\fô\u0003\tû\u0001ù\u000bú\u0001ø\rÿ÷\nù\u0001\u0006ö\nÿö\u000bÿõ\fÿô\rú\u0006ÿü\u0001\u0004øÿ\tÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ø\u0003ý\bûýü\fúú\fûúþ\rùú\ró\b\u0005õ\u0000\u000bùýÿ\u000bù\u0001\u0000\u0006ó\u0005\bõþ\rõ\u000búýþ\u000bø\u0003ü\tùü\u0007\u0004õ\u000bõ\u0000\u000bûü\u0001\bö\nÿüý\bù\u0001\u0006ö\nÿüü\tÿüû\nÿüú\u000bÿüù\fÿüù\fÿüø\rÿüþ\u0007ûù\u0000\fûþ\u0007ûý\u0001\u0007ùü\u000bøü\føû\rõþ\rûýÿ\tø\u0003û\núú\fõ\u0000\u000bù\u0003\u0004ö\u0005\u0005ö\nÿüý\bú\u0001\u0005ÿû\u0002\u0004ÿû\u0001\u0005ÿû\u0000\u0006ÿüù\fú\u0000þ\bÿûÿ\u0007úý\tÿûþ\bÿûý\tÿûü\nÿûû\u000bÿûú\fû\u0001÷\rõ\u000bÿûù\rÿú\u0003\u0004ÿú\u0002\u0005ÿüþ\u0007ûþý\nûÿ\u0006øü\fúüÿ\u000bøÿ\tø\u0003ú\u000bõþ\rõ\u000bûþû\fö\u0005\u0005ö\nÿüý\bú\u0001\u0005ÿú\u0001\u0006ÿú\u0000\u0007ÿúÿ\bó\u0002\u000bÿúþ\tó\u0002\u000bÿúý\nöþ\fÿúü\u000búý\tÿûþ\bûú\u0001\nÿúû\fÿúú\rÿù\u0004\u0004÷\u0001\bÿù\u0003\u0005ÿù\u0002\u0006ÿù\u0001\u0007ÿù\u0000\bøÿ\tÿùÿ\töþ\fÿúü\u000búý\tÿûþ\bûú\u0001\nÿúû\fø\u0003ù\fõ\u000bÿúú\rø\u0003ø\rÿù\búý\tÿûþ\b÷\u0001\bÿùþ\nûþú\rÿùý\u000bó\u0002\u000bÿùÿ\tøÿ\tÿúþ\tÿû\u0000\u0006öþ\fÿùü\fÿùû\rÿø\u0005\u0004úý\tÿûþ\bÿø\u0004\u0005ó\rÿûÿ\u0007ÿø\tù\u0002û\nûþ\u0007ûþ\u0007ó\b\u0005÷ý\fô\u0006\u0006ó\b\u0005ú\u0001ü\tùÿ\u0004\u0004ûýÿ\tó\u0005\búû\u000bûüü\rõþ\r÷\u0004\u0005ùú\rô\u0001\u000bö\nÿ÷\nú\u0001\u0005ÿø\u0003\u0006ÿø\u0002\u0007ÿø\u0001\b÷\tö\nõ\u000bÿø\u0000\túý\tÿûþ\bö\u0001\tÿøÿ\nÿøþ\u000b÷\u0001\bÿøý\fú\u0006ó\u0001\fÿøü\rõ\u000bÿü\u0001\u0004úý\tÿûþ\b÷\u0001\bÿùþ\nÿùý\u000bøÿ\tÿúý\nÿüù\fÿüù\fúý\tÿûþ\bÿûý\tÿûü\nÿûû\u000bø\u0002\u0002\u0004ø\u0002\u0001\u0005õ\u000bÿûú\fó\u0002\u000bÿü\u0000\u0005ÿ÷\u0006\u0004ÿ÷\u0005\u0005ÿ÷\u0004\u0006ÿ÷\u0003\u0007ÿ÷\u0002\bÿ÷\u0001\tÿüù\fÿø\tø\u0002\u0000\u0006ùý\u0004\u0006ù\u0001\u0002\u0004÷ý\fø\u0004\u0004õ\u0000\u000búù\u0004\tûþ\u0007ûý\bõ\u000bûÿ\u0006ûü\tó\u0005\bø\u0002ÿ\u0007úýþ\u000bûü\u0004\u0005ûü\tó\u0005\bûü\u0001\bö\nÿ÷\nú\u0001\u0005ÿ÷\u0000\nÿ÷ÿ\u000bÿüø\u0003\u0004\u0003õ\të\u00153Â\u000bó\u00079âÝ\u0001\u0007ü\u0005úý\tÿû\u0006ù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿú\u0007ÿù\bú\u0006ÿø\tÿ÷\nÿö\u000bÿõ\fùý\u0000\nû\u0001û\tùú\ró\b\u0005ú\u0002ø\fùü\u000búû\u0000\u000bùýÿ\u000bûý\bõ\u000búüÿ\u000bøÿ\tùýþ\fø\u0000\bøÿ\tú\u0000ý\tùýý\r÷ü\rö\u0005\u0005ö\nÿô\rù\u0001\u0006ö\nÿü\u0001\u0004ÿü\u0000\u0005ÿö\u000bÿ÷\nÿõ\fúüþ\fó\t\u0004ûÿ\u0006ûý\u0001\u0007÷ý\fô\u0006\u0006û\u0000ý\b÷\u0004\u0005ûýü\fû\u0001ú\nõÿ\fûÿ\u0006ùÿû\rõþ\rõ\u000búþ\u0004\u0004ùý\u0002\bú\u0002\u0004ÿô\rú\u0001\u0005ÿüÿ\u0006ÿüþ\u0007ÿùü\u0005ÿû\u0006ú\u0001ý\bøü\fó\b\u0005øÿ\tó\u0005\bûü\u0001\bö\nÿú\u0007ú\u0001\u0005ÿù\bÿø\tÿ÷\nù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿö\u000bÿû\u0006ù\u0002û\nûú\u000bùü\u000bûýü\fó\b\u0005ú\u0002ø\fûû\u0003\u0007úý\u0005\u0004ûú\u000bûÿ\u0006ùü\u000bùú\rô\u0003\t÷ü\røÿ\t÷ü\røÿ\tûú\u000bû\u0000ú\u000bùú\rô\u0003\t÷ü\rø\u0003\u0005ú\u0002\u0004ÿú\u0007ù\u0001\u0006ö\nÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ú\u0006ÿüý\bú\u0002ü\bÿüü\tÿüþ\u0007úù\u0002\u000bùú\u0007\u0006ÿüû\núù\u0001\fÿüú\u000bÿüù\fúý\t÷\u0002\u0007ûù\u0003\tÿüû\núù\u0001\fÿüú\u000bùú\u0006\u0007ûù\u0002\nÿüù\fÿüþ\u0007ú\u0006ó\u0001\fó\u0000\rõ\u000bÿüý\bÿüþ\u0007ó\u0002\u000bÿüø\røÿ\tÿüø\rûÿü\nÿüüü\u0005øÿ\tÿû\u0006ÿú\u0007õ\u0004\u0007ù\u0002ú\u000bÿù\bÿø\tÿ÷\núý\tÿö\u000bù\u0002ù\fõ\u000bÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ù\u0002ø\rõþ\rõ\u000bûþ\u0007÷ý\fûþü\u000bûü\tó\u0005\bûþ\u0007ûþÿ\bûþ\u0001\u0006ûü\u0005\u0004ûú\u000bù\u0002\u0005ö\nÿüÿ\u0006ú\u0001\u0005ÿüþ\u0007ÿüý\bÿüü\tÿüû\nû\u0001\u0000\u0004ûú\u000bù\u0001\u0002\u0004ûý\u0000\bûüþ\u000bó\b\u0005ù\u0001\u0001\u0005ûþ\u0002\u0005õþ\rõ\u000bûù\u0007\u0005úþ\u0000\bûþ\u0007ù\u0001\u0000\u0006ó\u0005\bûü\u0004\u0005ùú\rô\u0001\u000bö\nÿüú\u000bù\u0001\u0006ö\nÿüù\fÿüø\rÿû\u0002\u0004û\u0001÷\rõ\u000bÿü\u0001\u0004ÿü\u0000\u0005úý\u0002\u0007ó\t\u0004ù\u0001\u0000\u0006ó\u0005\bø\u0004\u0004ûÿ\u0006ùú\r÷ü\rûú\u000bú\u0002\u0004ÿüÿ\u0006ù\u0001\u0006ö\nÿû\u0001\u0005ÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bú\u0006ÿûý\tó\u0002\u000bÿû\u0006úýü\rÿûü\nÿüü\tÿûû\u000böþ\fúý\tÿûú\fÿûù\rÿú\u0003\u0004öþ\fÿú\u0002\u0005ù\u0001ÿ\u0007õ\u0005\u0006õ\u000bÿú\u0001\u0006ÿú\u0000\u0007ÿúÿ\bù\u0001þ\bÿûú\fÿûù\rÿú\u0003\u0004öþ\fÿú\u0002\u0005ÿú\u0001\u0006ÿûû\u000bù\u0001\u0006ú\u0001\u0005õ\u000bÿúþ\tÿûû\u000búü\u0004\u0006ÿûü\nÿûû\u000búý\tÿö\u000bÿúý\nÿô\rÿü\u0001ü\u0005ú\u0006ûù\u0001\u000bûù\u0002\nÿû\u0006ÿú\u0007ÿú\u0007ú\u0006ÿû\u0006ÿù\bûù\u0000\fûÿ\u0006ûùÿ\rûø\t\u0004ô\u0006\u0006ó\b\u0005õþ\rõ\u000bó\t\u0004ùü\u000bûø\b\u0005ûù\u0007\u0005ûþ\u0007ó\b\u0005ô\u0006\u0006ù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿø\tú\u0001\u0005ÿ÷\nÿö\u000bÿõ\føÿ\tÿô\rÿü\u0001\u0004ÿü\u0000\u0005úü\nûþ\u0007ûþ\u0007ùú\ró\u0006\u0007õ\u0000\u000bõÿ\fõþ\rûüÿ\nó\b\u0005ùü\u000bùú\rø\u0004\u0004ûø\u0007\u0006ö\u0005\u0005ö\nÿüÿ\u0006ù\u0001\u0006ö\nÿüþ\u0007ÿüý\bÿüü\túý\tÿüû\nÿüú\u000bÿüù\fÿüø\ró\u0002\u000bÿô\rÿú\u0007ÿüü\tù\u0001\u0006ú\u0001\u0005õ\u000bÿû\u0002ü\u0005ú\u0006û\u0001ø\fõ\u000bÿû\u0006ú\u0006ÿû\u0006û\u0001÷\rõ\u000bÿú\u0007ÿù\bÿø\tøÿ\tÿ÷\nû\u0000\u0001\u0004ÿö\u000bÿõ\fÿô\rû\u0000\u0000\u0005û\u0000ÿ\u0006û\u0000þ\u0007õ\u000bû\u0000ý\bõ\u000bûþ\u0007ùú\rø\u0004\u0004û\u0000ü\tû\u0000û\nû\u0000ú\u000bùú\rô\u0003\tô\u0002\nû\u0000ù\fú\u0002\u0004ÿü\u0001\u0004ú\u0001\u0005ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007û\u0000ø\rÿüý\bø\u0001\u0007ÿüü\tÿô\rûÿ\u0002\u0004ûþ\u0007øü\fû\u0001û\tû\u0000þ\u0007õ\u000bûü\tûÿ\u0001\u0005øÿ\tó\u0005\bø\u0004\u0004ûÿ\u0000\u0006ûú\u000bù\u0002\u0005ö\nÿü\u0001\u0004ù\u0001\u0006ö\nÿüû\nÿüú\u000bÿüù\fó\u0002\u000bÿüø\rÿù\búý\tûÿÿ\u0007ö\u0001\t÷\u0001\bûÿþ\bÿû\u0002\u0004ÿû\u0001\u0005ó\u0002\u000bÿ÷\nÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bÿûý\tøÿ\tÿüø\r÷\u0001\bÿûü\nÿûû\u000bÿûú\fûÿü\nÿüü\tûÿû\u000bÿö\u000bÿûù\rÿú\u0003\u0004ûÿú\fÿüý\bÿù\búý\tÿú\u0002\u0005ÿú\u0001\u0006ûÿù\rÿú\u0000\u0007ÿúÿ\bÿúþ\tÿúý\nûþ\u0003\u0004ÿû\u0000\u0006ÿúü\u000bÿúû\fÿúú\rÿô\rû\u0000\u0005úû\u000bûþ\u0002\u0005õþ\rûþ\u0001\u0006ûþ\u0000\u0007øþ\nó\t\u0004ô\u0007\u0005ûþÿ\bõ\u000bõ\u0000\u000bûþþ\tûú\u000bú\u0002\u0004ÿü\u0001\u0004ú\u0001\u0005ÿù\u0004\u0004ÿù\u0003\u0005ÿù\u0002\u0006ó\u0002\u000bÿù\u0001\u0007ÿù\bÿù\u0000\bûþý\nûÿ\u0006ûþ\u0007ùü\u000bùú\rûþü\u000búú\fûÿ\u0006ûþ\u0002\u0005õþ\rõ\u000bó\b\u0005ûþû\fö\u0005\u0005ö\nÿùÿ\tú\u0001\u0005ÿùþ\nÿùý\u000bÿúý\nÿù\bÿùü\fÿùû\rÿø\u0005\u0004ú\u0006ûþú\rÿû\u0006úý\tÿú\u0000\u0007ÿúÿ\bûý\u0004\u0004ûý\u0003\u0005õ\u0005\u0006õ\u000bÿø\u0004\u0005ÿø\u0003\u0006úý\tÿú\u0000\u0007ÿúÿ\bûý\u0004\u0004ÿø\u0004\u0005ÿù\u0000\bûý\u0002\u0006ûþ\u0007ûý\u0001\u0007ûý\u0000\bõ\u000bøû\rõþ\rûýÿ\tó\u0005\bûÿ\u0006ûýþ\nó\b\u0005õþ\rõ\u000búù\rù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿùÿ\tù\u0001\u0006ö\nÿø\u0002\u0007ÿø\u0001\bÿùü\fÿù\u0000\bûýý\u000búû\u000bûýü\fûþü\u000bû\u0000ý\b÷\u0004\u0005ûþ\u0007ûþÿ\bûþ\u0001\u0006ûýû\røü\fó\b\u0005ûü\u0005\u0004ö\u0005\u0005ö\nÿùÿ\tú\u0001\u0005ÿø\u0000\tÿøÿ\nÿøþ\u000bøÿ\tÿù\u0001\u0007úý\t÷\u0002\u0007ó\u0001\fûÿþ\bÿøý\fÿøü\rÿù\u0000\bû\u0000\u0000\u0005ûÿ\u0006ûþ\u0007ûÿ\u0006ûýü\fû\u0001ú\nûü\u0004\u0005ûþ\u0002\u0005ó\u0006\u0007ûü\u0003\u0006ó\u0006\u0007øÿ\tó\u0005\bù\u0003\u0004ö\u0005\u0005ö\nÿùÿ\tú\u0001\u0005ÿ÷\u0006\u0004ÿ÷\u0005\u0005ÿ÷\u0004\u0006÷\tö\nõ\u000bÿ÷\u0003\u0007ú\u0006ÿû\u0006ÿù\u0000\bû\u0000\u0000\u0005úû\u000bûýü\fûþü\u000bó\b\u0005õþ\r÷\u0004\u0005ûü\u0002\u0007ûþ\u0001\u0006õ\u0000\u000bûü\u0001\bö\nÿùÿ\tù\u0001\u0006ö\nÿ÷\u0002\bÿ÷\u0001\tÿûù\rÿüþ\u0007ÿøþ\të\u00153Â\u000bó\u00079ëÛ\u0007ï\u001fîôü\u0010÷\u000bþü\u0005ÿû\u0006úý\u0002\u0007ûÿ\u0006ûú\u000bû\u0000ú\u000bùú\rô\u0003\tûþ\u0007úý\u0001\bõ\u000búý\u0000\tøÿ\tû\u0000ù\fù\u0002\u0005ö\nÿú\u0007ù\u0001\u0006ö\nÿù\bÿø\tÿ÷\nÿû\u0006úýÿ\núû\u000bõ\u0000\u000bøÿ\tó\u0005\bø\u0004\u0004úýþ\u000bûþ\u0007ûý\bõ\u000bûÿ\u0006ó\b\u0005ûü\u0005\u0004ûú\u000bú\u0002\u0004ÿú\u0007ù\u0001\u0006ö\nÿö\u000bÿõ\fÿô\rúý\tÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ù\u0001\u0006úýý\fÿüý\bú\u0006ÿüü\tÿüû\nÿô\rÿ÷\nÿüûü\u0005ÿû\u0006ú\u0006ó\u0001\fÿú\u0007õ\u000bÿù\bÿø\tùû\u0005\u0007ú\u0002\u0004ÿ÷\nú\u0001\u0005ÿö\u000bÿõ\fÿô\rÿü\u0001\u0004ÿø\túÿÿ\bó\t\u0004ùû\u0004\b÷ý\fô\u0006\u0006ó\b\u0005õþ\rõ\u000búüÿ\u000bøÿ\tó\u0005\bûÿ\u0006ûþ\u0007ûý\búÿ\u0002\u0005øÿ\tùý\u0002\bù\u0002\u0005ö\nÿ÷\nú\u0001\u0005ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ûú\u0007\u0004ÿüý\bùþ\u0002\u0007ÿüü\túý\tÿüû\núù\u0002\u000bÿüú\u000bÿüù\fÿüø\rÿû\u0002\u0004ÿû\u0001\u0005ûù\u0003\tÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bûú\u0001\nùû\u0003\túù\u0001\fúý\tÿûý\tÿûü\nÿø\tú\u0000ÿ\u0007ûÿ\u0006ûýþ\nûýü\fó\b\u0005õþ\rõ\u000bûúþ\rùú\ró\b\u0005õ\u0000\u000bø\u0004\u0004ûÿ\u0006ûýü\fûþü\u000bó\b\u0005øÿ\tó\u0005\bûý\u0001\u0007ô\u0006\u0006ù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿ÷\nù\u0001\u0006ö\nÿûû\u000bÿûú\fÿûù\rÿû\u0002\u0004ÿû\u0002\u0004ÿû\u0002\u0004ÿú\u0003\u0004ó\u0001\fÿú\u0007õ\u000bÿú\u0002\u0005ùû\u0002\nÿú\u0001\u0006ÿûù\rùû\u0001\u000bÿüý\bÿú\u0000\u0007ÿúÿ\bùû\u0000\fùü\u000bùú\rùú\rûù\u0005\u0007ùûÿ\rûþ\u0007ûÿ\u0006û\u0000ý\bùý\u0006\u0004ù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿúþ\tú\u0001\u0005ÿúý\nÿúü\u000bÿúû\fú\u0006ÿù\bù\u0002ý\bÿüü\tÿû\u0002\u0004ÿú\u0003\u0004ÿú\u0002\u0005ù\u0001\u0006úýý\fÿúú\rÿù\u0004\u0004ùú\t\u0004ÿú\u0001\u0006úý\tÿüû\núù\u0002\u000bÿüú\u000bÿüù\fùú\b\u0005õ\u0006\u0005õ\u0005\u0006õ\u000bÿüø\rÿø\tùý\u0005\u0005ûþ\u0007ûýü\fû\u0001ú\nõþ\rõ\u000bûþ\u0007ùú\rø\u0004\u0004ûù\b\u0004ø\u0000\bøÿ\tó\u0005\bõþ\r÷\u0004\u0005ûÿ\u0000\u0006ûú\u000bú\u0002\u0004ÿ÷\nú\u0001\u0005ÿù\u0003\u0005ÿù\u0002\u0006ÿú\u0000\u0002ý\u0010ü\u0005ù\u0002ý\bÿû\u0006ú\u0006ÿú\u0007úý\tÿù\bÿø\tÿ÷\nÿö\u000bù\u0002ü\tø\u0004\u0004ûþ\u0007÷ý\fûþü\u000bûù\u0007\u0005ô\u0004\b÷þ\u000bõ\u000b÷ü\rö\u0006\u0004ûú\u000bú\u0002\u0004ÿõ\fú\u0001\u0005ÿô\rÿü\u0001\u0004ÿü\u0000\u0005ù\u0002û\nÿû\u0006ÿüÿ\u0006ÿüÿ\u0006úý\tÿù\bÿø\tó\u0001\fó\u0000\rõ\u000bÿ÷\nÿüþ\u0007ÿüÿ\u0006÷\tö\nõ\u000bÿüýô\u0001\u000b\u0002íü\u0005ÿû\u0006ÿú\u0007ó\rÿù\bú\u0000ú\fÿù\búý\tÿø\tÿ÷\nÿö\u000bÿõ\fÿô\rÿü\u0001\u0004ú\u0006ú\u0000ÿ\u0007ø\bÿü\u0000\u0005ÿü\u0001\u0004öþ\fÿüÿ\u0006ÿüþ\u0007ÿüý\bÿüü\tÿüû\nùþÿ\nûþ\u0007ûþÿ\bûþ\u0001\u0006ûþ\u0000\u0007ó\u0005\bõþ\rõ\u000bùú\rû\u0000ù\fú\u0002\u0004ÿüú\u000bù\u0001\u0006ö\nÿüù\fÿüø\rÿû\u0006ú\u0006ÿü\u0000\u0005ÿû\u0002\u0004û\u0001\u0000\u0004úù\u0005\bùü\u000bûúÿ\fõ\u000bù\u0001û\u000bó\b\u0005ùþþ\u000bô\b\u0004ó\b\u0005õþ\rõ\u000bõ\u0000\u000bù\u0003\u0004øÿ\tûÿ\u0006ùþý\føÿ\tó\u0005\bûûý\r÷ü\rûú\u000bù\u0002\u0005ö\nÿû\u0001\u0005ù\u0001\u0006ö\nÿû\u0000\u0006ÿûÿ\u0007ÿûþ\búû\u0007\u0004ÿûý\tÿüþ\u0007ÿûü\nÿü\u0001\u0004ÿü\u0001\u0004ÿûû\u000bÿüû\nùþü\rúý\u0001\bùý\u0006\u0004ù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿüú\u000bú\u0001\u0005ÿûú\fÿûù\rÿú\u0007øÿ\tÿú\u0003\u0004ÿüû\nùý\u0005\u0005û\u0000ÿ\u0006ùú\rûþü\u000bó\b\u0005ú\u0001ü\tøü\fûù\b\u0004ùý\u0004\u0006ùü\u000bùú\rô\u0003\tû\u0001ù\u000bûú\u000bù\u0002\u0005ö\nÿüú\u000bù\u0001\u0006ö\nÿú\u0002\u0005ÿú\u0001\u0006ÿú\u0000\u0007ú\u0006ûþú\rÿü\u0000\u0005ÿúÿ\bú\u0006ÿü\u0000\u0005ÿû\u0002\u0004ùý\u0003\u0007ûÿ\u0006ùú\rõþ\rõ\u000búþ\u0004\u0004ùý\u0002\bù\u0002\u0005ö\nÿû\u0001\u0005ú\u0001\u0005ÿúþ\tÿúý\nÿüü\töþ\fÿúü\u000bÿúû\fÿúú\rÿù\u0004\u0004úý\tÿø\tùý\u0001\tÿö\u000bÿõ\föþ\fÿù\u0003\u0005ÿù\u0002\u0006ù\u0000\u0000\u0007ÿûý\tù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿù\u0001\u0007ÿù\u0000\bó\u0002\u000bÿú\u0003\të\u00153Â\u000bó\u00079éÍ\u0015þõü\u000bú\u0001\të\u00153¹\u0001\u000bý>ßíø\u0005\u0002ï\u0001ü\u0005ÿû\u0006ÿú\u0007ÿù\búÿ\u0001\u0006ûÿ\u0006ûú\u000bû\u0000ú\u000bûþ\u0007ùü\u000bûúÿ\fõ\u000bûúþ\rú\u0002÷\rõ\u0000\u000b÷þ\u000bô\b\u0004ùú\ró\u0006\u0007õÿ\fúþ\u0000\b÷ü\rûú\u000bù\u0002\u0005ö\nÿø\tù\u0001\u0006ö\nÿ÷\nÿö\u000bÿõ\fÿú\u0007ú\u0006ÿô\rÿù\búþÿ\tùú\ró\u0006\u0007ûþ\u0000\u0007ó\u0005\bûûý\r÷ü\rú\u0001ø\rÿø\tú\u0001\u0005ÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ú\u0006ÿô\rÿüþ\u0007öþ\fúþþ\nÿüý\bÿüü\tÿüû\nú\u0006ó\u0001\fÿüú\u000bõ\u000bÿô\rÿüù\fúþý\u000búþü\fûþ\u0007÷ý\fû\u0000ý\búþû\rú\u0002÷\rúý\u0005\u0004ûÿ\u0006ô\u0004\bû\u0001þ\u0006øÿ\tô\u0002\nûú\u000bûÿ\u0006ùü\u000bùû\fû\u0001ù\u000bûú\u000bú\u0002\u0004ÿüø\rù\u0001\u0006ö\nÿû\u0002\u0004ÿû\u0001\u0005ÿû\u0006ÿû\u0000\u0006úý\u0004\u0005ÿûÿ\u0007û\u0001÷\rõ\u000bÿûþ\böþ\fÿûý\tÿûü\nÿûû\u000bÿûú\fÿú\u0007öþ\fÿûù\rÿú\u0003\u0004úý\tÿú\u0002\u0005ÿú\u0001\u0006úý\töþ\fúý\u0003\u0006ûú\u0004\u0007ö\u0001\tûú\u0001\nÿú\u0000\u0007ÿúÿ\bô\fÿûÿ\u0007ÿõü\u0005ÿû\u0006ÿú\u0007ÿù\bù\u0001\u0006ú\u0001\u0005õ\u000bÿø\tõ\u000böþ\fÿ÷\nÿö\u000bÿõ\fÿõ\fúþ\u0002\u0006ÿô\røÿ\tÿü\u0001\u0004ó\u0002\u000bÿü\u0001\u0004ÿü\u0000\u0005úú\u0005\u0007ûþ\u0007û\u0001û\tùú\rû\u0000ý\bú\u0000ü\nùü\u000búû\u0000\u000bø\u0004\u0004ûþ\u0007ùü\u000bû\u0000þ\u0007ûþ\u0001\u0006øÿ\tó\u0005\búþü\fùú\rû\u0001þ\u0006øÿ\tû\u0000ù\fú\u0002\u0004ÿüÿ\u0006ù\u0001\u0006ö\nÿüþ\u0007ÿüý\bÿüü\tÿõ\fûú\u0001\nÿüû\nÿüú\u000bÿüù\fÿüø\rÿû\u0002\u0004úú\u0004\bûÿ\u0006úú\fûÿ\u0006ú\u0001û\nú\u0002\u0004ÿû\u0001\u0005ù\u0001\u0006ö\nÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bÿûý\tÿõ\fÿõ\fúú\u0003\túú\u0002\nûù\u0002\nÿø\tøÿ\tÿûü\nó\u0002\u000bÿûü\nó\u0002\u000bÿûû\u000bú\u0006ÿûú\fÿû\u0002\u0004õ\u0002\tó\t\u0004ûÿ\u0006ûþ\u0007÷ý\fû\u0001ú\nõþ\rô\b\u0004ùú\ró\u0006\u0007ûþû\fú\u0001ø\rÿû\u0001\u0005ù\u0001\u0006ö\nÿûù\rÿú\u0003\u0004ÿú\u0002\u0005ÿüü\tøÿ\tÿûû\u000bù\u0001\u0006ù\u0001\u0006ûû\u0006\u0004ÿú\u0001\u0006ÿü\u0000\u0005õ\u0002\túû\u000bûþ\u0007ùü\u000bùú\rû\u0000ý\bõ\u000b÷þ\u000b÷ý\fó\b\u0005ûû\u0002\bõ\u000búþ\u0004\u0004ó\u0005\bûþ\u0007ûþÿ\bûýÿ\tó\u0005\bûü\u0001\bö\nÿüÿ\u0006ù\u0001\u0006ö\nÿú\u0000\u0007ÿúÿ\bÿúþ\tó\u0002\u000bÿúý\nÿúü\u000bøÿ\tÿúý\núú\u0001\u000bÿ÷\nú\u0001þ\u0007õ\u000bÿö\u000bûú\u0001\nÿüû\nûþú\rÿúû\fÿúú\rÿù\u0004\u0004ÿù\u0003\u0005ÿù\u0002\u0006õ\u000bÿù\u0001\u0007úú\u0000\fÿô\rÿù\u0003\u0005ÿù\u0002\u0006õ\u000bûþú\rÿù\u0001\u0007ó\u0002\u000bÿù\u0000\bÿùÿ\túý\tÿùþ\nöþ\fÿùý\u000bÿùü\fÿùû\røÿ\tÿù\u0000\bÿû\u0002\u0004û\u0000\u0005úúÿ\rûý\u0000\bõ\u000bõ\u0000\u000bû\u0000ý\bûû\u0001\tùú\rû\u0001ú\nøÿ\tó\u0005\bûÿ\u0006ûþ\u0007ûÿ\u0006ûüü\rø\u0004\u0004ûÿ\u0006ûÿ\u0000\u0006ú\u0001ø\rÿû\u0001\u0005ù\u0001\u0006ö\nÿø\u0005\u0004ÿø\u0004\u0005ÿø\u0003ü\u0005ú\u0006ÿû\u0006øÿ\tÿú\u0007úý\tÿù\bÿø\tû\u0001÷\rõ\u000bÿ÷\nó\u0002\u000bÿú\u0007ÿö\u000bõ\u0001\núù\u0005\bó\b\u0005ùü\u000bùú\rô\u0006\u0006úù\u0004\tø\u0000\bøÿ\tó\u0005\bûü\u0004\u0005ûÿ\u0000\u0006øÿ\t÷ü\rö\u0005\u0005ö\nÿõ\fù\u0001\u0006ö\nÿô\rÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüÿ\u0006ÿüÿ\u0006úý\tÿù\bó\u0001\fÿüþ\u0007õ\u000bÿø\tÿüýü\u0005úý\tÿû\u0006ÿú\u0007øÿ\tÿù\búú\u0007\u0005ÿø\tÿ÷\nùþ\u0005\u0004ûþ\u0007÷ý\fó\b\u0005ú\u0002ø\fùü\u000bú\u0002÷\rõ\u0000\u000bõþ\rûüÿ\nùÿ\u0004\u0004ûýÿ\tûû\nûú\u000bù\u0002\u0005ö\nÿö\u000bú\u0001\u0005ÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿüÿ\u0006ÿüþ\u0007ÿ÷\nùþ\u0004\u0005ûýü\fùú\rõ\u000bû\u0000ý\bõ\u000bûü\u0002\u0007ûþ\u0001\u0006ùþ\u0003\u0006ùü\u000bùú\r÷þ\u000bõ\u000b÷ü\rö\u0006\u0004ûú\u000bú\u0002\u0004ÿö\u000bú\u0001\u0005ÿüý\bÿüü\tÿüû\núý\tú\u0001þ\u0007õ\u000bÿû\u0006ú\u0006ÿüú\u000bÿüþ\u0007ó\u0002\u000bÿù\bÿüþ\u0007ùþ\u0002\u0007ÿø\tú\u0006ó\u0001\fÿüù\fõ\u000bÿüú\u000bÿüþü\u0005úý\tÿû\u0006ÿú\u0007ÿù\bûþú\rÿø\túý\tÿû\u0006ÿú\u0007ÿù\bÿø\tÿ÷\nÿ÷\nÿö\u000bÿõ\fûü\u0000\tùú\rõþ\rûþ\u0001\u0006õ\u0000\u000b÷\u0005\u0004ûüÿ\nô\u0007\u0005ùú\rõþ\rûüþ\u000bûüý\fûüü\rûü\u0004\u0005ùú\rû\u0000ù\fù\u0002\u0005ö\nÿô\rú\u0001\u0005ÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ó\u0002\u000bÿüþ\u0007÷\tö\nõ\u000bÿüý\bÿ÷\nú\u0006ÿüü\tøÿ\tÿüþü\u0005ÿû\u0006úÿ\u0001\u0006ûÿ\u0006ûýþ\nûü\u0002\u0007õ\u000bû\u0000ü\t÷\u0005\u0004ô\b\u0004ô\u0007\u0005ûþÿ\bõ\u000bõ\u0000\u000bó\b\u0005ó\t\u0004ó\b\u0005ø\u0004\u0004ûþû\fûú\u000bú\u0002\u0004ÿú\u0007ù\u0001\u0006ö\nÿù\bÿø\tÿ÷\nÿö\u000bú\u0000ÿ\u0007ÿõ\föþ\fÿô\rÿü\u0001\u0004úÿ\u0000\u0007ÿü\u0000\u0005ú\u0006ÿüÿ\u0006ÿüþ\u0007úÿÿ\bûÿ\u0006ûùÿ\rùü\u000bûø\b\u0005û\u0000ý\bô\b\u0004ûþÿ\bûù\u0004\bó\t\u0004ûÿ\u0006øü\fûÿ\u0006ó\b\u0005ûü\u0005\u0004ö\u0005\u0005ö\nÿüý\bú\u0001\u0005ÿüü\tÿüû\nÿüú\u000bÿüù\fú\u0006ÿüÿ\u0006öþ\fÿüø\rú\u0002ý\u0007ûþ\u0003\u0004ÿû\u0002\u0004öþ\fÿû\u0001\u0005ÿû\u0000\u0006ÿûÿ\u0007ÿüþ\u0007úÿþ\tûÿ\u0006ûþ\u0007ùü\u000bùú\rû\u0001ú\nõþ\rõ\u000búÿý\nó\b\u0005ô\u0006\u0006ù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿüý\bù\u0001\u0006ö\nÿûþ\bÿûý\tÿûü\nÿ÷\nû\u0001÷\rõ\u000bÿûû\u000böþ\fÿûú\fó\u0001\fÿûù\rõ\u000bÿú\u0003\u0004ÿú\u0002\u0005ÿú\u0001\u0006ÿú\u0000\u0007ÿö\u000búÿü\u000bÿúÿ\bú\u0006ó\u0001\fÿûù\rõ\u000bÿüÿ\u0006ÿû\u0006úÿû\fûþ\u0000\u0007øþ\núÿú\røü\fúþ\u0004\u0004ûû\nú\u0001ø\rÿú\u0007ù\u0001\u0006ö\nÿúþ\tÿúý\nÿúü\u000búý\tÿúû\fúþ\u0003\u0005ÿúú\rÿù\u0004\u0004öþ\fÿù\u0003\u0005ÿù\u0002\u0006øÿ\tÿù\u0001\u0007úþ\u0002\u0006ÿü\u0000\u0005ÿù\u0000\bûÿú\fÿúÿ\bÿö\u000bó\u0002\u000bÿù\u0001\u0007ÿúü\u000böþ\fÿûú\fÿùÿ\tÿùþ\nÿùý\u000búþ\u0001\u0007ÿõ\fÿùü\fÿùû\rÿöü\u0005ÿû\u0006ÿû\u0006ÿú\u0007õ\u0001\nûÿ\u0006ûþ\u0007ûÿ\u0006õ\u0000\u000bõÿ\fõþ\rô\b\u0004ô\u0007\u0005ùú\rô\u0006\u0006ô\u0005\u0007ô\u0004\bô\u0003\tô\u0002\nô\u0001\u000bö\nÿù\bù\u0001\u0006ö\nÿø\tÿ÷\nÿö\u000búý\tô\u0000\föþ\fÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ôÿ\ró\t\u0004÷ý\fùú\rõ\u000bó\b\u0005ø\u0004\u0004ó\u0007\u0006ó\u0006\u0007õ\u0000\u000bûþ\u0007ùú\rø\u0004\u0004ûü\tó\u0005\bó\u0004\tù\u0002\u0005ö\nÿüÿ\u0006ù\u0001\u0006ö\nÿüþ\u0007ÿüý\bÿüü\tÿüû\nó\u0003\nÿüú\u000bÿüù\fú\u0006ÿüø\rÿû\u0006ó\u0002\u000bÿû\u0002\u0004ÿû\u0001\u0005ó\u0001\fó\u0000\rõ\u000bÿû\u0000\u0006øÿ\tÿûÿ\u0007úý\tÿûþ\bõ\u0004\u0007ÿûý\tõ\u000bø\u0002\u0006ÿûü\nÿûû\u000bÿûú\fÿûù\rÿú\u0007û\u0001\u0000\u0004ûÿ\u0006ûú\u000bû\u0001ÿ\u0005û\u0001þ\u0006øÿ\tô\u0001\u000bö\nÿù\bú\u0001\u0005ÿú\u0003\u0004ÿú\u0002\u0005ÿú\u0001\u0006ú\u0006ó\u0001\fÿú\u0000\u0007õ\u000bÿüø\rÿû\u0006û\u0001ý\u0007ÿüú\u000bó\u0002\u000bÿûÿ\u0007úý\tÿúÿ\búý\tÿúþ\tÿúý\nöþ\fÿúü\u000bù\u0001\u0006ú\u0001\u0005õ\u000bÿúû\fÿú\u0007û\u0001ü\bû\u0001û\tùú\rû\u0001ú\nø\u0004\u0004ûþ\u0007ùú\ró\u0006\u0007õ\u0000\u000bûú\u000bùü\u000bùú\r÷þ\u000bõ\u000bû\u0001ù\u000bö\u0005\u0005ö\nÿù\bú\u0001\u0005ÿúú\rÿù\u0004\u0004ÿüû\nøÿ\tÿû\u0002\u0004ÿû\u0006ÿû\u0001\u0005ÿû\u0000\u0006ÿù\u0003\u0005ÿù\u0003\u0005ÿù\u0002\u0006ÿù\u0001\u0007ó\u0001\fó\u0000\rõ\u000bÿù\u0000\bÿù\u0003\u0005ÿù\u0003\u0005ÿù\u0002\u0006ÿù\u0001\u0007ÿù\u0000ü\u0005ÿû\u0006ÿú\u0007ù\u0007ÿù\bÿø\tÿ÷\nù\u0001ý\tùü\u000bú\u0002÷\rø\u0004\u0004ûúþ\rùú\rû\u0000ü\tø\u0004\u0004ûþ\u0007÷ý\fùú\rõ\u000bó\b\u0005úú\b\u0004÷ÿ\nùû\fô\u0002\n÷ü\rö\u0005\u0005ö\nÿö\u000bù\u0001\u0006ö\nÿõ\fÿô\rÿü\u0001\u0004ûû\u0005\u0005ÿù\bú\u0006ÿü\u0000\u0005öþ\fÿüÿ\u0006ÿüþ\u0007ÿüý\bÿüü\tó\u0002\u000bÿüû\nÿø\túú\u0002\nù\u0001\u0006ù\u0001ü\nÿüú\u000bÿ÷\nù\u0007ûÿ\u0006ûþ\u0007ûÿ\u0006ûþ\u0007ùü\u000bùú\ró\b\u0005õþ\rõ\u000bù\u0001û\u000bû\u0000ü\tø\u0004\u0004ûÿ\u0006ûýü\fùú\rûýÿ\tó\u0005\bù\u0003\u0004ûú\u000bú\u0002\u0004ÿö\u000bú\u0001\u0005ÿüù\fÿüø\rÿû\u0002\u0004ú\u0006ó\u0001\fó\u0000\rõ\u000bÿü\u0000\u0005ó\u0002\u000bÿû\u0001\u0005ÿû\u0000\u0006ÿø\töþ\fÿüÿ\u0006ó\u0001\fÿûÿ\u0007õ\u000bÿûþ\bÿûý\tÿûü\nøÿ\tÿûû\u000búý\tÿûú\fÿûù\rÿú\u0003\u0004øÿ\tÿû\u0001\u0005÷\tö\nõ\u000bÿú\u0002\u0005ù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿüú\u000búü\u0001\tÿú\u0001\u0006ÿú\u0000\u0007ù\u0001ú\fÿú\u0001\u0006ÿúÿ\bøÿ\tÿüû\nÿø\tó\u0002\u000bÿûû\u000bÿ÷\nù\u0001ù\rûÿ\u0006ùü\u000bûþ\u0007ûø\t\u0004õþ\rûüþ\u000bó\b\u0005ô\u0003\tûÿ\u0006ûþ\u0002\u0005õþ\rõ\u000bó\b\u0005ûü\u0005\u0004øÿ\tó\t\u0004õ\u0000\u000bøÿ\tú\u0000ý\tú\u0002\u0000\u0004÷ü\rûú\u000bù\u0002\u0005ö\nÿö\u000bú\u0001\u0005ÿúþ\tÿúý\nÿúü\u000bÿúû\të\u00153Â\u000bó\u00079Ûß\u0002\tû\u0007%Í\fý\bÿóó\u0000\u0003\u0007\u0004ó\u0018õõ÷\u0010\të\u00153Â\u000bó\u00079íÏ\u0000\u0011è&ß\u0005ý\r Í\u0015þõü\u000bú\u0001ü\u0005ÿû\u0006ÿú\u0007úù\u0003\núýþ\u000bûü\u0004\u0005ûü\tó\u0005\bù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿù\bú\u0001\u0005ÿø\tÿ÷\nÿö\u000búý\tÿõ\fÿô\rúù\u0002\u000böý\rúù\u0001\fûø\u0005\búý\u0003\u0006úù\u0000\rÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿú\u0007ù\u0003\u0000\u0004ûÿ\u0006ûý\u0001\u0007ùü\u000bûþÿ\bú\u0002ú\nø\u0004\u0004ûÿ\u0006ûþ\u0007ùü\u000bùú\rùú\rûþ\u0001\u0006õÿ\fûü\u0001\bö\nÿù\bú\u0001\u0005ÿüþ\u0007ÿüý\bÿû\u0006ú\u0006ÿüü\tÿüû\nù\u0003ÿ\u0005ÿüú\u000bÿüû\núý\túþþ\nÿüù\fÿüø\rÿû\u0002\u0004ÿüû\nù\u0003ÿ\u0005ÿû\u0001\u0005ÿüû\núý\túý\u0003\u0006ûú\u0001\nÿû\u0000\u0006ÿûÿ\u0007ÿüû\nù\u0003þ\u0006ûú\u0001\nÿûþ\bÿûý\tÿûü\nÿûý\tÿûû\u000bÿûú\fÿö\u000bÿû\u0002\u0004ÿú\u0007ù\u0003ý\u0007ûþ\u0007ûþ\u0002\u0005õþ\rõ\u000bó\b\u0005õ\u0000\u000bõÿ\fø\u0004\u0004ûþ\u0007ûø\t\u0004õþ\rõ\u000bøû\r÷ü\rú\u0001ø\rÿù\bú\u0001\u0005ÿûù\rÿú\u0003\u0004ÿú\u0002\u0005ÿüû\nù\u0003ÿ\u0005ÿú\u0001\u0006ÿüû\nù\u0003ü\b÷\u0001\bûù\u0003\tÿú\u0000\u0007÷\tûû\u0006\u0004ÿúÿ\bù\u0003û\tù\u0003ú\nù\u0003ù\u000bù\u0003ø\fù\u0003÷\rù\u0002\u0001\u0004ÿúþ\tÿúý\nÿú\u0002\u0005ù\u0002\u0000\u0005ù\u0002ÿ\u0006ù\u0002þ\u0007ù\u0003ø\fù\u0003÷\rûø\u0005\bûþ\u0003\u0004ûú\u0001\nÿúü\u000bÿúûü\u0005ÿû\u0006ùý\nûú\u000bùü\u000bùû\fûÿ\u0006ûþ\u0007ùú\rø\u0004\u0004ûü\tûû\nø\u0003\u0005ú\u0002\u0004ÿú\u0007ú\u0001\u0005ÿù\bÿø\tÿ÷\nÿö\u000búý\tø\u0002\u0006ÿõ\fÿö\u000bÿô\rÿû\u0006ø\u0001\u0007ûÿ\u0006ø\u0000\bøÿ\tøþ\nûÿ\u0006øý\u000bøü\føû\rø\u0000\b÷\u0005\u0004÷\u0004\u0005÷\u0003\u0006ù\u0002\u0005ö\nÿú\u0007ú\u0001\u0005ÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006úý\tÿüþ\u0007÷\u0002\u0007÷\u0001\bÿüý\bÿüü\tÿüû\nÿüÿ\u0006ÿüú\u000b÷\u0000\t÷ÿ\nùú\r÷þ\u000b÷\u0004\u0005ûú\u000b÷ý\f÷þ\u000bõ\u000b÷ü\røÿ\t÷ü\rö\u0006\u0004ö\u0005\u0005ö\nÿüù\fù\u0001\u0006ö\nÿüø\rÿû\u0002\u0004ÿû\u0001\u0005úý\tö\u0004\u0006÷\u0001\bö\u0003\u0007ö\u0002\b÷\u0001\bö\u0001\tö\u0000\nÿû\u0000\u0006ÿûÿ\u0007ÿûþ\böÿ\u000bÿûý\tù\u0001\u0006ú\u0001\u0005õ\u000bÿûü\nÿûþ\bÿûû\u000bÿûú\fúý\tÿüþ\u0007öþ\föý\r÷\u0001\bÿüý\bÿüü\tõ\u0007\u0004õ\u0006\u0005õ\u0005\u0006õ\u000bÿüû\núý\tÿûù\rõ\u0004\u0007ÿú\u0003\u0004õ\u0003\böþ\fÿú\u0002\u0005ÿú\u0001\u0006õ\u0002\tÿûý\tú\u0006ÿú\u0000\u0007ÿûþ\bÿû\u0001\u0005ÿúÿ\të\u00153Â\u000bó\u00079ë×\u000bî\u00000âîÿ/Í\u0015þõü\u000bú\u0001ü\u0005ÿû\u0006û\u0001÷\rõ\u000bÿú\u0007ÿù\bùý\nÿø\tú\u0006ÿ÷\nÿù\bÿö\u000bù\u0000\u0001\u0006úû\u000bûýü\fó\b\u0005ø\u0004\u0004ûúþ\rùú\rû\u0000ü\tõþ\r÷\u0004\u0005ûþ\u0007ùü\u000bùú\rûþü\u000bó\b\u0005øÿ\tó\u0005\bó\u0004\tú\u0002\u0004ÿõ\fù\u0001\u0006ö\nÿô\rÿü\u0001\u0004ÿû\u0006ÿù\búý\tó\u0001\fÿü\u0000\u0005õ\u000bÿüÿ\u0006ÿüþ\u0007ÿüý\bù\u0000ú\rùÿ\u0004\u0004ûù\u0005\u0007ùÿ\u0003\u0005ø\u0004\u0004û\u0000ü\tù\u0003\u0004ö\u0005\u0005ö\nÿüü\tù\u0001\u0006ö\nÿüû\nÿüú\u000bÿüù\fúý\tÿüÿ\u0006õ\u0007\u0004ÿøü\u0005ú\u0006ó\u0001\fÿû\u0006õ\u000bÿú\u0007úý\tÿù\bÿø\tûø\u0001\fùü\u0007\u0004ûüÿ\nùú\rõþ\rõ\u000bûù\b\u0004÷ÿ\núû\u0002\tùü\u0006\u0005÷ü\rú\u0001ø\rÿ÷\nú\u0001\u0005ÿö\u000bÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ú\u0006ÿú\u0007ùü\u0005\u0006ÿüÿ\u0006ÿü\u0000\u0005ÿüþ\u0007ÿø\tùü\u0004\u0007ûþ\u0007ûú\u0000\u000bùú\rùú\rõ\u000bó\b\u0005õþ\rõ\u000bûÿ\u0006ûþ\u0007øü\fó\b\u0005ùü\u0003\bõþ\rõ\u000bõ\u0000\u000bûü\u0001\bö\nÿ÷\nú\u0001\u0005ÿüý\bÿüü\tÿüþ\u0007ÿü\u0000\u0005÷\tö\nõ\u000bÿüû\nù\u0000\u0002\u0005ÿüÿü\u0005ÿû\u0006ù\u0007ùü\u0002\tûø\t\u0004ø\u0004\u0004ùü\u0001\nûüÿ\nùü\u000bûø\b\u0005ó\b\u0005õÿ\fûÿ\u0006ùü\u0000\u000bõþ\rùý\u0006\u0004ó\u0004\tù\u0002\u0005ö\nÿú\u0007ù\u0001\u0006ö\nÿù\bÿø\tÿ÷\nùüÿ\fÿö\u000bú\u0006ûþú\rÿõ\fÿô\rÿü\u0001\u0004ÿü\u0001\u0004ÿü\u0001\u0004ùüþ\rÿü\u0000\u0005úü\u0001\tÿü\u0000\u0005ûÿ\u0002\u0004ÿö\u000bùû\b\u0004÷\u0002\u0007÷\u0001\bÿüÿ\u0006ÿüþ\u0007ú\u0006ÿõ\fùû\b\u0004ûÿÿ\u0007ö\u0001\t÷\u0001\bÿüÿ\u0006ùû\u0007\u0005õ\u000bÿüþ\u0007ÿü\u0001\u0004ÿüý\b÷\tûû\u0006\u0004ÿüü\tÿû\u0006ú\u0002þ\u0006ûÿ\u0006ø\u0000\bõÿ\fõþ\r÷\u0004\u0005ûýü\fó\b\u0005ø\u0004\u0004÷þ\u000bûû\u0003\u0007ùû\u0006\u0006ù\u0002\u0005ö\nÿú\u0007ù\u0001\u0006ö\nÿüû\nÿüú\u000bÿüùü\u0005úý\tÿû\u0006úý\tÿú\u0007ÿù\bÿø\tÿ÷\nÿö\u000bõ\u0001\nÿõ\föþ\fó\u0002\u000bÿô\rÿü\u0001\u0004ó\u0002\u000bÿü\u0000\u0005úý\tÿû\u0006úý\tÿú\u0007ÿù\bÿø\tó\u0001\fú\u0000ù\rÿ÷\nÿüÿ\u0006ø\u0004ú\nûÿ\u0006ûú\u000bûÿ\u0006ùü\u000bûþ\u0007ùü\u000bùú\rû\u0000ý\búþû\rùú\ró\b\u0005úý\u0005\u0004ùý\u0004\u0006÷ý\f÷þ\u000bùü\u0006\u0005÷ü\røÿ\tûþ\u0007úù\røÿ\tó\u0005\bø\u0004\u0004ûÿ\u0006÷\u0003\u0006ù\u0002\u0005ö\nÿüþ\u0007ú\u0001\u0005ÿüý\bÿüü\tÿüû\nÿüÿ\u0006ùüÿ\fúù\u0005\bûø\t\u0004õþ\rûüþ\u000bø\u0004ù\u000bõ\u000bû\u0001ù\u000bö\u0005\u0005ö\nÿüþ\u0007ù\u0001\u0006ö\nÿüú\u000bÿüù\fÿüø\rÿû\u0002\u0004øÿ\tÿü\u0000\u0005ù\u0001\u0006ù\u0001\u0006ûû\u0006\u0004ÿû\u0001\u0005øÿ\tÿû\u0000\u0006ÿüÿ\u0006úú\u0005\u0007úþü\fû\u0001û\tùú\rúú\f÷þ\u000bùü\u000búû\u0000\u000bù\u0001\u0001\u0005ûú\u000bùü\u000bùú\r÷þ\u000búû\u0001\nøÿ\t÷ü\røÿ\tùÿû\rûü\u0004\u0005ûü\tùý\u0002\bù\u0002\u0005ö\nÿüþ\u0007ú\u0001\u0005ÿûÿ\u0007ÿûþ\bÿûý\túý\tÿú\u0007ÿûü\nÿûû\u000bÿûú\fÿûù\rÿüÿ\u0006ø\u0004ø\fó\t\u0004ûÿ\u0006ûþ\u0007ùú\rõþ\rõ\u000bû\u0000ü\t÷\u0005\u0004õ\u000bûÿ\u0006ûþ\u0007ô\u0007\u0005ùú\rõþ\rûüþ\u000bô\u0005\u0007ûý\u0001\u0007ø\u0004\u0004õ\u0000\u000bûü\u0001\bö\nÿüþ\u0007ù\u0001\u0006ö\nÿú\u0003\u0004ÿú\u0002\u0005ÿú\u0001\u0006ÿüø\rÿú\u0000\u0007ø\u0004÷\rù\u0002\u0005ö\nÿúÿ\bú\u0001\u0005ÿúþ\tÿúý\nÿúü\u000bÿúû\fó\u0002\u000bÿû\u0000\u0006ù\u0002û\nÿõ\fÿúú\rÿù\u0004\u0004úú\u0002\nø\u0003\u0001\u0004ø\u0003\u0000\u0005õ\u000bÿù\u0003\u0005úü\nÿù\u0002\u0006ÿú\u0001\u0006ø\u0003ÿ\u0006ÿù\u0002\u0006ÿù\u0001\u0007öþ\fÿù\u0000\bÿùÿ\tÿùþ\nÿùý\u000bú\u0006ÿùü\fÿö\u000bÿúü\u000bû\u0001÷\rõ\u000bÿù\u0003\u0005ÿö\rôü\f÷\r\u0017ß\u0001 Ù\t\u0000ü\u0005ÿû\u0006ÿú\u0007ú\u0001ú\u000búù\rõÿ\fõþ\rõ\u000bó\t\u0004ûû\u0003\u0007ø\u0004\u0004÷þ\u000bùü\u000bú\u0002÷\rú\u0001ù\fûþ\u0007ùú\rõþ\rõ\u000bûù\u0007\u0005ù\u0003\u0004ú\u0001ø\rÿù\bú\u0001\u0005ÿø\tÿ÷\nÿö\u000bÿõ\fÿô\rÿü\u0001\u0004úý\tÿü\u0000\u0005öþ\fÿô\rÿüÿ\u0006ÿüþ\u0007öþ\fÿüý\bÿüü\tú\u0000\u0002\u0004ÿüû\núý\tÿüú\u000böþ\fÿüù\fÿüø\rúý\tÿüú\u000böþ\fÿû\u0002\u0004ú\u0000\u0001\u0005ÿüû\nú\u0000\u0000\u0006ÿû\u0001\u0005ú\u0006ó\u0001\fÿû\u0000\u0006õ\u000bÿûÿ\u0007ú\u0000ÿ\u0007ÿû\u0001\u0005øÿ\tÿûþ\böþ\fÿûý\tÿûü\nÿûû\u000bÿûú\føÿ\tÿûù\rÿú\u0003\u0004ú\u0000þ\búû\u000bûü\u0002\u0007õ\u000bó\b\u0005ûþ\u0000\u0007ú\u0000ý\tõ\u000bó\t\u0004ùü\u000bùú\rû\u0000ý\bú\u0000ü\n÷ý\fû\u0000ü\tó\u0007\u0006ø\u0004\u0004ó\b\u0005øÿ\tó\u0005\bûü\u0001\bö\nÿú\u0002\u0005ú\u0001\u0005ÿú\u0001\u0006ÿú\u0000\u0007ÿúÿ\bÿúþ\tÿúÿ\bú\u0000û\u000bÿúý\nÿúü\u000bú\u0000ú\fÿúý\nÿúþ\tÿúþ\tó\u0002\u000bÿûþ\bÿúû\föþ\fÿúú\rÿù\u0004\u0004ÿù\u0003\u0005ú\u0006ÿûÿ\u0007öþ\fÿûý\tó\u0001\fú\u0000ù\rÿù\u0002\u0006ÿù\u0001\u0007ÿù\u0000\bÿú\u0003\u0004ø\u0001\u0007ù\u0003\u0004ö\u0005\u0005ö\nÿú\u0002\u0005ú\u0001\u0005ÿùÿ\tÿùþ\nÿùý\u000bÿùü\fÿú\u0007úÿ\u0003\u0004ûýþ\nùú\rõþ\rúÿ\u0002\u0005øÿ\tûû\nûú\u000bú\u0002\u0004ÿù\bú\u0001\u0005ÿùû\rÿø\u0005\u0004ÿø\u0004\u0005û\u0001÷\rõ\u000bÿø\u0003\u0006ó\u0002\u000bÿûù\rú\u0006ú\u0001þ\u0007õ\u000bÿûÿ\u0007ú\u0006ÿûÿ\u0007ÿúþ\tÿúþ\të\u00153Â\u000bó\u00079ìÓ\u0000\u0003\u0007\u0004óü\u0005ÿû\u0006ÿú\u0007úù\t\u0004÷ý\fó\b\u0005õþ\rúþû\rúû\u0000\u000bõþ\rûüÿ\n÷ý\fùú\rûþ\u0001\u0006úú\b\u0004ûýþ\nõ\u0000\u000bøÿ\tó\u0005\bûü\u0004\u0005ùú\r÷ü\rûú\u000bù\u0002\u0005ö\nÿù\bù\u0001\u0006ö\nÿø\tÿ÷\nÿö\u000bú\u0006ÿõ\fÿû\u0006úù\b\u0005ÿô\rÿö\u000bù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿü\u0001\u0004úý\túù\u0007\u0006ûù\u0002\nÿü\u0000\u0005ÿú\u0007úù\u0006\u0007ûþ\u0007ùü\u000bû\u0000þ\u0007õ\u000búú\fûþ\u0007ùú\ró\u0006\u0007õ\u0000\u000bù\u0003\u0004ú\u0001ø\rÿù\bù\u0001\u0006ö\nÿüÿ\u0006ÿüþ\u0007ÿüý\búý\tÿü\u0000\u0005ÿüü\tÿû\u0006ûø\u0001\fÿô\të\u00153Â\u000bó\u00079Ûß\u0002\tû\u0007ü\u0005úý\tÿû\u0006ÿú\u0007ÿù\bÿø\tú\u0006úýü\rõ\u0006\u0005ûù\u0002\nÿ÷\nÿö\u000bÿõ\fÿö\u000bó\u0002\u000bÿô\rÿü\u0001\u0004ûýý\u000búû\u000bûþ\u0007÷ý\fûþü\u000bó\b\u0005õþ\rô\b\u0004ùú\rø\u0004\u0004ó\b\u0005úü\u0006\u0004û\u0001ÿ\u0005ô\u0003\t÷ü\rø\u0003\u0005ú\u0002\u0004ÿü\u0000\u0005ú\u0001\u0005ÿüÿ\u0006ÿüþ\u0007ÿüý\bÿüü\tøÿ\tÿô\rÿüû\núü\u0005\u0005øÿ\tú\u0000ý\tú\u0002\u0000\u0004÷ü\rú\u0001ø\rÿüú\u000bú\u0001\u0005ÿüù\fÿüø\rÿüü\tÿö\u000b÷\tûû\u0006\u0004ÿû\u0002\u0004ú\u0006ÿ÷ü\u0005ÿû\u0006úûþ\rõþ\rõ\u000bó\b\u0005úú\b\u0004ûú\u000bûÿ\u0006ùü\u000búû\u0002\tõ\u000bô\u0002\n÷ü\rûú\u000bú\u0002\u0004ÿú\u0007ù\u0001\u0006ö\nÿù\bÿø\tÿ÷\nÿ÷\nÿö\u000búý\tÿõ\fú\u0006ÿô\rûû\u0005\u0005ÿü\u0001\u0004÷\tö\nõ\u000bÿü\u0000\u0005õ\u0001\nÿü\u0001\u0004ú\u0006úú\u0007\u0005õ\u0006\u0005ûù\u0002\nÿô\rÿüÿ\u0006ÿüÿ\u0006ÿüÿ\u0006ÿüþ\u0007úú\u0006\u0006úû\u000bûþ\u0007ùü\u000bûø\b\u0005û\u0000ý\bõ\u000bó\t\u0004øü\fó\b\u0005ûýû\rúú\fûþû\fö\u0005\u0005ö\nÿüý\bù\u0001\u0006ö\nÿüü\tÿüû\nÿüúü\u0005ú\u0006ó\u0001\fÿû\u0006õ\u000bÿú\u0007ù\u0001\u0006ù\u0001\u0006ûû\u0006\u0004ÿù\bÿø\túý\tÿ÷\nÿö\u000bÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005ûû\u0005\u0005ÿüÿ\u0006ÿüþ\u0007ûû\u0004\u0006ûû\u0003\u0007õþ\rõ\u000b÷þ\u000bùü\u000bùú\ró\b\u0005ûû\u0002\bûû\u0001\tùú\rùú\rõ\u000bûü\tó\u0005\bûû\u0000\nûûÿ\u000bõ\u000b÷ü\røÿ\t÷ü\rûú\u000bù\u0002\u0005ö\nÿüý\bù\u0001\u0006ö\nÿüü\tÿüû\nÿø\tÿüþ\u0007ûûþ\fûÿ\u0006ûýþ\nûþ\u0007ô\u0007\u0005øü\fõ\u0000\u000bó\b\u0005õþ\r÷\u0004\u0005ûü\tûÿ\u0001\u0005øÿ\tó\u0005\bûûý\r÷ü\rûú\u000bú\u0002\u0004ÿüý\bú\u0001\u0005ÿüú\u000bÿüù\fÿüø\rú\u0006ÿú\u0007ûú\u0007\u0004ÿüÿ\u0006ÿü\u0000\u0005ÿü\u0000\të\u00153Â\u000bó\u00079Ùçûþ\u0005\u0000\u0001ýþ\u000f\u0001\u0015ß\u000bó\u0011í\u000bú\u0001)Í\u0015þõü\u000bú\u0001ü\u0005ú\u0006ó\u0001\fó\u0000\rõ\u000bÿû\u0006õ\u0002\tÿú\u0007ÿù\bù\u0000\u0003\u0004ûú\u0001\nÿø\tÿ÷\nöþ\fÿö\u000bú\u0001þ\u0007õ\u000bÿõ\fÿô\rÿü\u0001\u0004öþ\fÿö\u000bÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ÿüý\bù\u0000\u0002\u0005ÿüü\tøÿ\tÿüû\nú\u0006ÿû\u0006ÿüý\bÿüú\u000bÿüù\fûÿü\nÿüø\rÿû\u0002\u0004ú\u0006ó\u0001\fÿû\u0001\u0005õ\u000bÿû\u0006ÿüý\bó\u0002\u000bÿüû\nÿüý\bÿû\u0000\u0006úý\tÿûÿ\u0007úý\tÿûþ\bÿûý\töþ\fÿûü\nÿûû\u000bøÿ\tÿûú\fÿûù\röþ\fÿú\u0003\u0004ÿú\u0002\u0005ù\u0001\u0006ù\u0001\u0006ûû\u0006\u0004ÿú\u0001\u0006ú\u0006ÿû\u0006ÿú\u0000\u0007ù\u0000\u0001\u0006úþü\fûþ\u0007ùü\u000bùú\rû\u0000ý\búþû\rùú\rû\u0000ü\tô\u0003\tô\u0002\nô\u0001\u000bö\nÿúÿ\bù\u0001\u0006ö\nÿúþ\tÿúý\nÿúü\u000búü\nÿú\u0007ó\u0002\u000bÿûú\fûÿú\fÿüü\tÿúû\föþ\fÿú\u0003\u0004ÿúú\rÿù\u0004\u0004ù\u0000\u0000\u0007ÿüø\rÿú\u0000\u0007ù\u0000ÿ\bùü\u000bùú\rùú\rõ\u000bó\b\u0005ú\u0001ü\tûþÿ\bûù\u0004\bûÿ\u0006ûýþ\nùú\rõþ\r÷\u0004\u0005ûü\tûû\nú\u0001ø\rÿúÿ\bú\u0001\u0005ÿù\u0003\u0005ÿù\u0002\u0006ÿù\u0001\u0007ÿù\u0000\bù\u0000þ\tûùÿ\rûø\t\u0004ô\u0006\u0006ó\b\u0005ø\u0004\u0004ûÿ\u0006ûýü\fùú\rõ\u000bó\b\u0005úú\b\u0004÷ÿ\nùú\r÷þ\u000bõ\u000bû\u0001ù\u000bûú\u000bú\u0002\u0004ÿùÿ\tù\u0001\u0006ö\nÿùþ\nÿùý\u000bÿùü\fÿù\u0000\bù\u0000ý\nùú\rø\u0004\u0004ù\u0000ü\u000bøþ\nûý\u0001\u0007÷ý\fõþ\rõ\u000bù\u0000û\fûÿ\u0006õ\u0000\u000bøÿ\tú\u0000ý\t÷\u0004\u0005ùú\rû\u0000ù\fú\u0002\u0004ÿùÿ\tù\u0001\u0006ö\nÿùû\rÿø\u0005\u0004ÿø\u0004\u0005ÿø\u0004\u0005ÿüý\u0015õ÷\u0010\u0016éûú\u001eõõ÷\u0010ö.Øýüû\të\u00153Â\u000bó\u00079àÙ\b\u000býó,×ý\u0005\fí/Í\u0015þõü\u000bú\u0001ó\nò\u0003\u0006\u00056º\u000fí\u0004FÚïí\u0004\u001fá\u000býùü\u0005ÿû\u0006ú\u0006ÿú\u0007ÿù\bÿø\tú\u0002ù\u000b÷ÿ\nû\u0001û\tùú\ró\b\u0005ú\u0002ø\fùü\u000bú\u0002÷\rõ\u0000\u000bû\u0001þ\u0006øÿ\tû\u0000ù\fù\u0002\u0005ö\nÿ÷\nù\u0001\u0006ö\nÿö\u000bÿõ\fÿô\röþ\fÿü\u0001\u0004ÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ú\u0006ÿú\u0007ÿø\tû\u0001\u0000\u0004ûû\u0000\nú\u0001\u0001\u0004ú\u0002÷\rú\u0002ø\fûû\u0003\u0007õ\u0000\u000b÷þ\u000bú\u0001\u0000\u0005û\u0001ÿ\u0005÷þ\u000bõ\u000b÷ü\røÿ\t÷ü\rú\u0001ÿ\u0006ùü\u000bùú\rô\u0003\tô\u0002\n÷ü\rûú\u000bù\u0002\u0005ö\nÿ÷\nù\u0001\u0006ö\nÿüý\bÿüü\tÿüû\nøÿ\tÿüú\u000b÷\tûû\u0006\u0004ÿüù\fÿû\u0006ÿüû\nú\u0006ó\u0001\fÿüø\rõ\u000bÿú\u0007ÿû\u0002\u0004øÿ\tÿû\u0001\u0005ÿû\u0006ÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bÿûý\tÿûü\nÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bú\u0001þ\u0007õ\u000bÿûý\tó\u0002\u000bÿüú\u000bó\u0002\u000bÿû\u0001\u0005ó\u0002\u000bÿûû\u000bÿû\u0006ÿûú\fú\u0001ý\bûþ\u0007ùü\u000bû\u0000þ\u0007ûþ\u0001\u0006ú\u0001ü\tùú\ró\u0006\u0007õ\u0000\u000bûþ\u0007úú\fú\u0001û\nú\u0002\u0004ÿûù\rú\u0001\u0005ÿú\u0003\u0004ÿú\u0002\u0005ÿú\u0001\u0006øÿ\tÿûû\u000búý\tÿú\u0000\u0007ÿúÿ\bÿúþ\të\u00153Â\u000bó\u00079ÜÝ\u0007ú\u000bü\b Í\u0015þõü\u000bú\u0001\të\u00153Â\u000bó\u00079åÝ\u0000\u0007þ\u0006õ+Ï\u000bò\b\b÷ú/Í\u0015þõü\u000bú\u0001ü\u0005÷\tö\nõ\u000bÿû\u0006ÿú\u0007ÿù\bó\u0001\fÿø\tÿ÷\nó\u0003\nÿö\u000bÿù\bùú\u0005\bÿö\u000bú\u0006ùú\u0004\tõ\u000bÿõ\fÿù\bú\u0006ÿõ\fÿô\rùú\u0003\nùÿ\u0004\u0004ûþ\u0001\u0006õþ\rõ\u000bûþ\u0002\u0005õþ\rûù\u0004\bó\u0004\tú\u0002\u0004ÿü\u0001\u0004ú\u0001\u0005ÿü\u0000\u0005ÿüÿ\u0006ÿüþî\u0003\u0000\r÷ú ëü\b\u0018äý\u0000\u0003öü\u0005ÿû\u0006ú\u0006ù\u0007ø\bÿú\u0007÷\tö\nõ\u000bÿù\bú\u0006ÿú\u0007ÿø\tô\fÿ÷\nó\rÿ÷\nÿö\u000bû\u0000\u0005ûÿ\u0006ûþ\u0007ûý\bõ\u000bûÿ\u0006ûü\tûû\nûú\u000bú\u0002\u0004ÿõ\fú\u0001\u0005ÿô\rÿü\u0001\u0004ÿø\tÿû\u0006úý\tÿü\u0000\u0005ÿüÿ\u0006ÿüþ\u0007ÿüý\bÿüü\túü\núû\u000búú\fúù\rù\u0003\u0004ûú\u000bù\u0002\u0005ö\nÿüû\nù\u0001\u0006ö\nÿüú\u000bÿüù\fÿüø\rÿû\u0002\u0004ÿû\të\u00153Â\u000bó\u00079ßíø\u0005\u0002ï\u0005õù\u000eü\u0005ÿû\u0006ú\u0006ÿú\u0007ÿù\b÷\tö\nõ\u000bÿø\tÿ÷\núÿÿ\bùú\u0002\u000bøþ\nûþ\u0007ó\b\u0005ûý\u0000\bûüþ\u000bùú\u0001\fûÿ\u0006ùü\u000bùú\rû\u0001þ\u0006ø\u0003\u0005ú\u0002\u0004ÿö\u000bù\u0001\u0006ö\nÿõ\fÿô\rÿü\u0001\u0004ÿü\u0000\u0005øÿ\tÿüÿ\u0006ÿüþ\u0007øÿ\tÿüý\bÿüü\tùú\u0000\rûþ\u0007ûú\u0000\u000bùú\rûþü\u000bó\b\u0005ûü\u0004\u0005ûü\u0002\u0007õ\u000bû\u0000ü\tó\u0004\tù\u0002\u0005ö\nÿüû\nù\u0001\u0006ö\nÿüú\u000bÿüù\fÿü\u0000\u0005öþ\fÿüø\rÿû\u0002\u0004ÿû\u0001\u0005ÿû\u0000\u0006ÿüþ\u0007ù\u0001\u0006ú\u0001\u0005õ\u000bÿûÿ\u0007ÿûþ\bÿüü\tø\u0004\u0000\u0004ûýü\fû\u0000ý\búþû\rú\u0002÷\rõ\u0000\u000bô\u0003\tûþ\u0007ûÿ\u0006õ\u0000\u000b÷\u0005\u0004÷\u0004\u0005ùú\rû\u0001ù\u000bö\u0005\u0005ö\nÿüû\nù\u0001\u0006ö\nÿûý\tÿûü\nÿûû\u000bÿüü\tø\u0004ÿ\u0005÷\u0005\u0004õ\u000b÷\u0003\u0006ú\u0002\u0004ÿüû\nú\u0001\u0005ÿûú\fÿûù\rÿú\u0003\u0004ú\u0006ø\u0004þ\u0006õ\u0006\u0005õ\u0005\u0006õ\u000bÿú\u0007ÿ÷\nø\u0004ý\u0007÷ÿ\nùú\rùýÿ\u000bù\u0001\u0000\u0006øþ\nûÿ\u0006ûÿ\u0000\u0006ø\u0004ü\bûý\búÿ\u0002\u0005øÿ\tó\u0005\bûü\u0001\bö\nÿö\u000bù\u0001\u0006ö\nÿú\u0002\u0005ÿú\u0001\u0006ÿú\u0000\u0007øÿ\tÿúÿ\bó\u0002\u000bÿüÿ\u0006ÿú\u0003\u0004ÿúþ\töþ\fÿúý\nÿúü\u000bÿúû\fÿúú\rÿù\u0004\u0004ó\u0002\u000bÿúÿ\bó\u0002\u000bÿüý\bÿü\u0001\u0004ÿüþ\u0007ÿûû\u000böþ\fÿù\u0003\u0005ÿù\u0002\u0006ÿüü\tø\u0004û\tùú\rõþ\rõ\u000bûþ\u0007ùÿ\u0004\u0004õ\u000bó\b\u0005õÿ\fô\u0004\b÷þ\u000bõ\u000bû\u0001ù\u000bö\u0005\u0005ö\nÿüû\nú\u0001\u0005ÿù\u0001\u0007ÿù\u0000\bÿûþ\bÿùÿ\túý\tÿùþ\nÿùý\u000bÿùü\fúý\tÿùþ\nÿùû\rÿø\u0005ñ\u0000\u000b÷\nü\u0005øÿ\tÿû\u0006ÿú\u0007ùÿ\u0002\u0006úû\u000bû\u0001û\tûø\b\u0005ó\b\u0005ûü\u0004\u0005ûþ\u0007øü\fùÿ\u0001\u0007ùü\u000bùû\fô\u0002\nô\u0001\u000bö\nÿù\bù\u0001\u0006ö\nÿø\tÿ÷\nÿö\u000bú\u0006ó\u0001\fó\u0000\rõ\u000bÿõ\fÿô\rÿü\u0001\u0004öþ\fÿü\u0000\u0005ú\u0000\u0002\u0004õ\u0006\u0005ûù\u0002\nÿüÿ\u0006ÿüþ\u0007ÿüý\böþ\fÿüü\tÿüû\nÿú\u0007ùÿ\u0000\bûÿ\u0006ûþ\u0007ùü\u000bùú\ró\b\u0005ø\u0004\u0004÷þ\u000bûû\u0003\u0007ûû\u0002\bõ\u000bó\t\u0004ùü\u000bû\u0000þ\u0007õ\u000bó\b\u0005õÿ\fûý\u0001\u0007õþ\rûüþ\u000bûü\u0001\bö\nÿù\bú\u0001\u0005ÿüú\u000bÿüù\fÿüø\rÿû\u0002\u0004ùÿÿ\tó\t\u0004ó\u0007\u0006ó\u0006\u0007ûþ\u0000\u0007ó\u0005\bõþ\rõ\u000bùÿþ\nûþ\u0007ûüü\rõþ\rùÿý\u000bûú\u000bú\u0002\u0004ÿû\u0001\u0005ú\u0001\u0005ÿû\u0000\u0006ÿûÿ\u0007ÿûþ\bú\u0006ÿõ\fÿûý\töþ\fÿüü\tÿûü\nÿûû\u000bÿü\u0001\u0004ú\u0006ÿõ\fÿûú\fÿú\u0007ùÿü\fûùÿ\rùü\u000bùú\rû\u0001ú\nûü\u0004\u0005ûþ\u0007ùú\rõþ\rõ\u000bû\u0000ü\tûÿ\u0006ùÿû\rûü\u0004\u0005ó\b\u0005ûü\u0005\u0004ú\u0001ø\rÿù\bù\u0001\u0006ö\nÿûù\rÿú\u0003\u0004ÿú\u0002\u0005ó\u0002\u000bÿú\u0001\u0006ÿö\u000bó\u0002\u000bÿú\u0000\u0007ÿúÿ\bÿü\u0001\u0004ÿü\u0001\u0004úý\tÿúþ\töþ\fÿúý\nÿúü\u000bÿúû\fù\u0001\u0006ù\u0001\u0006ö\nõ\u000bÿúú\ró\u0002\u000bÿù\u0004\u0004ù\u0000\u0003\u0004ûú\u0001\nÿù\u0003\u0005ÿù\u0002\u0006ÿù\u0001\u0007öþ\fÿü\u0000\u0005ÿù\u0000\bÿùÿ\tÿùþ\nøÿ\tÿú\u0001\u0006ó\u0002\u000bÿû\u0006øÿ\tÿú\u0000\u0007øÿ\tÿù\u0004\u0004ÿûþ".getBytes("ISO-8859-1"), 0, bArr, 0, 15972);
        setMin = bArr;
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.setDrawDivider createAccountData() {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 10578(0x2952, float:1.4823E-41)
            short r3 = (short) r3
            r4 = 183(0xb7, float:2.56E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x02da }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x02da }
            byte[] r3 = setMin     // Catch:{ all -> 0x02da }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x02da }
            byte r3 = (byte) r3     // Catch:{ all -> 0x02da }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02da }
            byte[] r10 = setMin     // Catch:{ all -> 0x02da }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x02da }
            short r10 = (short) r10     // Catch:{ all -> 0x02da }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x02da }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x02da }
            byte[] r10 = setMin     // Catch:{ all -> 0x02da }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x02da }
            byte r10 = (byte) r10     // Catch:{ all -> 0x02da }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x02da }
            byte[] r13 = setMin     // Catch:{ all -> 0x02da }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x02da }
            short r13 = (short) r13     // Catch:{ all -> 0x02da }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x02da }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x02da }
            byte[] r13 = setMin     // Catch:{ all -> 0x02da }
            byte r13 = r13[r8]     // Catch:{ all -> 0x02da }
            byte r13 = (byte) r13     // Catch:{ all -> 0x02da }
            byte[] r14 = setMin     // Catch:{ all -> 0x02da }
            byte r14 = r14[r11]     // Catch:{ all -> 0x02da }
            short r14 = (short) r14     // Catch:{ all -> 0x02da }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x02da }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x02da }
            r12[r7] = r13     // Catch:{ all -> 0x02da }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x02da }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x02da }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02da }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            r12 = 52
            if (r5 >= r10) goto L_0x0123
            r10 = r0[r5]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x011a }
            r13[r7] = r10     // Catch:{ all -> 0x011a }
            byte[] r10 = setMin     // Catch:{ all -> 0x011a }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011a }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011a }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x011a }
            short r15 = (short) r15     // Catch:{ all -> 0x011a }
            java.lang.String r10 = length(r10, r14, r15)     // Catch:{ all -> 0x011a }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            byte r15 = r15[r6]     // Catch:{ all -> 0x011a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011a }
            r6 = r15 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011a }
            byte[] r17 = setMin     // Catch:{ all -> 0x011a }
            byte r12 = r17[r12]     // Catch:{ all -> 0x011a }
            short r12 = (short) r12     // Catch:{ all -> 0x011a }
            java.lang.String r6 = length(r15, r6, r12)     // Catch:{ all -> 0x011a }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011a }
            byte[] r17 = setMin     // Catch:{ all -> 0x011a }
            byte r4 = r17[r11]     // Catch:{ all -> 0x011a }
            short r4 = (short) r4     // Catch:{ all -> 0x011a }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011a }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011a }
            r12[r7] = r4     // Catch:{ all -> 0x011a }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x011a }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r13)     // Catch:{ all -> 0x011a }
            byte[] r10 = setMin     // Catch:{ all -> 0x0111 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0111 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0111 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0111 }
            byte r12 = r12[r16]     // Catch:{ all -> 0x0111 }
            short r12 = (short) r12     // Catch:{ all -> 0x0111 }
            java.lang.String r10 = length(r10, r14, r12)     // Catch:{ all -> 0x0111 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0111 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0111 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0111 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0111 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0111 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0111 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0111 }
            short r14 = (short) r14     // Catch:{ all -> 0x0111 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0111 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0111 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0111 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0111 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0111 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0111:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0119
            throw r1
        L_0x0119:
            throw r0
        L_0x011a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0122
            throw r1
        L_0x0122:
            throw r0
        L_0x0123:
            r4 = 55
            r5 = 22
        L_0x0127:
            int r6 = r7 + 1
            r9 = 23
            r0 = r3[r7]     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01ce }
            r7 = 24
            r10 = 18
            switch(r0) {
                case -16: goto L_0x01c2;
                case -15: goto L_0x01b9;
                case -14: goto L_0x01b6;
                case -13: goto L_0x01b2;
                case -12: goto L_0x0197;
                case -11: goto L_0x0192;
                case -10: goto L_0x017d;
                case -9: goto L_0x017a;
                case -8: goto L_0x0177;
                case -7: goto L_0x016b;
                case -6: goto L_0x0168;
                case -5: goto L_0x0165;
                case -4: goto L_0x0159;
                case -3: goto L_0x0148;
                case -2: goto L_0x013d;
                case -1: goto L_0x013a;
                default: goto L_0x0138;
            }     // Catch:{ all -> 0x01ce }
        L_0x0138:
            goto L_0x01cb
        L_0x013a:
            r7 = 49
            goto L_0x0127
        L_0x013d:
            int r0 = setMax     // Catch:{ all -> 0x01ce }
            r1.getMin = r0     // Catch:{ all -> 0x01ce }
            r0 = 10
            r1.setMax(r0)     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0148:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01ce }
            r1.setMax(r10)     // Catch:{ all -> 0x01ce }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ce }
            getMin = r0     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0159:
            r1.setMax(r5)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ce }
            if (r0 != 0) goto L_0x01cb
            r0 = 21
            r7 = 21
            goto L_0x0127
        L_0x0165:
            r7 = 56
            goto L_0x0127
        L_0x0168:
            r7 = 44
            goto L_0x0127
        L_0x016b:
            r1.setMax(r5)     // Catch:{ all -> 0x01ce }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ce }
            if (r0 != 0) goto L_0x01cb
            r0 = 43
            r7 = 43
            goto L_0x0127
        L_0x0177:
            r7 = 55
            goto L_0x0127
        L_0x017a:
            r7 = 52
            goto L_0x0127
        L_0x017d:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x01ce }
            r1.setMax(r10)     // Catch:{ all -> 0x01ce }
            r1.setMax(r9)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ce }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x01ce }
            o.DialogLayout r0 = r0.accountEntityDataFactory     // Catch:{ all -> 0x01ce }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ce }
        L_0x018e:
            r1.setMax(r7)     // Catch:{ all -> 0x01ce }
            goto L_0x01cb
        L_0x0192:
            java.lang.String r0 = "local"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ce }
            goto L_0x018e
        L_0x0197:
            r0 = 2
            r1.getMin = r0     // Catch:{ all -> 0x01ce }
            r1.setMax(r10)     // Catch:{ all -> 0x01ce }
            r1.setMax(r9)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ce }
            o.DialogLayout r0 = (o.DialogLayout) r0     // Catch:{ all -> 0x01ce }
            r1.setMax(r9)     // Catch:{ all -> 0x01ce }
            java.lang.Object r10 = r1.isInside     // Catch:{ all -> 0x01ce }
            java.lang.String r10 = (java.lang.String) r10     // Catch:{ all -> 0x01ce }
            o.setDrawDivider r0 = r0.createData((java.lang.String) r10)     // Catch:{ all -> 0x01ce }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ce }
            goto L_0x018e
        L_0x01b2:
            r7 = 22
            goto L_0x0127
        L_0x01b6:
            r7 = 1
            goto L_0x0127
        L_0x01b9:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ce }
            o.setDrawDivider r0 = (o.setDrawDivider) r0     // Catch:{ all -> 0x01ce }
            return r0
        L_0x01c2:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01ce }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ce }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01ce }
            throw r0     // Catch:{ all -> 0x01ce }
        L_0x01cb:
            r7 = r6
            goto L_0x0127
        L_0x01ce:
            r0 = move-exception
            byte[] r7 = setMin
            byte r10 = r7[r8]
            byte r10 = (byte) r10
            r11 = r10 | 2097(0x831, float:2.939E-42)
            short r11 = (short) r11
            r13 = 9575(0x2567, float:1.3417E-41)
            byte r7 = r7[r13]
            short r7 = (short) r7
            java.lang.String r7 = length(r10, r11, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            r10 = 57
            r11 = 54
            if (r7 == 0) goto L_0x01f9
            r7 = 1
            if (r6 < r7) goto L_0x01f9
            if (r6 > r5) goto L_0x01f9
            r7 = 49
            r16 = 1
            goto L_0x02cf
        L_0x01f9:
            byte[] r7 = setMin
            byte r13 = r7[r8]
            byte r13 = (byte) r13
            r14 = 14230(0x3796, float:1.994E-41)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r7 = r7[r15]
            r16 = 1
            int r7 = r7 + -1
            short r7 = (short) r7
            java.lang.String r7 = length(r13, r14, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0222
            r7 = 16
            if (r6 < r7) goto L_0x0222
            if (r6 > r5) goto L_0x0222
        L_0x021e:
            r7 = 49
            goto L_0x02cf
        L_0x0222:
            byte[] r7 = setMin
            byte r13 = r7[r8]
            byte r13 = (byte) r13
            r14 = r13 | 4944(0x1350, float:6.928E-42)
            short r14 = (short) r14
            r17 = 13
            byte r7 = r7[r17]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r7 = length(r13, r14, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0243
            if (r6 < r5) goto L_0x0243
            if (r6 > r9) goto L_0x0243
            goto L_0x021e
        L_0x0243:
            byte[] r7 = setMin
            byte r9 = r7[r8]
            byte r9 = (byte) r9
            r13 = 1451(0x5ab, float:2.033E-42)
            short r13 = (short) r13
            byte r7 = r7[r15]
            short r7 = (short) r7
            java.lang.String r7 = length(r9, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0265
            r7 = 38
            if (r6 < r7) goto L_0x0265
            r7 = 39
            if (r6 > r7) goto L_0x0265
            goto L_0x021e
        L_0x0265:
            byte[] r7 = setMin
            byte r7 = r7[r8]
            byte r7 = (byte) r7
            r9 = 15410(0x3c32, float:2.1594E-41)
            short r9 = (short) r9
            r13 = r9 & 239(0xef, float:3.35E-43)
            short r13 = (short) r13
            java.lang.String r7 = length(r7, r9, r13)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0289
            r7 = 45
            if (r6 < r7) goto L_0x0289
            r7 = 49
            if (r6 > r7) goto L_0x0289
        L_0x0286:
            r11 = 57
            goto L_0x02cf
        L_0x0289:
            byte[] r7 = setMin
            byte r9 = r7[r8]
            byte r9 = (byte) r9
            r13 = r9 | 5841(0x16d1, float:8.185E-42)
            short r13 = (short) r13
            r14 = 1197(0x4ad, float:1.677E-42)
            byte r7 = r7[r14]
            short r7 = (short) r7
            java.lang.String r7 = length(r9, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            r9 = 47
            if (r7 == 0) goto L_0x02ae
            r7 = 46
            if (r6 < r7) goto L_0x02ae
            if (r6 > r9) goto L_0x02ae
            goto L_0x021e
        L_0x02ae:
            byte[] r7 = setMin
            byte r11 = r7[r8]
            byte r11 = (byte) r11
            r13 = 963(0x3c3, float:1.35E-42)
            short r13 = (short) r13
            byte r7 = r7[r4]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r7 = length(r11, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02d9
            if (r6 < r9) goto L_0x02d9
            r7 = 49
            if (r6 > r7) goto L_0x02d9
            goto L_0x0286
        L_0x02cf:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r7 = r11
            goto L_0x0127
        L_0x02d9:
            throw r0
        L_0x02da:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x02e2
            throw r1
        L_0x02e2:
            goto L_0x02e4
        L_0x02e3:
            throw r0
        L_0x02e4:
            goto L_0x02e3
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createAccountData():o.setDrawDivider");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x015f, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:0x01cc, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x01fb, code lost:
        r7 = r11;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:90:0x029a, code lost:
        if (r11 <= 60) goto L_0x029c;
     */
    /* JADX WARNING: Removed duplicated region for block: B:89:0x0298  */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x029f  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.invalidateDividers createAvatarData() {
        /*
            r19 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r19
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 11786(0x2e0a, float:1.6516E-41)
            short r3 = (short) r3
            r4 = 231(0xe7, float:3.24E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0311 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0311 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0311 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0311 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0311 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0311 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0311 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0311 }
            short r10 = (short) r10     // Catch:{ all -> 0x0311 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0311 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0311 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0311 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0311 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0311 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0311 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0311 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0311 }
            short r13 = (short) r13     // Catch:{ all -> 0x0311 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0311 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0311 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0311 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0311 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0311 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0311 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0311 }
            short r14 = (short) r14     // Catch:{ all -> 0x0311 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0311 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0311 }
            r12[r7] = r13     // Catch:{ all -> 0x0311 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0311 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0311 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0311 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r12[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011c }
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r14[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0113 }
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0113 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0113 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0113 }
            short r14 = (short) r14     // Catch:{ all -> 0x0113 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r6 = 9
            r9 = 37
            r10 = 34
        L_0x012b:
            int r11 = r7 + 1
            r12 = 2
            r0 = r3[r7]     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01fe }
            r7 = 10
            r13 = 19
            r14 = 33
            r15 = 24
            r4 = 23
            r5 = 18
            switch(r0) {
                case -20: goto L_0x01f7;
                case -19: goto L_0x01f3;
                case -18: goto L_0x01d6;
                case -17: goto L_0x01d0;
                case -16: goto L_0x01bb;
                case -15: goto L_0x01b7;
                case -14: goto L_0x01b3;
                case -13: goto L_0x01a6;
                case -12: goto L_0x0198;
                case -11: goto L_0x0193;
                case -10: goto L_0x0186;
                case -9: goto L_0x0183;
                case -8: goto L_0x0180;
                case -7: goto L_0x017d;
                case -6: goto L_0x0171;
                case -5: goto L_0x0163;
                case -4: goto L_0x015b;
                case -3: goto L_0x0152;
                case -2: goto L_0x0149;
                case -1: goto L_0x0146;
                default: goto L_0x0143;
            }     // Catch:{ all -> 0x01fe }
        L_0x0143:
            r7 = 1
            goto L_0x01fb
        L_0x0146:
            r7 = 69
            goto L_0x012b
        L_0x0149:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x01fe }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01fe }
            o.invalidateDividers r0 = (o.invalidateDividers) r0     // Catch:{ all -> 0x01fe }
            return r0
        L_0x0152:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x01fe }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01fe }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01fe }
            throw r0     // Catch:{ all -> 0x01fe }
        L_0x015b:
            int r0 = setMax     // Catch:{ all -> 0x01fe }
            r1.getMin = r0     // Catch:{ all -> 0x01fe }
        L_0x015f:
            r1.setMax(r7)     // Catch:{ all -> 0x01fe }
            goto L_0x0143
        L_0x0163:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x01fe }
            r1.setMax(r5)     // Catch:{ all -> 0x01fe }
            r1.setMax(r13)     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMin     // Catch:{ all -> 0x01fe }
            getMin = r0     // Catch:{ all -> 0x01fe }
            goto L_0x0143
        L_0x0171:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMin     // Catch:{ all -> 0x01fe }
            if (r0 != 0) goto L_0x01fb
            r7 = 33
            goto L_0x012b
        L_0x017d:
            r7 = 34
            goto L_0x012b
        L_0x0180:
            r7 = 65
            goto L_0x012b
        L_0x0183:
            r7 = 36
            goto L_0x012b
        L_0x0186:
            r1.setMax(r10)     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMin     // Catch:{ all -> 0x01fe }
            if (r0 == 0) goto L_0x0190
            r4 = 1
            r7 = 1
            goto L_0x012b
        L_0x0190:
            r0 = 7
            r7 = 7
            goto L_0x012b
        L_0x0193:
            int r0 = getMin     // Catch:{ all -> 0x01fe }
            r1.getMin = r0     // Catch:{ all -> 0x01fe }
            goto L_0x015f
        L_0x0198:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x01fe }
            r1.setMax(r5)     // Catch:{ all -> 0x01fe }
            r1.setMax(r13)     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMin     // Catch:{ all -> 0x01fe }
            setMax = r0     // Catch:{ all -> 0x01fe }
            goto L_0x0143
        L_0x01a6:
            r1.setMax(r14)     // Catch:{ all -> 0x01fe }
            int r0 = r1.setMin     // Catch:{ all -> 0x01fe }
            if (r0 != 0) goto L_0x01fb
            r0 = 59
            r7 = 59
            goto L_0x012b
        L_0x01b3:
            r7 = 68
            goto L_0x012b
        L_0x01b7:
            r7 = 60
            goto L_0x012b
        L_0x01bb:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01f1 }
            r1.setMax(r5)     // Catch:{ all -> 0x01f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x01f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01f1 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x01f1 }
            o.positiveButtonClicked r0 = r0.avatarEntityDataFactory     // Catch:{ all -> 0x01f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01f1 }
        L_0x01cc:
            r1.setMax(r15)     // Catch:{ all -> 0x01f1 }
            goto L_0x01fb
        L_0x01d0:
            r7 = 1
            java.lang.String r0 = "network"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01f1 }
            goto L_0x01cc
        L_0x01d6:
            r7 = 1
            r1.getMin = r12     // Catch:{ all -> 0x01f1 }
            r1.setMax(r5)     // Catch:{ all -> 0x01f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x01f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01f1 }
            o.positiveButtonClicked r0 = (o.positiveButtonClicked) r0     // Catch:{ all -> 0x01f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x01f1 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x01f1 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x01f1 }
            o.invalidateDividers r0 = r0.createData((java.lang.String) r4)     // Catch:{ all -> 0x01f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01f1 }
            goto L_0x01cc
        L_0x01f1:
            r0 = move-exception
            goto L_0x0200
        L_0x01f3:
            r7 = 9
            goto L_0x012b
        L_0x01f7:
            r7 = 37
            goto L_0x012b
        L_0x01fb:
            r7 = r11
            goto L_0x012b
        L_0x01fe:
            r0 = move-exception
            r7 = 1
        L_0x0200:
            r4 = 5
            r13 = 6
            if (r11 < r12) goto L_0x020b
            if (r11 > r4) goto L_0x020b
            r4 = 65
            r13 = 5
            goto L_0x0304
        L_0x020b:
            byte[] r4 = setMin
            byte r12 = r4[r8]
            byte r12 = (byte) r12
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r15 = 55
            byte r4 = r4[r15]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r12, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0231
            if (r11 < r6) goto L_0x0231
            if (r11 > r10) goto L_0x0231
        L_0x022b:
            r4 = 65
            r13 = 67
            goto L_0x0304
        L_0x0231:
            byte[] r4 = setMin
            byte r12 = r4[r8]
            byte r12 = (byte) r12
            r5 = r12 | 4944(0x1350, float:6.928E-42)
            short r5 = (short) r5
            r18 = 13
            byte r4 = r4[r18]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r12, r5, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0256
            r4 = 29
            if (r11 < r4) goto L_0x0256
            r4 = 30
            if (r11 > r4) goto L_0x0256
            goto L_0x022b
        L_0x0256:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r12 = r5 | 2097(0x831, float:2.939E-42)
            short r12 = (short) r12
            r18 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0278
            if (r11 < r9) goto L_0x0278
            r4 = 38
            if (r11 > r4) goto L_0x0278
            goto L_0x022b
        L_0x0278:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r12 = 9099(0x238b, float:1.275E-41)
            short r12 = (short) r12
            r17 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r17]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x029f
            r4 = 54
            if (r11 < r4) goto L_0x029f
            r4 = 60
            if (r11 > r4) goto L_0x02a1
        L_0x029c:
            r4 = 65
            goto L_0x0304
        L_0x029f:
            r4 = 60
        L_0x02a1:
            byte[] r5 = setMin
            byte r5 = r5[r8]
            byte r5 = (byte) r5
            r4 = 15410(0x3c32, float:2.1594E-41)
            short r4 = (short) r4
            r6 = r4 & 239(0xef, float:3.35E-43)
            short r6 = (short) r6
            java.lang.String r4 = length(r5, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02c3
            r4 = 61
            if (r11 < r4) goto L_0x02c3
            r4 = 62
            if (r11 > r4) goto L_0x02c3
            goto L_0x029c
        L_0x02c3:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r6]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02e5
            r4 = 62
            if (r11 < r4) goto L_0x02e5
            r4 = 63
            if (r11 > r4) goto L_0x02e5
            goto L_0x029c
        L_0x02e5:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            byte r4 = r4[r15]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0310
            r4 = 63
            if (r11 < r4) goto L_0x0310
            r4 = 65
            if (r11 > r4) goto L_0x0310
        L_0x0304:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r7 = r13
            r6 = 9
            goto L_0x012b
        L_0x0310:
            throw r0
        L_0x0311:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0319
            throw r1
        L_0x0319:
            goto L_0x031b
        L_0x031a:
            throw r0
        L_0x031b:
            goto L_0x031a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createAvatarData():o.invalidateDividers");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:121:0x02e5, code lost:
        if (r10 <= 43) goto L_0x022d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x0158, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x01a7, code lost:
        r1.setMax(10);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.setExitListener createDeepLinkData() {
        /*
            r21 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r21
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 2775(0xad7, float:3.889E-42)
            short r3 = (short) r3
            r4 = r3 & 494(0x1ee, float:6.92E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0316 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0316 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0316 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0316 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0316 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0316 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0316 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0316 }
            short r10 = (short) r10     // Catch:{ all -> 0x0316 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0316 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0316 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0316 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0316 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0316 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0316 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0316 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0316 }
            short r13 = (short) r13     // Catch:{ all -> 0x0316 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0316 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0316 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0316 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0316 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0316 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0316 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0316 }
            short r14 = (short) r14     // Catch:{ all -> 0x0316 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0316 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0316 }
            r12[r7] = r13     // Catch:{ all -> 0x0316 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0316 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0316 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0316 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r13[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x011c }
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r14, r15)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r6]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            r6 = r15 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            byte[] r17 = setMin     // Catch:{ all -> 0x011c }
            r18 = 52
            byte r12 = r17[r18]     // Catch:{ all -> 0x011c }
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r15, r6, r12)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r17 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r17[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r12[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r13)     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r14, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0113 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0113 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0113 }
            short r14 = (short) r14     // Catch:{ all -> 0x0113 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r4 = 16
            r5 = 39
            r9 = 55
        L_0x012b:
            int r10 = r7 + 1
            r12 = 34
            r13 = 2
            r14 = 6
            r0 = r3[r7]     // Catch:{ all -> 0x0204 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0204 }
            r7 = 24
            r15 = 23
            r11 = 18
            switch(r0) {
                case -20: goto L_0x01fc;
                case -19: goto L_0x01f9;
                case -18: goto L_0x01e8;
                case -17: goto L_0x01d8;
                case -16: goto L_0x01d3;
                case -15: goto L_0x01d1;
                case -14: goto L_0x01ce;
                case -13: goto L_0x01cb;
                case -12: goto L_0x01bd;
                case -11: goto L_0x01ad;
                case -10: goto L_0x01a3;
                case -9: goto L_0x01a0;
                case -8: goto L_0x0191;
                case -7: goto L_0x0188;
                case -6: goto L_0x017f;
                case -5: goto L_0x017b;
                case -4: goto L_0x0161;
                case -3: goto L_0x015c;
                case -2: goto L_0x0147;
                case -1: goto L_0x0143;
                default: goto L_0x0140;
            }
        L_0x0140:
            r6 = 1
            goto L_0x01ff
        L_0x0143:
            r7 = 55
            goto L_0x0200
        L_0x0147:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01f7 }
            r1.setMax(r11)     // Catch:{ all -> 0x0204 }
            r1.setMax(r15)     // Catch:{ all -> 0x0204 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0204 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0204 }
            o.getPageId r0 = r0.deepLinkEntityDataFactory     // Catch:{ all -> 0x0204 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0204 }
        L_0x0158:
            r1.setMax(r7)     // Catch:{ all -> 0x0204 }
            goto L_0x0140
        L_0x015c:
            java.lang.String r0 = "network"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0204 }
            goto L_0x0158
        L_0x0161:
            r1.getMin = r13     // Catch:{ all -> 0x0204 }
            r1.setMax(r11)     // Catch:{ all -> 0x0204 }
            r1.setMax(r15)     // Catch:{ all -> 0x0204 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0204 }
            o.getPageId r0 = (o.getPageId) r0     // Catch:{ all -> 0x0204 }
            r1.setMax(r15)     // Catch:{ all -> 0x0204 }
            java.lang.Object r6 = r1.isInside     // Catch:{ all -> 0x0204 }
            java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x0204 }
            o.setExitListener r0 = r0.createData((java.lang.String) r6)     // Catch:{ all -> 0x0204 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0204 }
            goto L_0x0158
        L_0x017b:
            r7 = 16
            goto L_0x0200
        L_0x017f:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01f7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0204 }
            o.setExitListener r0 = (o.setExitListener) r0     // Catch:{ all -> 0x0204 }
            return r0
        L_0x0188:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01f7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0204 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0204 }
            throw r0     // Catch:{ all -> 0x0204 }
        L_0x0191:
            r1.setMax(r12)     // Catch:{ all -> 0x0204 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0204 }
            if (r0 == 0) goto L_0x019d
            r6 = 1
            r7 = 58
            goto L_0x0200
        L_0x019d:
            r7 = 6
            goto L_0x0200
        L_0x01a0:
            r7 = 12
            goto L_0x0200
        L_0x01a3:
            int r0 = setMax     // Catch:{ all -> 0x0204 }
            r1.getMin = r0     // Catch:{ all -> 0x0204 }
        L_0x01a7:
            r0 = 10
            r1.setMax(r0)     // Catch:{ all -> 0x0204 }
            goto L_0x0140
        L_0x01ad:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01f7 }
            r1.setMax(r11)     // Catch:{ all -> 0x0204 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0204 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0204 }
            getMin = r0     // Catch:{ all -> 0x0204 }
            goto L_0x0140
        L_0x01bd:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x0204 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0204 }
            if (r0 != 0) goto L_0x01ff
            r0 = 38
            r7 = 38
            goto L_0x0200
        L_0x01cb:
            r7 = 14
            goto L_0x0200
        L_0x01ce:
            r7 = 40
            goto L_0x0200
        L_0x01d1:
            r7 = 1
            goto L_0x0200
        L_0x01d3:
            int r0 = getMin     // Catch:{ all -> 0x0204 }
            r1.getMin = r0     // Catch:{ all -> 0x0204 }
            goto L_0x01a7
        L_0x01d8:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01f7 }
            r1.setMax(r11)     // Catch:{ all -> 0x01f7 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01f7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01f7 }
            setMax = r0     // Catch:{ all -> 0x01f7 }
            goto L_0x01ff
        L_0x01e8:
            r6 = 1
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x01f7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01f7 }
            if (r0 != 0) goto L_0x01ff
            r0 = 53
            r7 = 53
            goto L_0x0200
        L_0x01f7:
            r0 = move-exception
            goto L_0x0206
        L_0x01f9:
            r7 = 39
            goto L_0x0200
        L_0x01fc:
            r7 = 42
            goto L_0x0200
        L_0x01ff:
            r7 = r10
        L_0x0200:
            r11 = 58
            goto L_0x012b
        L_0x0204:
            r0 = move-exception
            r6 = 1
        L_0x0206:
            byte[] r7 = setMin
            byte r11 = r7[r8]
            byte r11 = (byte) r11
            r15 = 15376(0x3c10, float:2.1546E-41)
            short r15 = (short) r15
            r18 = 13952(0x3680, float:1.9551E-41)
            byte r7 = r7[r18]
            short r7 = (short) r7
            java.lang.String r7 = length(r11, r15, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            r11 = 54
            r20 = 13
            if (r7 == 0) goto L_0x0233
            if (r10 < r13) goto L_0x0233
            if (r10 > r14) goto L_0x0233
        L_0x0229:
            r6 = 11
            r7 = 42
        L_0x022d:
            r11 = 49
            r20 = 54
            goto L_0x030a
        L_0x0233:
            byte[] r7 = setMin
            byte r13 = r7[r8]
            byte r13 = (byte) r13
            r6 = 963(0x3c3, float:1.35E-42)
            short r6 = (short) r6
            byte r7 = r7[r9]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r6 = length(r13, r6, r7)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x025a
            r6 = 3
            if (r10 < r6) goto L_0x025a
            if (r10 > r14) goto L_0x025a
            r6 = 11
        L_0x0254:
            r7 = 42
            r11 = 49
            goto L_0x030a
        L_0x025a:
            byte[] r6 = setMin
            byte r6 = r6[r8]
            byte r6 = (byte) r6
            r7 = 15410(0x3c32, float:2.1594E-41)
            short r7 = (short) r7
            r13 = r7 & 239(0xef, float:3.35E-43)
            short r13 = (short) r13
            java.lang.String r6 = length(r6, r7, r13)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0279
            r6 = 4
            if (r10 < r6) goto L_0x0279
            if (r10 > r14) goto L_0x0279
            goto L_0x0229
        L_0x0279:
            r6 = 7
            if (r10 < r6) goto L_0x0288
            r6 = 11
            if (r10 > r6) goto L_0x028a
            r7 = 42
            r11 = 49
            r20 = 11
            goto L_0x030a
        L_0x0288:
            r6 = 11
        L_0x028a:
            byte[] r7 = setMin
            byte r13 = r7[r8]
            byte r13 = (byte) r13
            r14 = 9099(0x238b, float:1.275E-41)
            short r14 = (short) r14
            r19 = 4829(0x12dd, float:6.767E-42)
            byte r7 = r7[r19]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r7 = length(r13, r14, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02ad
            if (r10 < r4) goto L_0x02ad
            r7 = 17
            if (r10 > r7) goto L_0x02ad
        L_0x02ac:
            goto L_0x0254
        L_0x02ad:
            byte[] r7 = setMin
            byte r13 = r7[r8]
            byte r13 = (byte) r13
            byte r7 = r7[r19]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r7 = length(r13, r14, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02c9
            if (r10 < r12) goto L_0x02c9
            if (r10 > r5) goto L_0x02c9
            goto L_0x02ac
        L_0x02c9:
            byte[] r7 = setMin
            byte r12 = r7[r8]
            byte r12 = (byte) r12
            byte r7 = r7[r18]
            short r7 = (short) r7
            java.lang.String r7 = length(r12, r15, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02e9
            r7 = 42
            if (r10 < r7) goto L_0x02eb
            r12 = 43
            if (r10 > r12) goto L_0x02eb
            goto L_0x022d
        L_0x02e9:
            r7 = 42
        L_0x02eb:
            byte[] r11 = setMin
            byte r12 = r11[r8]
            byte r12 = (byte) r12
            byte r11 = r11[r19]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r14, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0315
            r11 = 49
            if (r10 < r11) goto L_0x0315
            r12 = 50
            if (r10 > r12) goto L_0x0315
        L_0x030a:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r7 = r20
            goto L_0x0200
        L_0x0315:
            throw r0
        L_0x0316:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x031e
            throw r1
        L_0x031e:
            goto L_0x0320
        L_0x031f:
            throw r0
        L_0x0320:
            goto L_0x031f
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createDeepLinkData():o.setExitListener");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:104:0x02f1, code lost:
        if (r12 <= 54) goto L_0x0317;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x0165, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:44:0x019d, code lost:
        r1.setMax(24);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.isInDownloadPath createGeneralPreferences() {
        /*
            r20 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r20
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 798(0x31e, float:1.118E-42)
            short r3 = (short) r3
            r4 = 165(0xa5, float:2.31E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0322 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0322 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0322 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0322 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0322 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0322 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0322 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0322 }
            short r10 = (short) r10     // Catch:{ all -> 0x0322 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0322 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0322 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0322 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0322 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0322 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0322 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0322 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0322 }
            short r13 = (short) r13     // Catch:{ all -> 0x0322 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0322 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0322 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0322 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0322 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0322 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0322 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0322 }
            short r14 = (short) r14     // Catch:{ all -> 0x0322 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0322 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0322 }
            r12[r7] = r13     // Catch:{ all -> 0x0322 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0322 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0322 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0322 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r12[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011c }
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r14[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0113 }
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0113 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0113 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0113 }
            short r14 = (short) r14     // Catch:{ all -> 0x0113 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r4 = 17
            r5 = 34
            r6 = 6
            r9 = 13
        L_0x012c:
            int r12 = r7 + 1
            r13 = 33
            r0 = r3[r7]     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0206 }
            r7 = 24
            r14 = 23
            r15 = 10
            r10 = 2
            r11 = 18
            switch(r0) {
                case -20: goto L_0x01ee;
                case -19: goto L_0x01ea;
                case -18: goto L_0x01e6;
                case -17: goto L_0x01d9;
                case -16: goto L_0x01c9;
                case -15: goto L_0x01c4;
                case -14: goto L_0x01c0;
                case -13: goto L_0x01a6;
                case -12: goto L_0x01a1;
                case -11: goto L_0x018c;
                case -10: goto L_0x0189;
                case -9: goto L_0x017b;
                case -8: goto L_0x016a;
                case -7: goto L_0x0161;
                case -6: goto L_0x015e;
                case -5: goto L_0x015b;
                case -4: goto L_0x0158;
                case -3: goto L_0x014f;
                case -2: goto L_0x0146;
                case -1: goto L_0x0144;
                default: goto L_0x0142;
            }     // Catch:{ all -> 0x0206 }
        L_0x0142:
            goto L_0x0203
        L_0x0144:
            r7 = 6
            goto L_0x012c
        L_0x0146:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x0206 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0206 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0206 }
            throw r0     // Catch:{ all -> 0x0206 }
        L_0x014f:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x0206 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0206 }
            o.isInDownloadPath r0 = (o.isInDownloadPath) r0     // Catch:{ all -> 0x0206 }
            return r0
        L_0x0158:
            r7 = 17
            goto L_0x012c
        L_0x015b:
            r7 = 34
            goto L_0x012c
        L_0x015e:
            r7 = 54
            goto L_0x012c
        L_0x0161:
            int r0 = setMax     // Catch:{ all -> 0x0206 }
            r1.getMin = r0     // Catch:{ all -> 0x0206 }
        L_0x0165:
            r1.setMax(r15)     // Catch:{ all -> 0x0206 }
            goto L_0x0203
        L_0x016a:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x0206 }
            r1.setMax(r11)     // Catch:{ all -> 0x0206 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0206 }
            getMin = r0     // Catch:{ all -> 0x0206 }
            goto L_0x0203
        L_0x017b:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0206 }
            if (r0 != 0) goto L_0x0203
            r0 = 32
            r7 = 32
            goto L_0x012c
        L_0x0189:
            r7 = 12
            goto L_0x012c
        L_0x018c:
            r10 = 1
            r1.getMin = r10     // Catch:{ all -> 0x0206 }
            r1.setMax(r11)     // Catch:{ all -> 0x0206 }
            r1.setMax(r14)     // Catch:{ all -> 0x0206 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0206 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0206 }
            o.PackageInstallCallback r0 = r0.generalPreferencesDataFactory     // Catch:{ all -> 0x0206 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0206 }
        L_0x019d:
            r1.setMax(r7)     // Catch:{ all -> 0x0206 }
            goto L_0x0203
        L_0x01a1:
            java.lang.String r0 = "local"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0206 }
            goto L_0x019d
        L_0x01a6:
            r1.getMin = r10     // Catch:{ all -> 0x0206 }
            r1.setMax(r11)     // Catch:{ all -> 0x0206 }
            r1.setMax(r14)     // Catch:{ all -> 0x0206 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0206 }
            o.PackageInstallCallback r0 = (o.PackageInstallCallback) r0     // Catch:{ all -> 0x0206 }
            r1.setMax(r14)     // Catch:{ all -> 0x0206 }
            java.lang.Object r10 = r1.isInside     // Catch:{ all -> 0x0206 }
            java.lang.String r10 = (java.lang.String) r10     // Catch:{ all -> 0x0206 }
            o.isInDownloadPath r0 = r0.createData((java.lang.String) r10)     // Catch:{ all -> 0x0206 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0206 }
            goto L_0x019d
        L_0x01c0:
            r7 = 39
            goto L_0x012c
        L_0x01c4:
            int r0 = getMin     // Catch:{ all -> 0x0206 }
            r1.getMin = r0     // Catch:{ all -> 0x0206 }
            goto L_0x0165
        L_0x01c9:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x0206 }
            r1.setMax(r11)     // Catch:{ all -> 0x0206 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0206 }
            setMax = r0     // Catch:{ all -> 0x0206 }
            goto L_0x0203
        L_0x01d9:
            r1.setMax(r13)     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0206 }
            if (r0 != 0) goto L_0x0203
            r0 = 53
            r7 = 53
            goto L_0x012c
        L_0x01e6:
            r7 = 15
            goto L_0x012c
        L_0x01ea:
            r7 = 13
            goto L_0x012c
        L_0x01ee:
            r1.setMax(r5)     // Catch:{ all -> 0x0206 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0206 }
            r7 = 66
            if (r0 == r7) goto L_0x0200
            r7 = 76
            if (r0 == r7) goto L_0x01fc
            goto L_0x0200
        L_0x01fc:
            r7 = 10
            goto L_0x012c
        L_0x0200:
            r7 = 2
            goto L_0x012c
        L_0x0203:
            r7 = r12
            goto L_0x012c
        L_0x0206:
            r0 = move-exception
            r7 = 3
            r10 = 35
            r11 = 55
            if (r12 < r7) goto L_0x0218
            if (r12 > r6) goto L_0x0218
            r4 = 39
            r7 = 54
            r11 = 1
        L_0x0215:
            r13 = 1
            goto L_0x0317
        L_0x0218:
            byte[] r7 = setMin
            byte r14 = r7[r8]
            byte r14 = (byte) r14
            r15 = r14 | 4944(0x1350, float:6.928E-42)
            short r15 = (short) r15
            byte r7 = r7[r9]
            int r7 = -r7
            short r7 = (short) r7
            java.lang.String r7 = length(r14, r15, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x023b
            if (r12 < r4) goto L_0x023b
            if (r12 > r13) goto L_0x023b
        L_0x0236:
            r4 = 39
        L_0x0238:
            r7 = 54
            goto L_0x0215
        L_0x023b:
            byte[] r7 = setMin
            byte r14 = r7[r8]
            byte r14 = (byte) r14
            r15 = 14230(0x3796, float:1.994E-41)
            short r15 = (short) r15
            r19 = 13952(0x3680, float:1.9551E-41)
            byte r7 = r7[r19]
            r17 = 1
            int r7 = r7 + -1
            short r7 = (short) r7
            java.lang.String r7 = length(r14, r15, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0263
            r7 = 28
            if (r12 < r7) goto L_0x0263
            r7 = 29
            if (r12 > r7) goto L_0x0263
            goto L_0x0236
        L_0x0263:
            byte[] r7 = setMin
            byte r14 = r7[r8]
            byte r14 = (byte) r14
            r4 = r14 | 976(0x3d0, float:1.368E-42)
            short r4 = (short) r4
            r18 = 54
            byte r7 = r7[r18]
            short r7 = (short) r7
            java.lang.String r4 = length(r14, r4, r7)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0285
            if (r12 < r10) goto L_0x0285
            r4 = 39
            if (r12 > r4) goto L_0x0285
            goto L_0x0238
        L_0x0285:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            r14 = r7 | 976(0x3d0, float:1.368E-42)
            short r14 = (short) r14
            r18 = 54
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02b0
            r4 = 36
            if (r12 < r4) goto L_0x02b0
            r4 = 37
            if (r12 > r4) goto L_0x02b0
        L_0x02a8:
            r4 = 39
            r7 = 54
            r11 = 33
            goto L_0x0215
        L_0x02b0:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            byte r4 = r4[r11]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02d3
            r4 = 37
            if (r12 < r4) goto L_0x02d3
            r4 = 38
            if (r12 > r4) goto L_0x02d3
            goto L_0x02a8
        L_0x02d3:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            byte r4 = r4[r19]
            r13 = 1
            int r4 = r4 - r13
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02f4
            r4 = 39
            if (r12 < r4) goto L_0x02f6
            r7 = 54
            if (r12 > r7) goto L_0x02f6
            goto L_0x0317
        L_0x02f4:
            r4 = 39
        L_0x02f6:
            byte[] r7 = setMin
            byte r7 = r7[r8]
            byte r7 = (byte) r7
            r14 = 15410(0x3c32, float:2.1594E-41)
            short r14 = (short) r14
            r15 = r14 & 239(0xef, float:3.35E-43)
            short r15 = (short) r15
            java.lang.String r7 = length(r7, r14, r15)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0321
            r7 = 48
            if (r12 < r7) goto L_0x0321
            r7 = 54
            if (r12 > r7) goto L_0x0321
        L_0x0317:
            r1.IsOverlapping = r0
            r1.setMax(r10)
            r7 = r11
            r4 = 17
            goto L_0x012c
        L_0x0321:
            throw r0
        L_0x0322:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x032a
            throw r1
        L_0x032a:
            goto L_0x032c
        L_0x032b:
            throw r0
        L_0x032c:
            goto L_0x032b
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createGeneralPreferences():o.isInDownloadPath");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x0158, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x017f, code lost:
        r1.setMax(24);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.handleCollectedApi createPushNotification() {
        /*
            r21 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r21
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 2370(0x942, float:3.321E-42)
            short r3 = (short) r3
            r4 = 261(0x105, float:3.66E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0309 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0309 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0309 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0309 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0309 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0309 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0309 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0309 }
            short r10 = (short) r10     // Catch:{ all -> 0x0309 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0309 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0309 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0309 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0309 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0309 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0309 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0309 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0309 }
            short r13 = (short) r13     // Catch:{ all -> 0x0309 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0309 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0309 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0309 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0309 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0309 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0309 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0309 }
            short r14 = (short) r14     // Catch:{ all -> 0x0309 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0309 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0309 }
            r12[r7] = r13     // Catch:{ all -> 0x0309 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0309 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0309 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0309 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0123
            r10 = r0[r5]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x011a }
            r13[r7] = r10     // Catch:{ all -> 0x011a }
            byte[] r10 = setMin     // Catch:{ all -> 0x011a }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011a }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011a }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x011a }
            short r15 = (short) r15     // Catch:{ all -> 0x011a }
            java.lang.String r10 = length(r10, r14, r15)     // Catch:{ all -> 0x011a }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            byte r15 = r15[r6]     // Catch:{ all -> 0x011a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011a }
            r6 = r15 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011a }
            byte[] r18 = setMin     // Catch:{ all -> 0x011a }
            r19 = 52
            byte r12 = r18[r19]     // Catch:{ all -> 0x011a }
            short r12 = (short) r12     // Catch:{ all -> 0x011a }
            java.lang.String r6 = length(r15, r6, r12)     // Catch:{ all -> 0x011a }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011a }
            byte[] r18 = setMin     // Catch:{ all -> 0x011a }
            byte r4 = r18[r11]     // Catch:{ all -> 0x011a }
            short r4 = (short) r4     // Catch:{ all -> 0x011a }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011a }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011a }
            r12[r7] = r4     // Catch:{ all -> 0x011a }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x011a }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r13)     // Catch:{ all -> 0x011a }
            byte[] r10 = setMin     // Catch:{ all -> 0x0111 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0111 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0111 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0111 }
            byte r12 = r12[r16]     // Catch:{ all -> 0x0111 }
            short r12 = (short) r12     // Catch:{ all -> 0x0111 }
            java.lang.String r10 = length(r10, r14, r12)     // Catch:{ all -> 0x0111 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0111 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0111 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0111 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0111 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0111 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0111 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0111 }
            short r14 = (short) r14     // Catch:{ all -> 0x0111 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0111 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0111 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0111 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0111 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0111 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0111:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0119
            throw r1
        L_0x0119:
            throw r0
        L_0x011a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0122
            throw r1
        L_0x0122:
            throw r0
        L_0x0123:
            r15 = 11
            r4 = 20
            r5 = 6
            r6 = 51
            r9 = 16
            r10 = 10
            r11 = 18
        L_0x0130:
            int r12 = r7 + 1
            r13 = 2
            r0 = r3[r7]     // Catch:{ all -> 0x01ff }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01ff }
            r7 = 33
            r15 = 24
            r14 = 23
            switch(r0) {
                case -19: goto L_0x01f7;
                case -18: goto L_0x01f4;
                case -17: goto L_0x01e8;
                case -16: goto L_0x01e5;
                case -15: goto L_0x01d9;
                case -14: goto L_0x01c9;
                case -13: goto L_0x01c4;
                case -12: goto L_0x01c1;
                case -11: goto L_0x01b8;
                case -10: goto L_0x01a6;
                case -9: goto L_0x01a3;
                case -8: goto L_0x0189;
                case -7: goto L_0x0184;
                case -6: goto L_0x016e;
                case -5: goto L_0x016a;
                case -4: goto L_0x0166;
                case -3: goto L_0x015d;
                case -2: goto L_0x0147;
                case -1: goto L_0x0144;
                default: goto L_0x0142;
            }     // Catch:{ all -> 0x01ff }
        L_0x0142:
            goto L_0x01fa
        L_0x0144:
            r7 = 6
            goto L_0x01fb
        L_0x0147:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01ff }
            r1.setMax(r11)     // Catch:{ all -> 0x01ff }
            r1.setMax(r14)     // Catch:{ all -> 0x01ff }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ff }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01ff }
            r1.getMin = r0     // Catch:{ all -> 0x01ff }
        L_0x0158:
            r1.setMax(r10)     // Catch:{ all -> 0x01ff }
            goto L_0x01fa
        L_0x015d:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01ff }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ff }
            o.handleCollectedApi r0 = (o.handleCollectedApi) r0     // Catch:{ all -> 0x01ff }
            return r0
        L_0x0166:
            r7 = 20
            goto L_0x01fb
        L_0x016a:
            r7 = 11
            goto L_0x01fb
        L_0x016e:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01ff }
            r1.setMax(r11)     // Catch:{ all -> 0x01ff }
            r1.setMax(r14)     // Catch:{ all -> 0x01ff }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ff }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x01ff }
            o.CommonExitPerform$CollectJsApiHandler r0 = r0.pushNotificationEntityDataFactory     // Catch:{ all -> 0x01ff }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ff }
        L_0x017f:
            r1.setMax(r15)     // Catch:{ all -> 0x01ff }
            goto L_0x01fa
        L_0x0184:
            java.lang.String r0 = "network"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ff }
            goto L_0x017f
        L_0x0189:
            r1.getMin = r13     // Catch:{ all -> 0x01ff }
            r1.setMax(r11)     // Catch:{ all -> 0x01ff }
            r1.setMax(r14)     // Catch:{ all -> 0x01ff }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ff }
            o.CommonExitPerform$CollectJsApiHandler r0 = (o.CommonExitPerform.CollectJsApiHandler) r0     // Catch:{ all -> 0x01ff }
            r1.setMax(r14)     // Catch:{ all -> 0x01ff }
            java.lang.Object r7 = r1.isInside     // Catch:{ all -> 0x01ff }
            java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x01ff }
            o.handleCollectedApi r0 = r0.createData((java.lang.String) r7)     // Catch:{ all -> 0x01ff }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01ff }
            goto L_0x017f
        L_0x01a3:
            r7 = 51
            goto L_0x01fb
        L_0x01a6:
            r0 = 34
            r1.setMax(r0)     // Catch:{ all -> 0x01ff }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ff }
            r7 = 82
            if (r0 == r7) goto L_0x01b6
            r7 = 86
            r7 = 75
            goto L_0x01fb
        L_0x01b6:
            r7 = 1
            goto L_0x01fb
        L_0x01b8:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01ff }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ff }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01ff }
            throw r0     // Catch:{ all -> 0x01ff }
        L_0x01c1:
            r7 = 16
            goto L_0x01fb
        L_0x01c4:
            int r0 = getMin     // Catch:{ all -> 0x01ff }
            r1.getMin = r0     // Catch:{ all -> 0x01ff }
            goto L_0x0158
        L_0x01c9:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01ff }
            r1.setMax(r11)     // Catch:{ all -> 0x01ff }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01ff }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ff }
            setMax = r0     // Catch:{ all -> 0x01ff }
            goto L_0x01fa
        L_0x01d9:
            r1.setMax(r7)     // Catch:{ all -> 0x01ff }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ff }
            if (r0 != 0) goto L_0x01fa
            r0 = 50
            r7 = 50
            goto L_0x01fb
        L_0x01e5:
            r7 = 10
            goto L_0x01fb
        L_0x01e8:
            r1.setMax(r7)     // Catch:{ all -> 0x01ff }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ff }
            if (r0 != 0) goto L_0x01fa
            r0 = 74
            r7 = 74
            goto L_0x01fb
        L_0x01f4:
            r7 = 77
            goto L_0x01fb
        L_0x01f7:
            r7 = 18
            goto L_0x01fb
        L_0x01fa:
            r7 = r12
        L_0x01fb:
            r15 = 11
            goto L_0x0130
        L_0x01ff:
            r0 = move-exception
            r7 = 17
            if (r12 < r13) goto L_0x020b
            if (r12 > r5) goto L_0x020b
            r7 = 80
        L_0x0208:
            r15 = 1
            goto L_0x02fe
        L_0x020b:
            byte[] r13 = setMin
            byte r14 = r13[r8]
            byte r14 = (byte) r14
            r15 = 15376(0x3c10, float:2.1546E-41)
            short r15 = (short) r15
            r17 = 13952(0x3680, float:1.9551E-41)
            byte r13 = r13[r17]
            short r13 = (short) r13
            java.lang.String r13 = length(r14, r15, r13)
            java.lang.Class r13 = java.lang.Class.forName(r13)
            boolean r13 = r13.isInstance(r0)
            r14 = 13
            if (r13 == 0) goto L_0x0231
            r13 = 12
            if (r12 < r13) goto L_0x0231
            if (r12 > r14) goto L_0x0231
            r7 = 79
            goto L_0x0208
        L_0x0231:
            byte[] r13 = setMin
            byte r15 = r13[r8]
            byte r15 = (byte) r15
            r5 = 9099(0x238b, float:1.275E-41)
            short r5 = (short) r5
            r20 = 4829(0x12dd, float:6.767E-42)
            byte r13 = r13[r20]
            int r13 = -r13
            short r13 = (short) r13
            java.lang.String r5 = length(r15, r5, r13)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0252
            if (r12 < r14) goto L_0x0252
            if (r12 > r9) goto L_0x0252
        L_0x0251:
            goto L_0x0208
        L_0x0252:
            byte[] r5 = setMin
            byte r13 = r5[r8]
            byte r13 = (byte) r13
            r14 = 1451(0x5ab, float:2.033E-42)
            short r14 = (short) r14
            byte r5 = r5[r17]
            short r5 = (short) r5
            java.lang.String r5 = length(r13, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0272
            r5 = 14
            if (r12 < r5) goto L_0x0272
            if (r12 > r9) goto L_0x0272
            goto L_0x0251
        L_0x0272:
            byte[] r5 = setMin
            byte r13 = r5[r8]
            byte r13 = (byte) r13
            r14 = 14230(0x3796, float:1.994E-41)
            short r14 = (short) r14
            byte r5 = r5[r17]
            r15 = 1
            int r5 = r5 - r15
            short r5 = (short) r5
            java.lang.String r5 = length(r13, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0294
            if (r12 < r4) goto L_0x0294
            r5 = 21
            if (r12 > r5) goto L_0x0294
            goto L_0x02fe
        L_0x0294:
            byte[] r5 = setMin
            byte r5 = r5[r8]
            byte r5 = (byte) r5
            r13 = 15410(0x3c32, float:2.1594E-41)
            short r13 = (short) r13
            r14 = r13 & 239(0xef, float:3.35E-43)
            short r14 = (short) r14
            java.lang.String r5 = length(r5, r13, r14)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02b4
            r5 = 45
            if (r12 < r5) goto L_0x02b4
            if (r12 > r6) goto L_0x02b4
            goto L_0x02fe
        L_0x02b4:
            byte[] r5 = setMin
            byte r13 = r5[r8]
            byte r13 = (byte) r13
            r14 = r13 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            r17 = 9575(0x2567, float:1.3417E-41)
            byte r5 = r5[r17]
            short r5 = (short) r5
            java.lang.String r5 = length(r13, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02d6
            if (r12 < r6) goto L_0x02d6
            r5 = 75
            if (r12 > r5) goto L_0x02d6
            goto L_0x02fe
        L_0x02d6:
            byte[] r5 = setMin
            byte r7 = r5[r8]
            byte r7 = (byte) r7
            r13 = 963(0x3c3, float:1.35E-42)
            short r13 = (short) r13
            r14 = 55
            byte r5 = r5[r14]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r7, r13, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0308
            r5 = 70
            if (r12 < r5) goto L_0x0308
            r5 = 75
            if (r12 > r5) goto L_0x0308
            r5 = 79
            r7 = 79
        L_0x02fe:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r5 = 6
            goto L_0x01fb
        L_0x0308:
            throw r0
        L_0x0309:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0311
            throw r1
        L_0x0311:
            goto L_0x0313
        L_0x0312:
            throw r0
        L_0x0313:
            goto L_0x0312
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createPushNotification():o.handleCollectedApi");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x0157, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x01d4, code lost:
        r7 = r6;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.ConnectionLog.AnonymousClass1 createRegistrationData() {
        /*
            r20 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r20
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 7603(0x1db3, float:1.0654E-41)
            short r3 = (short) r3
            r4 = 159(0x9f, float:2.23E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x02ef }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x02ef }
            byte[] r3 = setMin     // Catch:{ all -> 0x02ef }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x02ef }
            byte r3 = (byte) r3     // Catch:{ all -> 0x02ef }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02ef }
            byte[] r10 = setMin     // Catch:{ all -> 0x02ef }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x02ef }
            short r10 = (short) r10     // Catch:{ all -> 0x02ef }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x02ef }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x02ef }
            byte[] r10 = setMin     // Catch:{ all -> 0x02ef }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x02ef }
            byte r10 = (byte) r10     // Catch:{ all -> 0x02ef }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x02ef }
            byte[] r13 = setMin     // Catch:{ all -> 0x02ef }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x02ef }
            short r13 = (short) r13     // Catch:{ all -> 0x02ef }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x02ef }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x02ef }
            byte[] r13 = setMin     // Catch:{ all -> 0x02ef }
            byte r13 = r13[r8]     // Catch:{ all -> 0x02ef }
            byte r13 = (byte) r13     // Catch:{ all -> 0x02ef }
            byte[] r14 = setMin     // Catch:{ all -> 0x02ef }
            byte r14 = r14[r11]     // Catch:{ all -> 0x02ef }
            short r14 = (short) r14     // Catch:{ all -> 0x02ef }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x02ef }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x02ef }
            r12[r7] = r13     // Catch:{ all -> 0x02ef }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x02ef }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x02ef }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02ef }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r12[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011c }
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r14[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0113 }
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0113 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0113 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0113 }
            short r14 = (short) r14     // Catch:{ all -> 0x0113 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r4 = 39
            r5 = 15
        L_0x0129:
            int r6 = r7 + 1
            r9 = 2
            r10 = 34
            r11 = 10
            r12 = 7
            r0 = r3[r7]     // Catch:{ all -> 0x01d7 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01d7 }
            r7 = 24
            r13 = 23
            r14 = 18
            switch(r0) {
                case -15: goto L_0x01c9;
                case -14: goto L_0x01c5;
                case -13: goto L_0x01c1;
                case -12: goto L_0x01bd;
                case -11: goto L_0x01b9;
                case -10: goto L_0x01aa;
                case -9: goto L_0x019a;
                case -8: goto L_0x0192;
                case -7: goto L_0x0186;
                case -6: goto L_0x017d;
                case -5: goto L_0x017a;
                case -4: goto L_0x0160;
                case -3: goto L_0x015b;
                case -2: goto L_0x0146;
                case -1: goto L_0x0143;
                default: goto L_0x0140;
            }     // Catch:{ all -> 0x01d7 }
        L_0x0140:
            r7 = 1
            goto L_0x01d4
        L_0x0143:
            r7 = 41
            goto L_0x0129
        L_0x0146:
            r15 = 1
            r1.getMin = r15     // Catch:{ all -> 0x01d7 }
            r1.setMax(r14)     // Catch:{ all -> 0x01d7 }
            r1.setMax(r13)     // Catch:{ all -> 0x01d7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01d7 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x01d7 }
            o.setParentId r0 = r0.registrationEntityDataFactory     // Catch:{ all -> 0x01d7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01d7 }
        L_0x0157:
            r1.setMax(r7)     // Catch:{ all -> 0x01d7 }
            goto L_0x0140
        L_0x015b:
            java.lang.String r0 = "network"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01d7 }
            goto L_0x0157
        L_0x0160:
            r1.getMin = r9     // Catch:{ all -> 0x01d7 }
            r1.setMax(r14)     // Catch:{ all -> 0x01d7 }
            r1.setMax(r13)     // Catch:{ all -> 0x01d7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01d7 }
            o.setParentId r0 = (o.setParentId) r0     // Catch:{ all -> 0x01d7 }
            r1.setMax(r13)     // Catch:{ all -> 0x01d7 }
            java.lang.Object r13 = r1.isInside     // Catch:{ all -> 0x01d7 }
            java.lang.String r13 = (java.lang.String) r13     // Catch:{ all -> 0x01d7 }
            o.ConnectionLog$1 r0 = r0.createData((java.lang.String) r13)     // Catch:{ all -> 0x01d7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01d7 }
            goto L_0x0157
        L_0x017a:
            r7 = 46
            goto L_0x0129
        L_0x017d:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01d2 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01d7 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01d7 }
            throw r0     // Catch:{ all -> 0x01d7 }
        L_0x0186:
            r1.setMax(r10)     // Catch:{ all -> 0x01d7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01d7 }
            if (r0 == 0) goto L_0x0190
            r6 = 1
            r7 = 7
            goto L_0x0129
        L_0x0190:
            r7 = 1
            goto L_0x0129
        L_0x0192:
            int r0 = setMax     // Catch:{ all -> 0x01d7 }
            r1.getMin = r0     // Catch:{ all -> 0x01d7 }
            r1.setMax(r11)     // Catch:{ all -> 0x01d7 }
            goto L_0x0140
        L_0x019a:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01d2 }
            r1.setMax(r14)     // Catch:{ all -> 0x01d7 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01d7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01d7 }
            getMin = r0     // Catch:{ all -> 0x01d7 }
            goto L_0x0140
        L_0x01aa:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x01d7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01d7 }
            if (r0 != 0) goto L_0x01d4
            r0 = 38
            r7 = 38
            goto L_0x0129
        L_0x01b9:
            r7 = 39
            goto L_0x0129
        L_0x01bd:
            r7 = 48
            goto L_0x0129
        L_0x01c1:
            r7 = 14
            goto L_0x0129
        L_0x01c5:
            r7 = 15
            goto L_0x0129
        L_0x01c9:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01d2 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01d2 }
            o.ConnectionLog$1 r0 = (o.ConnectionLog.AnonymousClass1) r0     // Catch:{ all -> 0x01d2 }
            return r0
        L_0x01d2:
            r0 = move-exception
            goto L_0x01d9
        L_0x01d4:
            r7 = r6
            goto L_0x0129
        L_0x01d7:
            r0 = move-exception
            r7 = 1
        L_0x01d9:
            r13 = 13
            r14 = 5
            r7 = 12
            if (r6 < r14) goto L_0x01e6
            if (r6 > r12) goto L_0x01e6
            r7 = 13
            goto L_0x02e5
        L_0x01e6:
            byte[] r12 = setMin
            byte r15 = r12[r8]
            byte r15 = (byte) r15
            r10 = 9099(0x238b, float:1.275E-41)
            short r10 = (short) r10
            r18 = 4829(0x12dd, float:6.767E-42)
            byte r12 = r12[r18]
            int r12 = -r12
            short r12 = (short) r12
            java.lang.String r12 = length(r15, r10, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x020b
            if (r6 < r9) goto L_0x020b
            r9 = 3
            if (r6 > r9) goto L_0x020b
        L_0x0207:
            r7 = 45
            goto L_0x02e5
        L_0x020b:
            byte[] r9 = setMin
            byte r12 = r9[r8]
            byte r12 = (byte) r12
            r15 = r12 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r19 = 1197(0x4ad, float:1.677E-42)
            byte r9 = r9[r19]
            short r9 = (short) r9
            java.lang.String r9 = length(r12, r15, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x022d
            r9 = 3
            if (r6 < r9) goto L_0x022d
            r9 = 4
            if (r6 > r9) goto L_0x022d
            goto L_0x0207
        L_0x022d:
            byte[] r9 = setMin
            byte r12 = r9[r8]
            byte r12 = (byte) r12
            byte r9 = r9[r18]
            int r9 = -r9
            short r9 = (short) r9
            java.lang.String r9 = length(r12, r10, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x024a
            r9 = 4
            if (r6 < r9) goto L_0x024a
            if (r6 > r14) goto L_0x024a
            goto L_0x0207
        L_0x024a:
            byte[] r9 = setMin
            byte r10 = r9[r8]
            byte r10 = (byte) r10
            r12 = r10 | 4944(0x1350, float:6.928E-42)
            short r12 = (short) r12
            byte r9 = r9[r13]
            int r9 = -r9
            short r9 = (short) r9
            java.lang.String r9 = length(r10, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x026e
            r9 = 8
            if (r6 < r9) goto L_0x026e
            r9 = 9
            if (r6 > r9) goto L_0x026e
            goto L_0x02e5
        L_0x026e:
            byte[] r9 = setMin
            byte r10 = r9[r8]
            byte r10 = (byte) r10
            r12 = r10 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            byte r9 = r9[r19]
            short r9 = (short) r9
            java.lang.String r9 = length(r10, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x028e
            r9 = 9
            if (r6 < r9) goto L_0x028e
            if (r6 > r11) goto L_0x028e
            goto L_0x02e5
        L_0x028e:
            byte[] r9 = setMin
            byte r9 = r9[r8]
            byte r9 = (byte) r9
            r10 = 15410(0x3c32, float:2.1594E-41)
            short r10 = (short) r10
            r12 = r10 & 239(0xef, float:3.35E-43)
            short r12 = (short) r12
            java.lang.String r9 = length(r9, r10, r12)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02ac
            if (r6 < r11) goto L_0x02ac
            if (r6 > r7) goto L_0x02ac
            goto L_0x02e5
        L_0x02ac:
            byte[] r9 = setMin
            byte r9 = r9[r8]
            byte r9 = (byte) r9
            java.lang.String r9 = length(r9, r10, r12)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02c4
            if (r6 < r5) goto L_0x02c4
            if (r6 > r4) goto L_0x02c4
            goto L_0x02e5
        L_0x02c4:
            byte[] r9 = setMin
            byte r10 = r9[r8]
            byte r10 = (byte) r10
            r11 = r10 | 5841(0x16d1, float:8.185E-42)
            short r11 = (short) r11
            byte r9 = r9[r19]
            short r9 = (short) r9
            java.lang.String r9 = length(r10, r11, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02ee
            r9 = 34
            if (r6 < r9) goto L_0x02ee
            r9 = 35
            if (r6 > r9) goto L_0x02ee
        L_0x02e5:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x0129
        L_0x02ee:
            throw r0
        L_0x02ef:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x02f7
            throw r1
        L_0x02f7:
            goto L_0x02f9
        L_0x02f8:
            throw r0
        L_0x02f9:
            goto L_0x02f8
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createRegistrationData():o.ConnectionLog$1");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.access$2400 createSecurityData() {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r1.<init>(r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = r0 | 14128(0x3730, float:1.9798E-41)
            short r3 = (short) r3
            r4 = 163(0xa3, float:2.28E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x02fe }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x02fe }
            byte[] r3 = setMin     // Catch:{ all -> 0x02fe }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x02fe }
            byte r3 = (byte) r3     // Catch:{ all -> 0x02fe }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x02fe }
            byte[] r10 = setMin     // Catch:{ all -> 0x02fe }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x02fe }
            short r10 = (short) r10     // Catch:{ all -> 0x02fe }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x02fe }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x02fe }
            byte[] r10 = setMin     // Catch:{ all -> 0x02fe }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x02fe }
            byte r10 = (byte) r10     // Catch:{ all -> 0x02fe }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x02fe }
            byte[] r13 = setMin     // Catch:{ all -> 0x02fe }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x02fe }
            short r13 = (short) r13     // Catch:{ all -> 0x02fe }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x02fe }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x02fe }
            byte[] r13 = setMin     // Catch:{ all -> 0x02fe }
            byte r13 = r13[r8]     // Catch:{ all -> 0x02fe }
            byte r13 = (byte) r13     // Catch:{ all -> 0x02fe }
            byte[] r14 = setMin     // Catch:{ all -> 0x02fe }
            byte r14 = r14[r11]     // Catch:{ all -> 0x02fe }
            short r14 = (short) r14     // Catch:{ all -> 0x02fe }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x02fe }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x02fe }
            r12[r7] = r13     // Catch:{ all -> 0x02fe }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x02fe }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x02fe }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02fe }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0081:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r12[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r6 = r14 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r15 = r16[r17]     // Catch:{ all -> 0x011c }
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r14, r6, r15)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r14[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0113 }
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0113 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0113 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0113 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0113 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0113 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0113 }
            short r14 = (short) r14     // Catch:{ all -> 0x0113 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r4 = 12
            r5 = 37
            r6 = 45
            r9 = 9
        L_0x012d:
            int r10 = r7 + 1
            r0 = r3[r7]     // Catch:{ all -> 0x01dd }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01dd }
            r7 = 24
            r11 = 23
            r12 = 18
            r13 = 2
            switch(r0) {
                case -15: goto L_0x01d6;
                case -14: goto L_0x01cd;
                case -13: goto L_0x01b9;
                case -12: goto L_0x01b5;
                case -11: goto L_0x01b1;
                case -10: goto L_0x01a2;
                case -9: goto L_0x0192;
                case -8: goto L_0x0188;
                case -7: goto L_0x0185;
                case -6: goto L_0x0182;
                case -5: goto L_0x0168;
                case -4: goto L_0x0163;
                case -3: goto L_0x014d;
                case -2: goto L_0x0144;
                case -1: goto L_0x0141;
                default: goto L_0x013f;
            }     // Catch:{ all -> 0x01dd }
        L_0x013f:
            goto L_0x01da
        L_0x0141:
            r7 = 9
            goto L_0x012d
        L_0x0144:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01dd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01dd }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01dd }
            throw r0     // Catch:{ all -> 0x01dd }
        L_0x014d:
            r13 = 1
            r1.getMin = r13     // Catch:{ all -> 0x01dd }
            r1.setMax(r12)     // Catch:{ all -> 0x01dd }
            r1.setMax(r11)     // Catch:{ all -> 0x01dd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01dd }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x01dd }
            o.access$2300 r0 = r0.securityEntityDataFactory     // Catch:{ all -> 0x01dd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01dd }
        L_0x015e:
            r1.setMax(r7)     // Catch:{ all -> 0x01dd }
            goto L_0x01da
        L_0x0163:
            java.lang.String r0 = "network"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01dd }
            goto L_0x015e
        L_0x0168:
            r1.getMin = r13     // Catch:{ all -> 0x01dd }
            r1.setMax(r12)     // Catch:{ all -> 0x01dd }
            r1.setMax(r11)     // Catch:{ all -> 0x01dd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01dd }
            o.access$2300 r0 = (o.access$2300) r0     // Catch:{ all -> 0x01dd }
            r1.setMax(r11)     // Catch:{ all -> 0x01dd }
            java.lang.Object r11 = r1.isInside     // Catch:{ all -> 0x01dd }
            java.lang.String r11 = (java.lang.String) r11     // Catch:{ all -> 0x01dd }
            o.access$2400 r0 = r0.createData((java.lang.String) r11)     // Catch:{ all -> 0x01dd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01dd }
            goto L_0x015e
        L_0x0182:
            r7 = 38
            goto L_0x012d
        L_0x0185:
            r7 = 12
            goto L_0x012d
        L_0x0188:
            int r0 = setMax     // Catch:{ all -> 0x01dd }
            r1.getMin = r0     // Catch:{ all -> 0x01dd }
            r0 = 10
            r1.setMax(r0)     // Catch:{ all -> 0x01dd }
            goto L_0x01da
        L_0x0192:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x01dd }
            r1.setMax(r12)     // Catch:{ all -> 0x01dd }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01dd }
            int r0 = r1.setMin     // Catch:{ all -> 0x01dd }
            getMin = r0     // Catch:{ all -> 0x01dd }
            goto L_0x01da
        L_0x01a2:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x01dd }
            int r0 = r1.setMin     // Catch:{ all -> 0x01dd }
            if (r0 != 0) goto L_0x01da
            r0 = 36
            r7 = 36
            goto L_0x012d
        L_0x01b1:
            r7 = 45
            goto L_0x012d
        L_0x01b5:
            r7 = 49
            goto L_0x012d
        L_0x01b9:
            r0 = 34
            r1.setMax(r0)     // Catch:{ all -> 0x01dd }
            int r0 = r1.setMin     // Catch:{ all -> 0x01dd }
            r7 = 1
            if (r0 == 0) goto L_0x01ca
            if (r0 == r7) goto L_0x01c6
            goto L_0x01ca
        L_0x01c6:
            r0 = 40
            r13 = 40
        L_0x01ca:
            r7 = r13
            goto L_0x012d
        L_0x01cd:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x01dd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01dd }
            o.access$2400 r0 = (o.access$2400) r0     // Catch:{ all -> 0x01dd }
            return r0
        L_0x01d6:
            r7 = 37
            goto L_0x012d
        L_0x01da:
            r7 = r10
            goto L_0x012d
        L_0x01dd:
            r0 = move-exception
            r7 = 6
            r11 = 48
            if (r10 < r7) goto L_0x01e9
            if (r10 > r9) goto L_0x01e9
            r7 = 1
        L_0x01e6:
            r14 = 1
            goto L_0x02f4
        L_0x01e9:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r14 = r13 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            r15 = 1197(0x4ad, float:1.677E-42)
            byte r12 = r12[r15]
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r14, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x020c
            r12 = 3
            if (r10 < r12) goto L_0x020c
            if (r10 > r9) goto L_0x020c
        L_0x0209:
            r7 = 48
            goto L_0x01e6
        L_0x020c:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r14 = r13 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            r16 = 9575(0x2567, float:1.3417E-41)
            byte r12 = r12[r16]
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r14, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x022d
            r12 = 4
            if (r10 < r12) goto L_0x022d
            if (r10 > r9) goto L_0x022d
            goto L_0x0209
        L_0x022d:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r14 = r13 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            byte r12 = r12[r16]
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r14, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x024c
            r12 = 5
            if (r10 < r12) goto L_0x024c
            if (r10 > r7) goto L_0x024c
            goto L_0x0209
        L_0x024c:
            byte[] r7 = setMin
            byte r12 = r7[r8]
            byte r12 = (byte) r12
            r13 = 15376(0x3c10, float:2.1546E-41)
            short r13 = (short) r13
            r14 = 13952(0x3680, float:1.9551E-41)
            byte r7 = r7[r14]
            short r7 = (short) r7
            java.lang.String r7 = length(r12, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x026c
            if (r10 < r4) goto L_0x026c
            if (r10 > r5) goto L_0x026c
            goto L_0x0209
        L_0x026c:
            byte[] r7 = setMin
            byte r12 = r7[r8]
            byte r12 = (byte) r12
            r13 = r12 | 5841(0x16d1, float:8.185E-42)
            short r13 = (short) r13
            byte r7 = r7[r15]
            short r7 = (short) r7
            java.lang.String r7 = length(r12, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x028f
            r7 = 32
            if (r10 < r7) goto L_0x028f
            r7 = 33
            if (r10 > r7) goto L_0x028f
            goto L_0x0209
        L_0x028f:
            byte[] r7 = setMin
            byte r12 = r7[r8]
            byte r12 = (byte) r12
            r13 = 14230(0x3796, float:1.994E-41)
            short r13 = (short) r13
            byte r7 = r7[r14]
            r14 = 1
            int r7 = r7 - r14
            short r7 = (short) r7
            java.lang.String r7 = length(r12, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02b3
            r7 = 41
            if (r10 < r7) goto L_0x02b3
            if (r10 > r6) goto L_0x02b3
        L_0x02b0:
            r7 = 48
            goto L_0x02f4
        L_0x02b3:
            byte[] r7 = setMin
            byte r12 = r7[r8]
            byte r12 = (byte) r12
            r13 = r12 | 2097(0x831, float:2.939E-42)
            short r13 = (short) r13
            byte r7 = r7[r16]
            short r7 = (short) r7
            java.lang.String r7 = length(r12, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02d3
            r7 = 42
            if (r10 < r7) goto L_0x02d3
            if (r10 > r6) goto L_0x02d3
            goto L_0x02b0
        L_0x02d3:
            byte[] r7 = setMin
            byte r7 = r7[r8]
            byte r7 = (byte) r7
            r11 = 15410(0x3c32, float:2.1594E-41)
            short r11 = (short) r11
            r12 = r11 & 239(0xef, float:3.35E-43)
            short r12 = (short) r12
            java.lang.String r7 = length(r7, r11, r12)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x02fd
            r7 = 43
            if (r10 < r7) goto L_0x02fd
            if (r10 > r6) goto L_0x02fd
            r7 = 47
        L_0x02f4:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012d
        L_0x02fd:
            throw r0
        L_0x02fe:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0306
            throw r1
        L_0x0306:
            goto L_0x0308
        L_0x0307:
            throw r0
        L_0x0308:
            goto L_0x0307
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.createSecurityData():o.access$2400");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:139:0x042c, code lost:
        if (r14 <= 129) goto L_0x02f1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x017f, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x0209, code lost:
        r1.setMax(10);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.TitleBarRightButtonView.AnonymousClass1<java.lang.Boolean> doUploadAvatarFirst(java.lang.String r23, java.lang.String r24, java.lang.String r25, java.io.File r26, java.lang.String r27, java.lang.String r28) {
        /*
            r22 = this;
            o.getGroupId r9 = new o.getGroupId
            r1 = r9
            r2 = r22
            r3 = r23
            r4 = r24
            r5 = r25
            r6 = r26
            r7 = r27
            r8 = r28
            r1.<init>(r2, r3, r4, r5, r6, r7, r8)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 14038(0x36d6, float:1.9671E-41)
            short r1 = (short) r1
            r2 = 433(0x1b1, float:6.07E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x0458 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x0458 }
            byte[] r1 = setMin     // Catch:{ all -> 0x0458 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x0458 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x0458 }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0458 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0458 }
            r10 = 58
            byte r8 = r8[r10]     // Catch:{ all -> 0x0458 }
            short r8 = (short) r8     // Catch:{ all -> 0x0458 }
            java.lang.String r1 = length(r1, r7, r8)     // Catch:{ all -> 0x0458 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0458 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0458 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r8 = r8[r11]     // Catch:{ all -> 0x0458 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0458 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0458 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0458 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0458 }
            short r12 = (short) r12     // Catch:{ all -> 0x0458 }
            java.lang.String r8 = length(r8, r11, r12)     // Catch:{ all -> 0x0458 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0458 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0458 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0458 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0458 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0458 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0458 }
            short r13 = (short) r13     // Catch:{ all -> 0x0458 }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x0458 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0458 }
            r11[r5] = r12     // Catch:{ all -> 0x0458 }
            java.lang.reflect.Method r1 = r1.getMethod(r8, r11)     // Catch:{ all -> 0x0458 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x0458 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0458 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008e:
            int r8 = r0.length
            if (r3 >= r8) goto L_0x0131
            r8 = r0[r3]
            java.lang.Object[] r11 = new java.lang.Object[r2]     // Catch:{ all -> 0x0128 }
            r11[r5] = r8     // Catch:{ all -> 0x0128 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0128 }
            byte r8 = r8[r6]     // Catch:{ all -> 0x0128 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0128 }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0128 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0128 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0128 }
            short r13 = (short) r13     // Catch:{ all -> 0x0128 }
            java.lang.String r8 = length(r8, r12, r13)     // Catch:{ all -> 0x0128 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0128 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0128 }
            byte r13 = r13[r4]     // Catch:{ all -> 0x0128 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0128 }
            r14 = r13 | 1470(0x5be, float:2.06E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0128 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0128 }
            r16 = 52
            byte r15 = r15[r16]     // Catch:{ all -> 0x0128 }
            short r15 = (short) r15     // Catch:{ all -> 0x0128 }
            java.lang.String r13 = length(r13, r14, r15)     // Catch:{ all -> 0x0128 }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x0128 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0128 }
            byte r15 = r15[r6]     // Catch:{ all -> 0x0128 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0128 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0128 }
            byte r4 = r16[r10]     // Catch:{ all -> 0x0128 }
            short r4 = (short) r4     // Catch:{ all -> 0x0128 }
            java.lang.String r4 = length(r15, r7, r4)     // Catch:{ all -> 0x0128 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0128 }
            r14[r5] = r4     // Catch:{ all -> 0x0128 }
            java.lang.reflect.Method r4 = r8.getMethod(r13, r14)     // Catch:{ all -> 0x0128 }
            r8 = 0
            java.lang.Object r4 = r4.invoke(r8, r11)     // Catch:{ all -> 0x0128 }
            byte[] r11 = setMin     // Catch:{ all -> 0x011f }
            byte r11 = r11[r6]     // Catch:{ all -> 0x011f }
            byte r11 = (byte) r11     // Catch:{ all -> 0x011f }
            byte[] r13 = setMin     // Catch:{ all -> 0x011f }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011f }
            short r13 = (short) r13     // Catch:{ all -> 0x011f }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x011f }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x011f }
            byte[] r12 = setMin     // Catch:{ all -> 0x011f }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x011f }
            byte r12 = (byte) r12     // Catch:{ all -> 0x011f }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x011f }
            byte[] r14 = setMin     // Catch:{ all -> 0x011f }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x011f }
            short r14 = (short) r14     // Catch:{ all -> 0x011f }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x011f }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r8)     // Catch:{ all -> 0x011f }
            java.lang.Object r4 = r11.invoke(r4, r8)     // Catch:{ all -> 0x011f }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x011f }
            int r4 = r4.intValue()     // Catch:{ all -> 0x011f }
            r1[r3] = r4
            int r3 = r3 + 1
            r4 = 49
            goto L_0x008e
        L_0x011f:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0127
            throw r1
        L_0x0127:
            throw r0
        L_0x0128:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0130
            throw r1
        L_0x0130:
            throw r0
        L_0x0131:
            r3 = 3
            r7 = 21
            r8 = 56
            r11 = 51
            r12 = 62
        L_0x013a:
            int r14 = r5 + 1
            r13 = 2
            r4 = 22
            r0 = r1[r5]     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            r5 = 24
            r10 = 18
            r15 = 23
            switch(r0) {
                case -31: goto L_0x02c3;
                case -30: goto L_0x02c0;
                case -29: goto L_0x02b2;
                case -28: goto L_0x02a3;
                case -27: goto L_0x029d;
                case -26: goto L_0x029a;
                case -25: goto L_0x0297;
                case -24: goto L_0x028b;
                case -23: goto L_0x0288;
                case -22: goto L_0x0285;
                case -21: goto L_0x026a;
                case -20: goto L_0x0264;
                case -19: goto L_0x025c;
                case -18: goto L_0x0258;
                case -17: goto L_0x023d;
                case -16: goto L_0x0239;
                case -15: goto L_0x0235;
                case -14: goto L_0x0231;
                case -13: goto L_0x022d;
                case -12: goto L_0x0220;
                case -11: goto L_0x0210;
                case -10: goto L_0x0205;
                case -9: goto L_0x01f2;
                case -8: goto L_0x01ee;
                case -7: goto L_0x01a9;
                case -6: goto L_0x01a5;
                case -5: goto L_0x0184;
                case -4: goto L_0x016d;
                case -3: goto L_0x015c;
                case -2: goto L_0x0154;
                case -1: goto L_0x0150;
                default: goto L_0x014e;
            }     // Catch:{ all -> 0x02cc }
        L_0x014e:
            goto L_0x02c6
        L_0x0150:
            r5 = 71
            goto L_0x02c8
        L_0x0154:
            r9.setMax(r2)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x02cc }
            throw r0     // Catch:{ all -> 0x02cc }
        L_0x015c:
            r0 = 34
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            if (r0 == 0) goto L_0x0169
            r0 = 4
            r5 = 4
            goto L_0x02c8
        L_0x0169:
            r5 = 98
            goto L_0x02c8
        L_0x016d:
            r9.getMin = r2     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x02cc }
            o.invalidateDividers r0 = r0.createAvatarData()     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
        L_0x017f:
            r9.setMax(r5)     // Catch:{ all -> 0x02cc }
            goto L_0x02c6
        L_0x0184:
            r9.getMin = r3     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.invalidateDividers r0 = (o.invalidateDividers) r0     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r10 = r9.isInside     // Catch:{ all -> 0x02cc }
            java.io.File r10 = (java.io.File) r10     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r15 = r9.isInside     // Catch:{ all -> 0x02cc }
            java.lang.String r15 = (java.lang.String) r15     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = r0.uploadAvatar(r10, r15)     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
            goto L_0x017f
        L_0x01a5:
            r5 = 62
            goto L_0x02c8
        L_0x01a9:
            o.getParentId r0 = new o.getParentId     // Catch:{ all -> 0x02cc }
            r3 = 6
            r9.getMin = r3     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r16 = r3
            o.lock r16 = (o.lock) r16     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r17 = r3
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r18 = r3
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r19 = r3
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r20 = r3
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            r21 = r3
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x02cc }
            r15 = r0
            r15.<init>(r16, r17, r18, r19, r20, r21)     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
            goto L_0x017f
        L_0x01ee:
            r5 = 75
            goto L_0x02c7
        L_0x01f2:
            r0 = 34
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            if (r0 == 0) goto L_0x0201
            r0 = 59
            r5 = 59
            goto L_0x02c7
        L_0x0201:
            r5 = 107(0x6b, float:1.5E-43)
            goto L_0x02c7
        L_0x0205:
            int r0 = setMax     // Catch:{ all -> 0x02cc }
            r9.getMin = r0     // Catch:{ all -> 0x02cc }
        L_0x0209:
            r0 = 10
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            goto L_0x02c6
        L_0x0210:
            r9.getMin = r2     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r0 = 19
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            getMin = r0     // Catch:{ all -> 0x02cc }
            goto L_0x02c6
        L_0x0220:
            r9.setMax(r4)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            if (r0 != 0) goto L_0x02c6
            r0 = 50
            r5 = 50
            goto L_0x02c7
        L_0x022d:
            r5 = 54
            goto L_0x02c7
        L_0x0231:
            r5 = 109(0x6d, float:1.53E-43)
            goto L_0x02c7
        L_0x0235:
            r5 = 20
            goto L_0x02c7
        L_0x0239:
            r3 = 3
            r5 = 3
            goto L_0x02c8
        L_0x023d:
            r9.getMin = r13     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.RedDotDrawable r3 = (o.RedDotDrawable) r3     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = r0.flatMap(r3)     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
            goto L_0x017f
        L_0x0258:
            r5 = 111(0x6f, float:1.56E-43)
            goto L_0x02c8
        L_0x025c:
            r9.setMax(r2)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x02cc }
            return r0
        L_0x0264:
            o.getIgnoreOutputAPIList r0 = o.getIgnoreOutputAPIList.setMax     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
            goto L_0x017f
        L_0x026a:
            r9.getMin = r13     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x02cc }
            r9.setMax(r15)     // Catch:{ all -> 0x02cc }
            java.lang.Object r3 = r9.isInside     // Catch:{ all -> 0x02cc }
            o.RedDotDrawable r3 = (o.RedDotDrawable) r3     // Catch:{ all -> 0x02cc }
            o.TitleBarRightButtonView$1 r0 = r0.onErrorReturn(r3)     // Catch:{ all -> 0x02cc }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x02cc }
            goto L_0x017f
        L_0x0285:
            r5 = 9
            goto L_0x02c7
        L_0x0288:
            r5 = 21
            goto L_0x02c8
        L_0x028b:
            r9.setMax(r4)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            if (r0 != 0) goto L_0x02c6
            r0 = 97
            r5 = 97
            goto L_0x02c7
        L_0x0297:
            r5 = 129(0x81, float:1.81E-43)
            goto L_0x02c8
        L_0x029a:
            r5 = 56
            goto L_0x02c8
        L_0x029d:
            int r0 = getMin     // Catch:{ all -> 0x02cc }
            r9.getMin = r0     // Catch:{ all -> 0x02cc }
            goto L_0x0209
        L_0x02a3:
            r9.getMin = r2     // Catch:{ all -> 0x02cc }
            r9.setMax(r10)     // Catch:{ all -> 0x02cc }
            r0 = 19
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            setMax = r0     // Catch:{ all -> 0x02cc }
            goto L_0x02c6
        L_0x02b2:
            r0 = 33
            r9.setMax(r0)     // Catch:{ all -> 0x02cc }
            int r0 = r9.setMin     // Catch:{ all -> 0x02cc }
            if (r0 != 0) goto L_0x02c6
            r0 = 128(0x80, float:1.794E-43)
            r5 = 128(0x80, float:1.794E-43)
            goto L_0x02c7
        L_0x02c0:
            r5 = 51
            goto L_0x02c8
        L_0x02c3:
            r5 = 69
            goto L_0x02c7
        L_0x02c6:
            r5 = r14
        L_0x02c7:
            r3 = 3
        L_0x02c8:
            r10 = 58
            goto L_0x013a
        L_0x02cc:
            r0 = move-exception
            byte[] r3 = setMin
            byte r3 = r3[r6]
            byte r3 = (byte) r3
            r5 = 15410(0x3c32, float:2.1594E-41)
            short r5 = (short) r5
            r10 = r5 & 239(0xef, float:3.35E-43)
            short r10 = (short) r10
            java.lang.String r3 = length(r3, r5, r10)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x02f5
            r3 = 7
            if (r14 < r3) goto L_0x02f5
            r3 = 8
            if (r14 > r3) goto L_0x02f5
        L_0x02ed:
            r3 = 111(0x6f, float:1.56E-43)
            r4 = 129(0x81, float:1.81E-43)
        L_0x02f1:
            r5 = 58
            goto L_0x044e
        L_0x02f5:
            byte[] r3 = setMin
            byte r13 = r3[r6]
            byte r13 = (byte) r13
            r15 = 963(0x3c3, float:1.35E-42)
            short r15 = (short) r15
            r18 = 55
            byte r3 = r3[r18]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r13, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x031d
            if (r14 < r7) goto L_0x031d
            if (r14 > r4) goto L_0x031d
        L_0x0315:
            r3 = 111(0x6f, float:1.56E-43)
            r4 = 129(0x81, float:1.81E-43)
            r5 = 53
            goto L_0x044e
        L_0x031d:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = 9099(0x238b, float:1.275E-41)
            short r13 = (short) r13
            r19 = 4829(0x12dd, float:6.767E-42)
            byte r3 = r3[r19]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0340
            r3 = 45
            if (r14 < r3) goto L_0x0340
            if (r14 > r11) goto L_0x0340
            goto L_0x0315
        L_0x0340:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = r4 | 976(0x3d0, float:1.368E-42)
            short r13 = (short) r13
            r19 = 54
            byte r3 = r3[r19]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0362
            if (r14 < r8) goto L_0x0362
            r3 = 57
            if (r14 > r3) goto L_0x0362
            goto L_0x0315
        L_0x0362:
            r3 = 60
            if (r14 < r3) goto L_0x036f
            if (r14 > r12) goto L_0x036f
            r3 = 111(0x6f, float:1.56E-43)
            r4 = 129(0x81, float:1.81E-43)
            r5 = 1
            goto L_0x044e
        L_0x036f:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = r4 | 5841(0x16d1, float:8.185E-42)
            short r13 = (short) r13
            r19 = 1197(0x4ad, float:1.677E-42)
            byte r3 = r3[r19]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0391
            if (r14 < r12) goto L_0x0391
            r3 = 63
            if (r14 > r3) goto L_0x0391
            goto L_0x0315
        L_0x0391:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = 14230(0x3796, float:1.994E-41)
            short r13 = (short) r13
            r19 = 13952(0x3680, float:1.9551E-41)
            byte r3 = r3[r19]
            int r3 = r3 - r2
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x03b7
            r3 = 75
            if (r14 < r3) goto L_0x03b7
            r3 = 98
            if (r14 > r3) goto L_0x03b7
            goto L_0x0315
        L_0x03b7:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = 1451(0x5ab, float:2.033E-42)
            short r13 = (short) r13
            r17 = 13952(0x3680, float:1.9551E-41)
            byte r3 = r3[r17]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x03dc
            r3 = 93
            if (r14 < r3) goto L_0x03dc
            r3 = 98
            if (r14 > r3) goto L_0x03dc
            goto L_0x02ed
        L_0x03dc:
            r3 = 103(0x67, float:1.44E-43)
            if (r14 < r3) goto L_0x03ea
            r3 = 107(0x6b, float:1.5E-43)
            if (r14 > r3) goto L_0x03ea
            r3 = 111(0x6f, float:1.56E-43)
            r4 = 129(0x81, float:1.81E-43)
            r5 = 2
            goto L_0x044e
        L_0x03ea:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r13 = r4 | 2097(0x831, float:2.939E-42)
            short r13 = (short) r13
            r16 = 9575(0x2567, float:1.3417E-41)
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r13, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x040f
            r3 = 102(0x66, float:1.43E-43)
            if (r14 < r3) goto L_0x040f
            r3 = 107(0x6b, float:1.5E-43)
            if (r14 > r3) goto L_0x040f
            goto L_0x02ed
        L_0x040f:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            byte r3 = r3[r18]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0430
            r3 = 111(0x6f, float:1.56E-43)
            if (r14 < r3) goto L_0x0432
            r4 = 129(0x81, float:1.81E-43)
            if (r14 > r4) goto L_0x0432
        L_0x042e:
            goto L_0x02f1
        L_0x0430:
            r3 = 111(0x6f, float:1.56E-43)
        L_0x0432:
            byte[] r4 = setMin
            byte r4 = r4[r6]
            byte r4 = (byte) r4
            java.lang.String r4 = length(r4, r5, r10)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0457
            r4 = 124(0x7c, float:1.74E-43)
            if (r14 < r4) goto L_0x0457
            r4 = 129(0x81, float:1.81E-43)
            if (r14 > r4) goto L_0x0457
            goto L_0x042e
        L_0x044e:
            r9.IsOverlapping = r0
            r0 = 35
            r9.setMax(r0)
            goto L_0x02c7
        L_0x0457:
            throw r0
        L_0x0458:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0460
            throw r1
        L_0x0460:
            goto L_0x0462
        L_0x0461:
            throw r0
        L_0x0462:
            goto L_0x0461
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.doUploadAvatarFirst(java.lang.String, java.lang.String, java.lang.String, java.io.File, java.lang.String, java.lang.String):o.TitleBarRightButtonView$1");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v11, resolved type: java.lang.Object} */
    /* JADX WARNING: type inference failed for: r14v5 */
    /* JADX WARNING: type inference failed for: r14v19 */
    /* JADX WARNING: type inference failed for: r14v22 */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:114:0x02ce, code lost:
        r7 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:180:0x0420, code lost:
        if (r10 <= 91) goto L_0x033d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:195:0x046f, code lost:
        if (r10 <= 117) goto L_0x036e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:73:0x0231, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:74:0x0234, code lost:
        r7 = r14;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x025a, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x0368  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x0371  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x01e5 A[Catch:{ all -> 0x01db, all -> 0x0237 }] */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x01e6 A[Catch:{ all -> 0x01db, all -> 0x0237 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.TitleBarRightButtonView.AnonymousClass1<o.GriverPerformanceStages> getLocationSubdivisionBasedOnReferralCode(java.lang.String r19) {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r0 = r19
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 1400(0x578, float:1.962E-42)
            short r3 = (short) r3
            r4 = 412(0x19c, float:5.77E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x04c6 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x04c6 }
            byte[] r3 = setMin     // Catch:{ all -> 0x04c6 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x04c6 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x04c6 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x04c6 }
            byte[] r10 = setMin     // Catch:{ all -> 0x04c6 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x04c6 }
            short r10 = (short) r10     // Catch:{ all -> 0x04c6 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x04c6 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x04c6 }
            byte[] r10 = setMin     // Catch:{ all -> 0x04c6 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x04c6 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x04c6 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x04c6 }
            byte[] r13 = setMin     // Catch:{ all -> 0x04c6 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x04c6 }
            short r13 = (short) r13     // Catch:{ all -> 0x04c6 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x04c6 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x04c6 }
            byte[] r13 = setMin     // Catch:{ all -> 0x04c6 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x04c6 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x04c6 }
            byte[] r14 = setMin     // Catch:{ all -> 0x04c6 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x04c6 }
            short r14 = (short) r14     // Catch:{ all -> 0x04c6 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x04c6 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x04c6 }
            r12[r7] = r13     // Catch:{ all -> 0x04c6 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x04c6 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x04c6 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x04c6 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0128
            r10 = r0[r5]
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ all -> 0x011f }
            r13[r7] = r10     // Catch:{ all -> 0x011f }
            byte[] r10 = setMin     // Catch:{ all -> 0x011f }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011f }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011f }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011f }
            byte[] r15 = setMin     // Catch:{ all -> 0x011f }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x011f }
            short r15 = (short) r15     // Catch:{ all -> 0x011f }
            java.lang.String r10 = length(r10, r14, r15)     // Catch:{ all -> 0x011f }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011f }
            byte[] r15 = setMin     // Catch:{ all -> 0x011f }
            byte r15 = r15[r6]     // Catch:{ all -> 0x011f }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011f }
            r6 = r15 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011f }
            byte[] r16 = setMin     // Catch:{ all -> 0x011f }
            r17 = 52
            byte r12 = r16[r17]     // Catch:{ all -> 0x011f }
            short r12 = (short) r12     // Catch:{ all -> 0x011f }
            java.lang.String r6 = length(r15, r6, r12)     // Catch:{ all -> 0x011f }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x011f }
            byte[] r15 = setMin     // Catch:{ all -> 0x011f }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011f }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011f }
            byte[] r16 = setMin     // Catch:{ all -> 0x011f }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011f }
            short r4 = (short) r4     // Catch:{ all -> 0x011f }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011f }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011f }
            r12[r7] = r4     // Catch:{ all -> 0x011f }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x011f }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r13)     // Catch:{ all -> 0x011f }
            byte[] r6 = setMin     // Catch:{ all -> 0x0116 }
            byte r6 = r6[r8]     // Catch:{ all -> 0x0116 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x0116 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0116 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0116 }
            short r10 = (short) r10     // Catch:{ all -> 0x0116 }
            java.lang.String r6 = length(r6, r14, r10)     // Catch:{ all -> 0x0116 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0116 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0116 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0116 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0116 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0116 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0116 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0116 }
            short r13 = (short) r13     // Catch:{ all -> 0x0116 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0116 }
            r12 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r10, r12)     // Catch:{ all -> 0x0116 }
            java.lang.Object r4 = r6.invoke(r4, r12)     // Catch:{ all -> 0x0116 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0116 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0116 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0083
        L_0x0116:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011e
            throw r1
        L_0x011e:
            throw r0
        L_0x011f:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0127
            throw r1
        L_0x0127:
            throw r0
        L_0x0128:
            int r10 = r7 + 1
            r12 = 5
            r13 = 31
            r0 = r3[r7]     // Catch:{ all -> 0x0316 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0316 }
            r7 = 22
            r14 = 34
            r15 = 10
            r5 = 24
            r4 = 23
            r6 = 18
            switch(r0) {
                case -35: goto L_0x030f;
                case -34: goto L_0x02f5;
                case -33: goto L_0x02e1;
                case -32: goto L_0x02da;
                case -31: goto L_0x02d3;
                case -30: goto L_0x02c0;
                case -29: goto L_0x02ae;
                case -28: goto L_0x02a4;
                case -27: goto L_0x029d;
                case -26: goto L_0x028c;
                case -25: goto L_0x0287;
                case -24: goto L_0x0274;
                case -23: goto L_0x025f;
                case -22: goto L_0x0255;
                case -21: goto L_0x024e;
                case -20: goto L_0x023b;
                case -19: goto L_0x021f;
                case -18: goto L_0x021a;
                case -17: goto L_0x0216;
                case -16: goto L_0x0211;
                case -15: goto L_0x020c;
                case -14: goto L_0x01fe;
                case -13: goto L_0x01f9;
                case -12: goto L_0x01f5;
                case -11: goto L_0x01e7;
                case -10: goto L_0x0197;
                case -9: goto L_0x0194;
                case -8: goto L_0x0191;
                case -7: goto L_0x0185;
                case -6: goto L_0x0175;
                case -5: goto L_0x016d;
                case -4: goto L_0x015b;
                case -3: goto L_0x0152;
                case -2: goto L_0x0149;
                case -1: goto L_0x0146;
                default: goto L_0x0142;
            }     // Catch:{ all -> 0x0316 }
        L_0x0142:
            r7 = 0
        L_0x0143:
            r14 = 1
            goto L_0x0313
        L_0x0146:
            r7 = 66
            goto L_0x0128
        L_0x0149:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0316 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0316 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0316 }
            throw r0     // Catch:{ all -> 0x0316 }
        L_0x0152:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0316 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0316 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0316 }
            return r0
        L_0x015b:
            r1.setMax(r14)     // Catch:{ all -> 0x0316 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0316 }
            if (r0 == 0) goto L_0x0168
            r4 = 1
            r0 = 80
            r7 = 80
            goto L_0x0128
        L_0x0168:
            r0 = 85
            r7 = 85
            goto L_0x0128
        L_0x016d:
            int r0 = setMax     // Catch:{ all -> 0x0316 }
            r1.getMin = r0     // Catch:{ all -> 0x0316 }
            r1.setMax(r15)     // Catch:{ all -> 0x0316 }
            goto L_0x0142
        L_0x0175:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0316 }
            r1.setMax(r6)     // Catch:{ all -> 0x0316 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0316 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0316 }
            getMin = r0     // Catch:{ all -> 0x0316 }
            goto L_0x0142
        L_0x0185:
            r1.setMax(r7)     // Catch:{ all -> 0x0316 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0316 }
            if (r0 != 0) goto L_0x0313
            r0 = 25
            r7 = 25
            goto L_0x0128
        L_0x0191:
            r7 = 91
            goto L_0x0128
        L_0x0194:
            r7 = 64
            goto L_0x0128
        L_0x0197:
            r5 = 1
            r1.getMin = r5     // Catch:{ all -> 0x0316 }
            r1.setMax(r6)     // Catch:{ all -> 0x0316 }
            r1.setMax(r4)     // Catch:{ all -> 0x0316 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0316 }
            byte[] r4 = setMin     // Catch:{ all -> 0x01dd }
            byte r4 = r4[r8]     // Catch:{ all -> 0x01dd }
            byte r4 = (byte) r4     // Catch:{ all -> 0x01dd }
            byte[] r5 = setMin     // Catch:{ all -> 0x01dd }
            byte r5 = r5[r11]     // Catch:{ all -> 0x01dd }
            short r5 = (short) r5     // Catch:{ all -> 0x01dd }
            java.lang.String r4 = length(r4, r9, r5)     // Catch:{ all -> 0x01dd }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x01dd }
            byte[] r5 = setMin     // Catch:{ all -> 0x01dd }
            r6 = 102(0x66, float:1.43E-43)
            byte r5 = r5[r6]     // Catch:{ all -> 0x01dd }
            byte r5 = (byte) r5     // Catch:{ all -> 0x01dd }
            r6 = 1457(0x5b1, float:2.042E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x01dd }
            byte[] r7 = setMin     // Catch:{ all -> 0x01dd }
            r14 = 52
            byte r7 = r7[r14]     // Catch:{ all -> 0x01dd }
            short r7 = (short) r7     // Catch:{ all -> 0x01dd }
            java.lang.String r5 = length(r5, r6, r7)     // Catch:{ all -> 0x01dd }
            r14 = 0
            java.lang.reflect.Method r4 = r4.getMethod(r5, r14)     // Catch:{ all -> 0x01db }
            java.lang.Object r0 = r4.invoke(r0, r14)     // Catch:{ all -> 0x01db }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x01db }
            boolean r0 = r0.booleanValue()     // Catch:{ all -> 0x01db }
            r1.getMin = r0     // Catch:{ all -> 0x0237 }
            goto L_0x0231
        L_0x01db:
            r0 = move-exception
            goto L_0x01df
        L_0x01dd:
            r0 = move-exception
            r14 = 0
        L_0x01df:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x0237 }
            if (r4 == 0) goto L_0x01e6
            throw r4     // Catch:{ all -> 0x0237 }
        L_0x01e6:
            throw r0     // Catch:{ all -> 0x0237 }
        L_0x01e7:
            r14 = 0
            r1.setMax(r7)     // Catch:{ all -> 0x0237 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0237 }
            if (r0 != 0) goto L_0x0313
            r0 = 30
            r7 = 30
            goto L_0x0128
        L_0x01f5:
            r7 = 117(0x75, float:1.64E-43)
            goto L_0x0128
        L_0x01f9:
            r14 = 0
            r7 = 95
            goto L_0x0128
        L_0x01fe:
            r14 = 0
            r1.setMax(r7)     // Catch:{ all -> 0x0237 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0237 }
            if (r0 != 0) goto L_0x0313
            r0 = 63
            r7 = 63
            goto L_0x0128
        L_0x020c:
            r14 = 0
            r7 = 70
            goto L_0x0128
        L_0x0211:
            r14 = 0
            r7 = 26
            goto L_0x0128
        L_0x0216:
            r14 = 0
            r7 = 4
            goto L_0x0128
        L_0x021a:
            r14 = 0
            r7 = 33
            goto L_0x0128
        L_0x021f:
            r5 = 1
            r14 = 0
            r1.getMin = r5     // Catch:{ all -> 0x0237 }
            r1.setMax(r6)     // Catch:{ all -> 0x0237 }
            r1.setMax(r4)     // Catch:{ all -> 0x0237 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0237 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0237 }
            r1.getMin = r0     // Catch:{ all -> 0x0237 }
        L_0x0231:
            r1.setMax(r15)     // Catch:{ all -> 0x0237 }
            r7 = r14
            goto L_0x0143
        L_0x0237:
            r0 = move-exception
            r7 = r14
            goto L_0x0318
        L_0x023b:
            r7 = 0
            r1.setMax(r14)     // Catch:{ all -> 0x02d1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d1 }
            if (r0 == 0) goto L_0x024b
            r4 = 1
            if (r0 == r4) goto L_0x0247
            goto L_0x024b
        L_0x0247:
            r0 = 71
            r13 = 71
        L_0x024b:
            r7 = r13
            goto L_0x0128
        L_0x024e:
            r7 = 0
            r0 = 76
            r7 = 76
            goto L_0x0128
        L_0x0255:
            r7 = 0
            o.GriverPerformanceStages$setMax r0 = o.GriverPerformanceStages.Companion     // Catch:{ all -> 0x02d1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d1 }
        L_0x025a:
            r1.setMax(r5)     // Catch:{ all -> 0x02d1 }
            goto L_0x0143
        L_0x025f:
            r7 = 0
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x030d }
            r1.setMax(r6)     // Catch:{ all -> 0x02d1 }
            r1.setMax(r4)     // Catch:{ all -> 0x02d1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d1 }
            o.GriverPerformanceStages$setMax r0 = (o.GriverPerformanceStages.setMax) r0     // Catch:{ all -> 0x02d1 }
            o.GriverPerformanceStages r0 = r0.empty()     // Catch:{ all -> 0x02d1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d1 }
            goto L_0x025a
        L_0x0274:
            r7 = 0
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x030d }
            r1.setMax(r6)     // Catch:{ all -> 0x02d1 }
            r1.setMax(r4)     // Catch:{ all -> 0x02d1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d1 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x02d1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d1 }
            goto L_0x025a
        L_0x0287:
            r7 = 0
            r0 = 2
            r7 = 2
            goto L_0x0128
        L_0x028c:
            r7 = 0
            r1.setMax(r14)     // Catch:{ all -> 0x02d1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d1 }
            if (r0 == 0) goto L_0x029a
            r4 = 1
            if (r0 == r4) goto L_0x0298
            goto L_0x029a
        L_0x0298:
            r0 = 5
            goto L_0x02ce
        L_0x029a:
            r0 = 119(0x77, float:1.67E-43)
            goto L_0x02ce
        L_0x029d:
            r7 = 0
            r0 = 84
            r7 = 84
            goto L_0x0128
        L_0x02a4:
            r7 = 0
            int r0 = getMin     // Catch:{ all -> 0x02d1 }
            r1.getMin = r0     // Catch:{ all -> 0x02d1 }
            r1.setMax(r15)     // Catch:{ all -> 0x02d1 }
            goto L_0x0143
        L_0x02ae:
            r4 = 1
            r7 = 0
            r1.getMin = r4     // Catch:{ all -> 0x02d1 }
            r1.setMax(r6)     // Catch:{ all -> 0x02d1 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02d1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d1 }
            setMax = r0     // Catch:{ all -> 0x02d1 }
            goto L_0x0143
        L_0x02c0:
            r7 = 0
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x02d1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d1 }
            if (r0 != 0) goto L_0x02cd
            r0 = 116(0x74, float:1.63E-43)
            goto L_0x02ce
        L_0x02cd:
            r0 = r10
        L_0x02ce:
            r7 = r0
            goto L_0x0128
        L_0x02d1:
            r0 = move-exception
            goto L_0x0318
        L_0x02d3:
            r7 = 0
            r0 = 77
            r7 = 77
            goto L_0x0128
        L_0x02da:
            r7 = 0
            r0 = 93
            r7 = 93
            goto L_0x0128
        L_0x02e1:
            r7 = 0
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x030d }
            r1.setMax(r6)     // Catch:{ all -> 0x02d1 }
            r1.setMax(r4)     // Catch:{ all -> 0x02d1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d1 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x02d1 }
            o.CreatePromptParam$PositiveListener r0 = r0.geocodeEntityRepository     // Catch:{ all -> 0x02d1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d1 }
            goto L_0x025a
        L_0x02f5:
            r7 = 0
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x030d }
            r1.setMax(r6)     // Catch:{ all -> 0x030d }
            r1.setMax(r4)     // Catch:{ all -> 0x030d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x030d }
            o.CreatePromptParam$PositiveListener r0 = (o.CreatePromptParam.PositiveListener) r0     // Catch:{ all -> 0x030d }
            o.TitleBarRightButtonView$1 r0 = r0.getLatestSubdivisions()     // Catch:{ all -> 0x030d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x030d }
            r1.setMax(r5)     // Catch:{ all -> 0x030d }
            goto L_0x0313
        L_0x030d:
            r0 = move-exception
            goto L_0x0319
        L_0x030f:
            r7 = 98
            goto L_0x0128
        L_0x0313:
            r7 = r10
            goto L_0x0128
        L_0x0316:
            r0 = move-exception
            r7 = 0
        L_0x0318:
            r14 = 1
        L_0x0319:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = 1451(0x5ab, float:2.033E-42)
            short r6 = (short) r6
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r5 = 69
            if (r4 == 0) goto L_0x0345
            if (r10 < r12) goto L_0x0345
            r4 = 6
            if (r10 > r4) goto L_0x0345
        L_0x033b:
            r4 = 91
        L_0x033d:
            r5 = 117(0x75, float:1.64E-43)
            r6 = 98
        L_0x0341:
            r10 = 69
            goto L_0x04bc
        L_0x0345:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = r6 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            r15 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0371
            r4 = 20
            if (r10 < r4) goto L_0x0371
            r4 = 21
            if (r10 > r4) goto L_0x0371
            r4 = 91
        L_0x036a:
            r5 = 117(0x75, float:1.64E-43)
            r6 = 98
        L_0x036e:
            r10 = 1
            goto L_0x04bc
        L_0x0371:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = r6 | 2097(0x831, float:2.939E-42)
            short r12 = (short) r12
            r17 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r17]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0393
            r4 = 27
            if (r10 < r4) goto L_0x0393
            if (r10 > r13) goto L_0x0393
            goto L_0x033b
        L_0x0393:
            if (r10 < r8) goto L_0x03a5
            r4 = 76
            if (r10 > r4) goto L_0x03a5
            r4 = 79
            r4 = 91
            r5 = 117(0x75, float:1.64E-43)
            r6 = 98
            r10 = 79
            goto L_0x04bc
        L_0x03a5:
            r4 = 88
            if (r10 < r4) goto L_0x03b9
            r4 = 91
            if (r10 > r4) goto L_0x03b9
            r4 = 97
            r4 = 91
            r5 = 117(0x75, float:1.64E-43)
            r6 = 98
            r10 = 97
            goto L_0x04bc
        L_0x03b9:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = r6 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03dc
            r4 = 85
            if (r10 < r4) goto L_0x03dc
            r4 = 86
            if (r10 > r4) goto L_0x03dc
            goto L_0x033b
        L_0x03dc:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = r6 | 2097(0x831, float:2.939E-42)
            short r12 = (short) r12
            byte r4 = r4[r17]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03ff
            r4 = 86
            if (r10 < r4) goto L_0x03ff
            r4 = 91
            if (r10 > r4) goto L_0x03ff
            goto L_0x036a
        L_0x03ff:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = r6 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            r13 = 54
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0424
            r4 = 87
            if (r10 < r4) goto L_0x0424
            r4 = 91
            if (r10 > r4) goto L_0x0426
            goto L_0x033d
        L_0x0424:
            r4 = 91
        L_0x0426:
            byte[] r6 = setMin
            byte r12 = r6[r8]
            byte r12 = (byte) r12
            r13 = r12 | 5841(0x16d1, float:8.185E-42)
            short r13 = (short) r13
            byte r6 = r6[r15]
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x044b
            r6 = 98
            if (r10 < r6) goto L_0x044d
            r12 = 117(0x75, float:1.64E-43)
            if (r10 > r12) goto L_0x044d
            r5 = 117(0x75, float:1.64E-43)
            goto L_0x0341
        L_0x044b:
            r6 = 98
        L_0x044d:
            byte[] r5 = setMin
            byte r12 = r5[r8]
            byte r12 = (byte) r12
            r13 = r12 | 4944(0x1350, float:6.928E-42)
            short r13 = (short) r13
            r15 = 13
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r12, r13, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0473
            r5 = 112(0x70, float:1.57E-43)
            if (r10 < r5) goto L_0x0473
            r5 = 117(0x75, float:1.64E-43)
            if (r10 > r5) goto L_0x0475
        L_0x0471:
            goto L_0x036e
        L_0x0473:
            r5 = 117(0x75, float:1.64E-43)
        L_0x0475:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r15 = r13 | 2097(0x831, float:2.939E-42)
            short r15 = (short) r15
            byte r12 = r12[r17]
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r15, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x0497
            r12 = 120(0x78, float:1.68E-43)
            if (r10 < r12) goto L_0x0497
            r12 = 121(0x79, float:1.7E-43)
            if (r10 > r12) goto L_0x0497
            goto L_0x0471
        L_0x0497:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r15 = 9099(0x238b, float:1.275E-41)
            short r15 = (short) r15
            r16 = 4829(0x12dd, float:6.767E-42)
            byte r12 = r12[r16]
            int r12 = -r12
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r15, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            if (r12 == 0) goto L_0x04c5
            r12 = 121(0x79, float:1.7E-43)
            if (r10 < r12) goto L_0x04c5
            r12 = 123(0x7b, float:1.72E-43)
            if (r10 > r12) goto L_0x04c5
            goto L_0x0471
        L_0x04bc:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x0313
        L_0x04c5:
            throw r0
        L_0x04c6:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x04ce
            throw r1
        L_0x04ce:
            goto L_0x04d0
        L_0x04cf:
            throw r0
        L_0x04d0:
            goto L_0x04cf
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.getLocationSubdivisionBasedOnReferralCode(java.lang.String):o.TitleBarRightButtonView$1");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x03c5, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:193:0x04f5, code lost:
        if (r10 <= 27) goto L_0x0504;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:231:0x05a2, code lost:
        if (r10 <= 170) goto L_0x052d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:257:0x063a, code lost:
        if (r10 <= 208) goto L_0x05cb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x01af, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x0249, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:131:0x03d5 A[Catch:{ all -> 0x03ca, all -> 0x04ae }] */
    /* JADX WARNING: Removed duplicated region for block: B:132:0x03d6 A[Catch:{ all -> 0x03ca, all -> 0x04ae }] */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x04c9  */
    /* JADX WARNING: Removed duplicated region for block: B:188:0x04d4  */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x01bd A[Catch:{ all -> 0x024e, all -> 0x01b3, all -> 0x04bc }] */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x01be A[Catch:{ all -> 0x024e, all -> 0x01b3, all -> 0x04bc }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private java.lang.String getPhoneNumber(java.lang.String r25, java.lang.String r26) {
        /*
            r24 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r24
            r0 = r25
            r3 = r26
            r1.<init>(r2, r0, r3)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 15346(0x3bf2, float:2.1504E-41)
            short r3 = (short) r3
            r4 = 725(0x2d5, float:1.016E-42)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x066a }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x066a }
            byte[] r3 = setMin     // Catch:{ all -> 0x066a }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x066a }
            byte r3 = (byte) r3     // Catch:{ all -> 0x066a }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x066a }
            byte[] r10 = setMin     // Catch:{ all -> 0x066a }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x066a }
            short r10 = (short) r10     // Catch:{ all -> 0x066a }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x066a }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x066a }
            byte[] r10 = setMin     // Catch:{ all -> 0x066a }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x066a }
            byte r10 = (byte) r10     // Catch:{ all -> 0x066a }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x066a }
            byte[] r13 = setMin     // Catch:{ all -> 0x066a }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x066a }
            short r13 = (short) r13     // Catch:{ all -> 0x066a }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x066a }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x066a }
            byte[] r13 = setMin     // Catch:{ all -> 0x066a }
            byte r13 = r13[r8]     // Catch:{ all -> 0x066a }
            byte r13 = (byte) r13     // Catch:{ all -> 0x066a }
            byte[] r14 = setMin     // Catch:{ all -> 0x066a }
            byte r14 = r14[r11]     // Catch:{ all -> 0x066a }
            short r14 = (short) r14     // Catch:{ all -> 0x066a }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x066a }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x066a }
            r12[r7] = r13     // Catch:{ all -> 0x066a }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x066a }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x066a }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x066a }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0085:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x012a
            r10 = r0[r5]
            java.lang.Object[] r14 = new java.lang.Object[r4]     // Catch:{ all -> 0x0121 }
            r14[r7] = r10     // Catch:{ all -> 0x0121 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0121 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0121 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0121 }
            r15 = 14246(0x37a6, float:1.9963E-41)
            short r15 = (short) r15     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            r17 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r16[r17]     // Catch:{ all -> 0x0121 }
            short r12 = (short) r12     // Catch:{ all -> 0x0121 }
            java.lang.String r10 = length(r10, r15, r12)     // Catch:{ all -> 0x0121 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0121 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0121 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0121 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0121 }
            r6 = r12 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            r17 = 52
            byte r13 = r16[r17]     // Catch:{ all -> 0x0121 }
            short r13 = (short) r13     // Catch:{ all -> 0x0121 }
            java.lang.String r6 = length(r12, r6, r13)     // Catch:{ all -> 0x0121 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0121 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            byte r4 = r16[r11]     // Catch:{ all -> 0x0121 }
            short r4 = (short) r4     // Catch:{ all -> 0x0121 }
            java.lang.String r4 = length(r13, r9, r4)     // Catch:{ all -> 0x0121 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0121 }
            r12[r7] = r4     // Catch:{ all -> 0x0121 }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x0121 }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r14)     // Catch:{ all -> 0x0121 }
            byte[] r6 = setMin     // Catch:{ all -> 0x0118 }
            byte r6 = r6[r8]     // Catch:{ all -> 0x0118 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            short r10 = (short) r10     // Catch:{ all -> 0x0118 }
            java.lang.String r6 = length(r6, r15, r10)     // Catch:{ all -> 0x0118 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0118 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0118 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0118 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0118 }
            short r13 = (short) r13     // Catch:{ all -> 0x0118 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0118 }
            r12 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r10, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Object r4 = r6.invoke(r4, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0118 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0118 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0085
        L_0x0118:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0120
            throw r1
        L_0x0120:
            throw r0
        L_0x0121:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0129
            throw r1
        L_0x0129:
            throw r0
        L_0x012a:
            r14 = 11
            r0 = 0
        L_0x012d:
            int r10 = r0 + 1
            r15 = 6
            r6 = 10
            r0 = r3[r0]     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x04bc }
            r12 = 22
            r5 = 24
            r13 = 23
            r4 = 18
            switch(r0) {
                case -64: goto L_0x04b0;
                case -63: goto L_0x04a6;
                case -62: goto L_0x049e;
                case -61: goto L_0x049a;
                case -60: goto L_0x048e;
                case -59: goto L_0x0489;
                case -58: goto L_0x047b;
                case -57: goto L_0x0476;
                case -56: goto L_0x0471;
                case -55: goto L_0x0463;
                case -54: goto L_0x0451;
                case -53: goto L_0x0446;
                case -52: goto L_0x042f;
                case -51: goto L_0x0429;
                case -50: goto L_0x041c;
                case -49: goto L_0x0416;
                case -48: goto L_0x0402;
                case -47: goto L_0x03fc;
                case -46: goto L_0x03f6;
                case -45: goto L_0x03f0;
                case -44: goto L_0x03ea;
                case -43: goto L_0x03dd;
                case -42: goto L_0x03d7;
                case -41: goto L_0x037c;
                case -40: goto L_0x0376;
                case -39: goto L_0x0370;
                case -38: goto L_0x036a;
                case -37: goto L_0x0366;
                case -36: goto L_0x0362;
                case -35: goto L_0x035e;
                case -34: goto L_0x035a;
                case -33: goto L_0x0356;
                case -32: goto L_0x034b;
                case -31: goto L_0x033a;
                case -30: goto L_0x0334;
                case -29: goto L_0x0330;
                case -28: goto L_0x032c;
                case -27: goto L_0x0321;
                case -26: goto L_0x031d;
                case -25: goto L_0x0319;
                case -24: goto L_0x0315;
                case -23: goto L_0x0308;
                case -22: goto L_0x02f3;
                case -21: goto L_0x02e0;
                case -20: goto L_0x02dc;
                case -19: goto L_0x02cc;
                case -18: goto L_0x02c8;
                case -17: goto L_0x02c4;
                case -16: goto L_0x02bb;
                case -15: goto L_0x02a6;
                case -14: goto L_0x029b;
                case -13: goto L_0x028d;
                case -12: goto L_0x0289;
                case -11: goto L_0x0269;
                case -10: goto L_0x0257;
                case -9: goto L_0x01e8;
                case -8: goto L_0x01e3;
                case -7: goto L_0x01de;
                case -6: goto L_0x01d4;
                case -5: goto L_0x01cf;
                case -4: goto L_0x01ca;
                case -3: goto L_0x01bf;
                case -2: goto L_0x014b;
                case -1: goto L_0x0147;
                default: goto L_0x0143;
            }     // Catch:{ all -> 0x04bc }
        L_0x0143:
            r14 = 58
            goto L_0x04b5
        L_0x0147:
            r0 = 110(0x6e, float:1.54E-43)
            goto L_0x04b8
        L_0x014b:
            r5 = 1
            r1.getMin = r5     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ all -> 0x01b5 }
            r4[r7] = r0     // Catch:{ all -> 0x01b5 }
            byte[] r0 = setMin     // Catch:{ all -> 0x01b5 }
            byte r0 = r0[r15]     // Catch:{ all -> 0x01b5 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x01b5 }
            r5 = 1421(0x58d, float:1.991E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x01b5 }
            byte[] r12 = setMin     // Catch:{ all -> 0x01b5 }
            byte r12 = r12[r15]     // Catch:{ all -> 0x01b5 }
            short r12 = (short) r12     // Catch:{ all -> 0x01b5 }
            java.lang.String r0 = length(r0, r5, r12)     // Catch:{ all -> 0x01b5 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x01b5 }
            byte[] r5 = setMin     // Catch:{ all -> 0x01b5 }
            r12 = 102(0x66, float:1.43E-43)
            byte r5 = r5[r12]     // Catch:{ all -> 0x01b5 }
            byte r5 = (byte) r5     // Catch:{ all -> 0x01b5 }
            r12 = 1457(0x5b1, float:2.042E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x01b5 }
            byte[] r13 = setMin     // Catch:{ all -> 0x01b5 }
            r22 = 52
            byte r13 = r13[r22]     // Catch:{ all -> 0x01b5 }
            short r13 = (short) r13     // Catch:{ all -> 0x01b5 }
            java.lang.String r5 = length(r5, r12, r13)     // Catch:{ all -> 0x01b5 }
            r12 = 1
            java.lang.Class[] r13 = new java.lang.Class[r12]     // Catch:{ all -> 0x01b5 }
            byte[] r12 = setMin     // Catch:{ all -> 0x01b5 }
            byte r12 = r12[r8]     // Catch:{ all -> 0x01b5 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x01b5 }
            r14 = 10599(0x2967, float:1.4852E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x01b5 }
            byte[] r22 = setMin     // Catch:{ all -> 0x01b5 }
            byte r11 = r22[r15]     // Catch:{ all -> 0x01b5 }
            short r11 = (short) r11     // Catch:{ all -> 0x01b5 }
            java.lang.String r11 = length(r12, r14, r11)     // Catch:{ all -> 0x01b5 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x01b5 }
            r13[r7] = r11     // Catch:{ all -> 0x01b5 }
            java.lang.reflect.Method r0 = r0.getMethod(r5, r13)     // Catch:{ all -> 0x01b5 }
            r11 = 0
            java.lang.Object r0 = r0.invoke(r11, r4)     // Catch:{ all -> 0x01b3 }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x01b3 }
            boolean r0 = r0.booleanValue()     // Catch:{ all -> 0x01b3 }
            r1.getMin = r0     // Catch:{ all -> 0x04bc }
        L_0x01af:
            r1.setMax(r6)     // Catch:{ all -> 0x04bc }
            goto L_0x0143
        L_0x01b3:
            r0 = move-exception
            goto L_0x01b7
        L_0x01b5:
            r0 = move-exception
            r11 = 0
        L_0x01b7:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x04bc }
            if (r4 == 0) goto L_0x01be
            throw r4     // Catch:{ all -> 0x04bc }
        L_0x01be:
            throw r0     // Catch:{ all -> 0x04bc }
        L_0x01bf:
            r11 = 0
            r1.setMax(r12)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 != 0) goto L_0x04b5
            r0 = 5
            goto L_0x04b6
        L_0x01ca:
            r11 = 0
        L_0x01cb:
            r0 = 85
            goto L_0x04b6
        L_0x01cf:
            r11 = 0
            r0 = 51
            goto L_0x04b6
        L_0x01d4:
            r4 = 1
            r11 = 0
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x04bc }
            throw r0     // Catch:{ all -> 0x04bc }
        L_0x01de:
            r11 = 0
            r0 = 28
            goto L_0x04b6
        L_0x01e3:
            r11 = 0
            r0 = 133(0x85, float:1.86E-43)
            goto L_0x04b6
        L_0x01e8:
            r11 = 0
            r0 = 2
            r1.getMin = r0     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x04bc }
            r12 = 1
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ all -> 0x024e }
            r13[r7] = r4     // Catch:{ all -> 0x024e }
            byte[] r4 = setMin     // Catch:{ all -> 0x024e }
            byte r4 = r4[r8]     // Catch:{ all -> 0x024e }
            byte r4 = (byte) r4     // Catch:{ all -> 0x024e }
            r12 = r4 | 5874(0x16f2, float:8.231E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x024e }
            byte[] r14 = setMin     // Catch:{ all -> 0x024e }
            r18 = 13948(0x367c, float:1.9545E-41)
            byte r14 = r14[r18]     // Catch:{ all -> 0x024e }
            short r14 = (short) r14     // Catch:{ all -> 0x024e }
            java.lang.String r4 = length(r4, r12, r14)     // Catch:{ all -> 0x024e }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x024e }
            byte[] r12 = setMin     // Catch:{ all -> 0x024e }
            byte r12 = r12[r15]     // Catch:{ all -> 0x024e }
            byte r12 = (byte) r12     // Catch:{ all -> 0x024e }
            byte[] r14 = setMin     // Catch:{ all -> 0x024e }
            r18 = 69
            byte r14 = r14[r18]     // Catch:{ all -> 0x024e }
            short r14 = (short) r14     // Catch:{ all -> 0x024e }
            short r11 = (short) r14     // Catch:{ all -> 0x024e }
            java.lang.String r11 = length(r12, r14, r11)     // Catch:{ all -> 0x024e }
            r12 = 1
            java.lang.Class[] r14 = new java.lang.Class[r12]     // Catch:{ all -> 0x024e }
            byte[] r12 = setMin     // Catch:{ all -> 0x024e }
            byte r12 = r12[r8]     // Catch:{ all -> 0x024e }
            byte r12 = (byte) r12     // Catch:{ all -> 0x024e }
            byte[] r22 = setMin     // Catch:{ all -> 0x024e }
            r23 = 58
            byte r15 = r22[r23]     // Catch:{ all -> 0x024e }
            short r15 = (short) r15     // Catch:{ all -> 0x024e }
            java.lang.String r12 = length(r12, r9, r15)     // Catch:{ all -> 0x024e }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x024e }
            r14[r7] = r12     // Catch:{ all -> 0x024e }
            java.lang.reflect.Method r4 = r4.getMethod(r11, r14)     // Catch:{ all -> 0x024e }
            java.lang.Object r0 = r4.invoke(r0, r13)     // Catch:{ all -> 0x024e }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
        L_0x0249:
            r1.setMax(r5)     // Catch:{ all -> 0x04bc }
            goto L_0x0143
        L_0x024e:
            r0 = move-exception
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x04bc }
            if (r4 == 0) goto L_0x0256
            throw r4     // Catch:{ all -> 0x04bc }
        L_0x0256:
            throw r0     // Catch:{ all -> 0x04bc }
        L_0x0257:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x04bc }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x0269:
            r0 = 3
            r1.getMin = r0     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x04bc }
            o.updateActionSheetContent.exception(r0, r4, r5)     // Catch:{ all -> 0x04bc }
            goto L_0x0143
        L_0x0289:
            r0 = 208(0xd0, float:2.91E-43)
            goto L_0x04b8
        L_0x028d:
            r4 = 34
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 == 0) goto L_0x01cb
            r4 = 1
            r0 = 136(0x88, float:1.9E-43)
            goto L_0x04b6
        L_0x029b:
            r1.setMax(r12)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 != 0) goto L_0x04b5
            r0 = 26
            goto L_0x04b6
        L_0x02a6:
            r4 = 34
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            r4 = 63
            if (r0 == r4) goto L_0x02b7
            r4 = 89
            r0 = 33
            goto L_0x04b6
        L_0x02b7:
            r0 = 114(0x72, float:1.6E-43)
            goto L_0x04b6
        L_0x02bb:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ all -> 0x04bc }
            return r0
        L_0x02c4:
            r0 = 17
            goto L_0x04b6
        L_0x02c8:
            r0 = 80
            goto L_0x04b6
        L_0x02cc:
            r4 = 34
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            r11 = 1
            if (r0 == 0) goto L_0x02d8
            if (r0 == r11) goto L_0x0366
        L_0x02d8:
            r0 = 56
            goto L_0x04b6
        L_0x02dc:
            r0 = 27
            goto L_0x04b6
        L_0x02e0:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x04bc }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x04bc }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x02f3:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04bc }
            java.lang.String r0 = r0.getPhoneNumber()     // Catch:{ all -> 0x04bc }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x0308:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 != 0) goto L_0x04b5
            r0 = 48
            goto L_0x04b6
        L_0x0315:
            r0 = 31
            goto L_0x04b6
        L_0x0319:
            r0 = 75
            goto L_0x04b6
        L_0x031d:
            r0 = 37
            goto L_0x04b6
        L_0x0321:
            r1.setMax(r12)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 != 0) goto L_0x04b5
            r0 = 55
            goto L_0x04b6
        L_0x032c:
            r0 = 90
            goto L_0x04b6
        L_0x0330:
            r0 = 49
            goto L_0x04b8
        L_0x0334:
            int r0 = setMax     // Catch:{ all -> 0x04bc }
            r1.getMin = r0     // Catch:{ all -> 0x04bc }
            goto L_0x01af
        L_0x033a:
            r5 = 1
            r1.getMin = r5     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r4 = 19
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            getMin = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0143
        L_0x034b:
            r1.setMax(r12)     // Catch:{ all -> 0x04bc }
            int r0 = r1.setMin     // Catch:{ all -> 0x04bc }
            if (r0 != 0) goto L_0x04b5
            r0 = 73
            goto L_0x04b6
        L_0x0356:
            r0 = 83
            goto L_0x04b6
        L_0x035a:
            r0 = 38
            goto L_0x04b6
        L_0x035e:
            r0 = 200(0xc8, float:2.8E-43)
            goto L_0x04b6
        L_0x0362:
            r0 = 170(0xaa, float:2.38E-43)
            goto L_0x04b8
        L_0x0366:
            r0 = 77
            goto L_0x04b6
        L_0x036a:
            java.lang.String r0 = "register"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x0370:
            java.lang.String r0 = "PhoneNumberOneplusEmpty"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x0376:
            java.lang.String r0 = "phoneNumber: [regManager: "
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04bc }
            goto L_0x0249
        L_0x037c:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x04bc }
            r1.setMax(r4)     // Catch:{ all -> 0x04bc }
            r1.setMax(r13)     // Catch:{ all -> 0x04bc }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x04bc }
            java.lang.Object[] r4 = new java.lang.Object[r11]     // Catch:{ all -> 0x03cc }
            r4[r7] = r0     // Catch:{ all -> 0x03cc }
            byte[] r0 = setMin     // Catch:{ all -> 0x03cc }
            byte r0 = r0[r8]     // Catch:{ all -> 0x03cc }
            byte r0 = (byte) r0     // Catch:{ all -> 0x03cc }
            r11 = r0 | 5874(0x16f2, float:8.231E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x03cc }
            byte[] r12 = setMin     // Catch:{ all -> 0x03cc }
            r13 = 13948(0x367c, float:1.9545E-41)
            byte r12 = r12[r13]     // Catch:{ all -> 0x03cc }
            short r12 = (short) r12     // Catch:{ all -> 0x03cc }
            java.lang.String r0 = length(r0, r11, r12)     // Catch:{ all -> 0x03cc }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x03cc }
            r11 = 1
            java.lang.Class[] r12 = new java.lang.Class[r11]     // Catch:{ all -> 0x03cc }
            byte[] r11 = setMin     // Catch:{ all -> 0x03cc }
            byte r11 = r11[r8]     // Catch:{ all -> 0x03cc }
            byte r11 = (byte) r11     // Catch:{ all -> 0x03cc }
            byte[] r13 = setMin     // Catch:{ all -> 0x03cc }
            r14 = 58
            byte r13 = r13[r14]     // Catch:{ all -> 0x03ca }
            short r13 = (short) r13     // Catch:{ all -> 0x03ca }
            java.lang.String r11 = length(r11, r9, r13)     // Catch:{ all -> 0x03ca }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x03ca }
            r12[r7] = r11     // Catch:{ all -> 0x03ca }
            java.lang.reflect.Constructor r0 = r0.getDeclaredConstructor(r12)     // Catch:{ all -> 0x03ca }
            java.lang.Object r0 = r0.newInstance(r4)     // Catch:{ all -> 0x03ca }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04ae }
        L_0x03c5:
            r1.setMax(r5)     // Catch:{ all -> 0x04ae }
            goto L_0x04b5
        L_0x03ca:
            r0 = move-exception
            goto L_0x03cf
        L_0x03cc:
            r0 = move-exception
            r14 = 58
        L_0x03cf:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x04ae }
            if (r4 == 0) goto L_0x03d6
            throw r4     // Catch:{ all -> 0x04ae }
        L_0x03d6:
            throw r0     // Catch:{ all -> 0x04ae }
        L_0x03d7:
            r14 = 58
            r0 = 156(0x9c, float:2.19E-43)
            goto L_0x04b6
        L_0x03dd:
            r14 = 58
            r1.setMax(r12)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 != 0) goto L_0x04b5
            r0 = 104(0x68, float:1.46E-43)
            goto L_0x04b6
        L_0x03ea:
            r14 = 58
            r0 = 134(0x86, float:1.88E-43)
            goto L_0x04b6
        L_0x03f0:
            r14 = 58
            r0 = 8
            goto L_0x04b6
        L_0x03f6:
            r14 = 58
            r0 = 109(0x6d, float:1.53E-43)
            goto L_0x04b6
        L_0x03fc:
            r14 = 58
            r0 = 40
            goto L_0x04b6
        L_0x0402:
            r5 = 34
            r14 = 58
            r1.setMax(r5)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            r5 = 19
            if (r0 == r5) goto L_0x0413
            r0 = 18
            goto L_0x04b6
        L_0x0413:
            r0 = 1
            goto L_0x04b6
        L_0x0416:
            r14 = 58
            r0 = 117(0x75, float:1.64E-43)
            goto L_0x04b6
        L_0x041c:
            r14 = 58
            r1.setMax(r12)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 != 0) goto L_0x04b5
            r0 = 124(0x7c, float:1.74E-43)
            goto L_0x04b6
        L_0x0429:
            r14 = 58
            r0 = 107(0x6b, float:1.5E-43)
            goto L_0x04b6
        L_0x042f:
            r4 = 34
            r14 = 58
            r1.setMax(r4)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 == 0) goto L_0x0442
            r4 = 1
            if (r0 == r4) goto L_0x043e
            goto L_0x0442
        L_0x043e:
            r0 = 125(0x7d, float:1.75E-43)
            goto L_0x04b6
        L_0x0442:
            r0 = 11
            goto L_0x04b6
        L_0x0446:
            r14 = 58
            int r0 = getMin     // Catch:{ all -> 0x04ae }
            r1.getMin = r0     // Catch:{ all -> 0x04ae }
            r1.setMax(r6)     // Catch:{ all -> 0x04ae }
            goto L_0x04b5
        L_0x0451:
            r5 = 1
            r14 = 58
            r1.getMin = r5     // Catch:{ all -> 0x04ae }
            r1.setMax(r4)     // Catch:{ all -> 0x04ae }
            r4 = 19
            r1.setMax(r4)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            setMax = r0     // Catch:{ all -> 0x04ae }
            goto L_0x04b5
        L_0x0463:
            r0 = 33
            r14 = 58
            r1.setMax(r0)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 != 0) goto L_0x04b5
            r0 = 153(0x99, float:2.14E-43)
            goto L_0x04b6
        L_0x0471:
            r14 = 58
            r0 = 105(0x69, float:1.47E-43)
            goto L_0x04b6
        L_0x0476:
            r14 = 58
            r0 = 154(0x9a, float:2.16E-43)
            goto L_0x04b6
        L_0x047b:
            r0 = 33
            r14 = 58
            r1.setMax(r0)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 != 0) goto L_0x04b5
            r0 = 169(0xa9, float:2.37E-43)
            goto L_0x04b6
        L_0x0489:
            r14 = 58
            r0 = 74
            goto L_0x04b6
        L_0x048e:
            r14 = 58
            r1.setMax(r12)     // Catch:{ all -> 0x04ae }
            int r0 = r1.setMin     // Catch:{ all -> 0x04ae }
            if (r0 != 0) goto L_0x04b5
            r0 = 199(0xc7, float:2.79E-43)
            goto L_0x04b6
        L_0x049a:
            r14 = 58
            r0 = 7
            goto L_0x04b6
        L_0x049e:
            r14 = 58
            java.lang.String r0 = " ]\t  [origin: "
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04ae }
            goto L_0x03c5
        L_0x04a6:
            r14 = 58
            java.lang.String r0 = " ]  in "
            r1.IsOverlapping = r0     // Catch:{ all -> 0x04ae }
            goto L_0x03c5
        L_0x04ae:
            r0 = move-exception
            goto L_0x04bf
        L_0x04b0:
            r14 = 58
            r0 = 92
            goto L_0x04b6
        L_0x04b5:
            r0 = r10
        L_0x04b6:
            r11 = 58
        L_0x04b8:
            r14 = 11
            goto L_0x012d
        L_0x04bc:
            r0 = move-exception
            r14 = 58
        L_0x04bf:
            r4 = 20
            r5 = 108(0x6c, float:1.51E-43)
            if (r10 < r4) goto L_0x04d4
            r4 = 27
            if (r10 > r4) goto L_0x04d4
            r4 = 79
            r4 = 170(0xaa, float:2.38E-43)
            r5 = 79
        L_0x04cf:
            r11 = 208(0xd0, float:2.91E-43)
        L_0x04d1:
            r13 = 1
            goto L_0x065f
        L_0x04d4:
            byte[] r4 = setMin
            byte r11 = r4[r8]
            byte r11 = (byte) r11
            r12 = 15376(0x3c10, float:2.1546E-41)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r11, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04f8
            r4 = 19
            if (r10 < r4) goto L_0x04f8
            r4 = 27
            if (r10 > r4) goto L_0x04fa
            goto L_0x0504
        L_0x04f8:
            r4 = 27
        L_0x04fa:
            r11 = 34
            if (r10 < r11) goto L_0x0507
            r11 = 37
            if (r10 > r11) goto L_0x0507
            r5 = 30
        L_0x0504:
            r4 = 170(0xaa, float:2.38E-43)
            goto L_0x04cf
        L_0x0507:
            byte[] r11 = setMin
            byte r15 = r11[r8]
            byte r15 = (byte) r15
            r4 = 963(0x3c3, float:1.35E-42)
            short r4 = (short) r4
            r21 = 55
            byte r11 = r11[r21]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r4 = length(r15, r4, r11)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0530
            r4 = 56
            if (r10 < r4) goto L_0x0530
            r4 = 74
            if (r10 > r4) goto L_0x0530
        L_0x052b:
            r4 = 170(0xaa, float:2.38E-43)
        L_0x052d:
            r5 = 10
            goto L_0x04cf
        L_0x0530:
            byte[] r4 = setMin
            byte r11 = r4[r8]
            byte r11 = (byte) r11
            r15 = r11 | 2097(0x831, float:2.939E-42)
            short r15 = (short) r15
            r20 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r20]
            short r4 = (short) r4
            java.lang.String r4 = length(r11, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0554
            r4 = 69
            if (r10 < r4) goto L_0x0554
            r4 = 70
            if (r10 > r4) goto L_0x0554
            goto L_0x052b
        L_0x0554:
            r4 = 130(0x82, float:1.82E-43)
            if (r10 < r4) goto L_0x0561
            r4 = 133(0x85, float:1.86E-43)
            if (r10 > r4) goto L_0x0561
            r4 = 170(0xaa, float:2.38E-43)
            r5 = 6
            goto L_0x04cf
        L_0x0561:
            byte[] r4 = setMin
            byte r11 = r4[r8]
            byte r11 = (byte) r11
            r15 = r11 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r20 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r20]
            short r4 = (short) r4
            java.lang.String r4 = length(r11, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0586
            r4 = 156(0x9c, float:2.19E-43)
            if (r10 < r4) goto L_0x0586
            r4 = 170(0xaa, float:2.38E-43)
            if (r10 > r4) goto L_0x0586
        L_0x0584:
            goto L_0x04cf
        L_0x0586:
            byte[] r4 = setMin
            byte r11 = r4[r8]
            byte r11 = (byte) r11
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r11, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x05a5
            r4 = 164(0xa4, float:2.3E-43)
            if (r10 < r4) goto L_0x05a5
            r4 = 170(0xaa, float:2.38E-43)
            if (r10 > r4) goto L_0x05a7
            goto L_0x052d
        L_0x05a5:
            r4 = 170(0xaa, float:2.38E-43)
        L_0x05a7:
            byte[] r11 = setMin
            byte r12 = r11[r8]
            byte r12 = (byte) r12
            r15 = 9099(0x238b, float:1.275E-41)
            short r15 = (short) r15
            r19 = 4829(0x12dd, float:6.767E-42)
            byte r11 = r11[r19]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x05cf
            r11 = 201(0xc9, float:2.82E-43)
            if (r10 < r11) goto L_0x05cf
            r11 = 208(0xd0, float:2.91E-43)
            if (r10 > r11) goto L_0x05cf
        L_0x05cb:
            r5 = 10
            goto L_0x04d1
        L_0x05cf:
            byte[] r11 = setMin
            byte r12 = r11[r8]
            byte r12 = (byte) r12
            r19 = 4829(0x12dd, float:6.767E-42)
            byte r11 = r11[r19]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x05f2
            r11 = 202(0xca, float:2.83E-43)
            if (r10 < r11) goto L_0x05f2
            r11 = 208(0xd0, float:2.91E-43)
            if (r10 > r11) goto L_0x05f2
            goto L_0x04d1
        L_0x05f2:
            byte[] r11 = setMin
            byte r12 = r11[r8]
            byte r12 = (byte) r12
            r15 = r12 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r19 = 1197(0x4ad, float:1.677E-42)
            byte r11 = r11[r19]
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0617
            r11 = 203(0xcb, float:2.84E-43)
            if (r10 < r11) goto L_0x0617
            r11 = 204(0xcc, float:2.86E-43)
            if (r10 > r11) goto L_0x0617
            goto L_0x0584
        L_0x0617:
            byte[] r11 = setMin
            byte r12 = r11[r8]
            byte r12 = (byte) r12
            r15 = 14230(0x3796, float:1.994E-41)
            short r15 = (short) r15
            byte r11 = r11[r13]
            r17 = 1
            int r11 = r11 + -1
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x063d
            r11 = 205(0xcd, float:2.87E-43)
            if (r10 < r11) goto L_0x063d
            r11 = 208(0xd0, float:2.91E-43)
            if (r10 > r11) goto L_0x063f
            goto L_0x05cb
        L_0x063d:
            r11 = 208(0xd0, float:2.91E-43)
        L_0x063f:
            byte[] r6 = setMin
            byte r12 = r6[r8]
            byte r12 = (byte) r12
            byte r6 = r6[r13]
            r13 = 1
            int r6 = r6 - r13
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r15, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0669
            r6 = 206(0xce, float:2.89E-43)
            if (r10 < r6) goto L_0x0669
            r6 = 207(0xcf, float:2.9E-43)
            if (r10 > r6) goto L_0x0669
        L_0x065f:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r0 = r5
            goto L_0x04b6
        L_0x0669:
            throw r0
        L_0x066a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0672
            throw r1
        L_0x0672:
            goto L_0x0674
        L_0x0673:
            throw r0
        L_0x0674:
            goto L_0x0673
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.getPhoneNumber(java.lang.String, java.lang.String):java.lang.String");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:169:0x04ac, code lost:
        if (r10 <= 133) goto L_0x03e5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:176:0x04d3, code lost:
        if (r10 <= 133) goto L_0x03e5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x0160, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x01b0, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x02f0, code lost:
        r7 = 36;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:89:0x02f4, code lost:
        r7 = 41;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public o.TitleBarRightButtonView.AnonymousClass4<o.setEventName> initAccount(o.setEventName r21) {
        /*
            r20 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r20
            r0 = r21
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 3589(0xe05, float:5.029E-42)
            short r3 = (short) r3
            r4 = 557(0x22d, float:7.8E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0533 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0533 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0533 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0533 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0533 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0533 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0533 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0533 }
            short r10 = (short) r10     // Catch:{ all -> 0x0533 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0533 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0533 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0533 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0533 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0533 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0533 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0533 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0533 }
            short r13 = (short) r13     // Catch:{ all -> 0x0533 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0533 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0533 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0533 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0533 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0533 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0533 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0533 }
            short r14 = (short) r14     // Catch:{ all -> 0x0533 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0533 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0533 }
            r12[r7] = r13     // Catch:{ all -> 0x0533 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0533 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0533 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0533 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0127
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011e }
            r12[r7] = r10     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x011e }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011e }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011e }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011e }
            short r14 = (short) r14     // Catch:{ all -> 0x011e }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011e }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011e }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011e }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011e }
            short r6 = (short) r6     // Catch:{ all -> 0x011e }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011e }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011e }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011e }
            short r4 = (short) r4     // Catch:{ all -> 0x011e }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011e }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011e }
            r14[r7] = r4     // Catch:{ all -> 0x011e }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011e }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x0115 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0115 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0115 }
            short r12 = (short) r12     // Catch:{ all -> 0x0115 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0115 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0115 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0115 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0115 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0115 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0115 }
            short r14 = (short) r14     // Catch:{ all -> 0x0115 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0115 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0115 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0115 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0083
        L_0x0115:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011d
            throw r1
        L_0x011d:
            throw r0
        L_0x011e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0126
            throw r1
        L_0x0126:
            throw r0
        L_0x0127:
            r4 = 28
            r9 = 2
        L_0x012a:
            int r10 = r7 + 1
            r11 = 33
            r12 = 36
            r13 = 34
            r0 = r3[r7]     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0396 }
            r14 = 10
            r15 = 22
            r7 = 24
            r5 = 18
            r6 = 23
            switch(r0) {
                case -52: goto L_0x038f;
                case -51: goto L_0x038b;
                case -50: goto L_0x0387;
                case -49: goto L_0x037a;
                case -48: goto L_0x0370;
                case -47: goto L_0x036c;
                case -46: goto L_0x0368;
                case -45: goto L_0x035b;
                case -44: goto L_0x0357;
                case -43: goto L_0x0353;
                case -42: goto L_0x0346;
                case -41: goto L_0x0343;
                case -40: goto L_0x0328;
                case -39: goto L_0x0312;
                case -38: goto L_0x02f8;
                case -37: goto L_0x02e2;
                case -36: goto L_0x02de;
                case -35: goto L_0x02d5;
                case -34: goto L_0x02d1;
                case -33: goto L_0x02cd;
                case -32: goto L_0x02c0;
                case -31: goto L_0x02af;
                case -30: goto L_0x02a9;
                case -29: goto L_0x02a5;
                case -28: goto L_0x02a1;
                case -27: goto L_0x029d;
                case -26: goto L_0x0290;
                case -25: goto L_0x027d;
                case -24: goto L_0x027a;
                case -23: goto L_0x0271;
                case -22: goto L_0x025e;
                case -21: goto L_0x025a;
                case -20: goto L_0x0256;
                case -19: goto L_0x023e;
                case -18: goto L_0x022b;
                case -17: goto L_0x0219;
                case -16: goto L_0x0215;
                case -15: goto L_0x0211;
                case -14: goto L_0x01ff;
                case -13: goto L_0x01fb;
                case -12: goto L_0x01e1;
                case -11: goto L_0x01cd;
                case -10: goto L_0x01b5;
                case -9: goto L_0x019f;
                case -8: goto L_0x0188;
                case -7: goto L_0x0185;
                case -6: goto L_0x0182;
                case -5: goto L_0x0176;
                case -4: goto L_0x0165;
                case -3: goto L_0x015c;
                case -2: goto L_0x014a;
                case -1: goto L_0x0147;
                default: goto L_0x0145;
            }     // Catch:{ all -> 0x0396 }
        L_0x0145:
            goto L_0x0393
        L_0x0147:
            r7 = 149(0x95, float:2.09E-43)
            goto L_0x012a
        L_0x014a:
            r1.setMax(r13)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 == 0) goto L_0x0157
            r5 = 1
            r0 = 63
            r7 = 63
            goto L_0x012a
        L_0x0157:
            r0 = 116(0x74, float:1.63E-43)
            r7 = 116(0x74, float:1.63E-43)
            goto L_0x012a
        L_0x015c:
            int r0 = setMax     // Catch:{ all -> 0x0396 }
            r1.getMin = r0     // Catch:{ all -> 0x0396 }
        L_0x0160:
            r1.setMax(r14)     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x0165:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            getMin = r0     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x0176:
            r1.setMax(r15)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 26
            r7 = 26
            goto L_0x012a
        L_0x0182:
            r7 = 39
            goto L_0x012a
        L_0x0185:
            r7 = 50
            goto L_0x012a
        L_0x0188:
            r1.setMax(r13)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            r5 = 6
            if (r0 == r5) goto L_0x019a
            r5 = 38
            if (r0 == r5) goto L_0x0195
            goto L_0x019a
        L_0x0195:
            r0 = 158(0x9e, float:2.21E-43)
            r7 = 158(0x9e, float:2.21E-43)
            goto L_0x012a
        L_0x019a:
            r0 = 54
            r7 = 54
            goto L_0x012a
        L_0x019f:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0396 }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
        L_0x01b0:
            r1.setMax(r7)     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x01b5:
            r1.getMin = r9     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.BackKeyDownPoint r0 = (o.BackKeyDownPoint) r0     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x0396 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x0396 }
            o.getBadgeList.setUserId(r0, r5)     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x01cd:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0396 }
            o.setDrawDivider r0 = r0.createAccountData()     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x01e1:
            r1.getMin = r9     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.setDrawDivider r0 = (o.setDrawDivider) r0     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x0396 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x0396 }
            o.TitleBarRightButtonView$1 r0 = r0.init(r5)     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x01fb:
            r7 = 110(0x6e, float:1.54E-43)
            goto L_0x012a
        L_0x01ff:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x0211:
            r7 = 134(0x86, float:1.88E-43)
            goto L_0x012a
        L_0x0215:
            r7 = 27
            goto L_0x012a
        L_0x0219:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0396 }
            o.BackKeyDownPoint r0 = r0.securityGuardFacade     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x022b:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0396 }
            java.lang.String r0 = r0.clientKey     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x023e:
            r1.getMin = r9     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.BackKeyDownPoint r0 = (o.BackKeyDownPoint) r0     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x0396 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x0396 }
            o.getBadgeList.setClientKey(r0, r5)     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x0256:
            r7 = 70
            goto L_0x012a
        L_0x025a:
            r7 = 109(0x6d, float:1.53E-43)
            goto L_0x012a
        L_0x025e:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0396 }
            r1.getMin = r0     // Catch:{ all -> 0x0396 }
            goto L_0x0160
        L_0x0271:
            r5 = 1
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0396 }
            return r0
        L_0x027a:
            r7 = 1
            goto L_0x012a
        L_0x027d:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0396 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0396 }
            r1.getMin = r0     // Catch:{ all -> 0x0396 }
            goto L_0x0160
        L_0x0290:
            r1.setMax(r15)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 67
            r7 = 67
            goto L_0x012a
        L_0x029d:
            r7 = 103(0x67, float:1.44E-43)
            goto L_0x012a
        L_0x02a1:
            r7 = 100
            goto L_0x012a
        L_0x02a5:
            r7 = 133(0x85, float:1.86E-43)
            goto L_0x012a
        L_0x02a9:
            int r0 = getMin     // Catch:{ all -> 0x0396 }
            r1.getMin = r0     // Catch:{ all -> 0x0396 }
            goto L_0x0160
        L_0x02af:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            setMax = r0     // Catch:{ all -> 0x0396 }
            goto L_0x0393
        L_0x02c0:
            r1.setMax(r11)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 97
            r7 = 97
            goto L_0x012a
        L_0x02cd:
            r7 = 99
            goto L_0x012a
        L_0x02d1:
            r7 = 28
            goto L_0x012a
        L_0x02d5:
            r5 = 1
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0396 }
            throw r0     // Catch:{ all -> 0x0396 }
        L_0x02de:
            r7 = 102(0x66, float:1.43E-43)
            goto L_0x012a
        L_0x02e2:
            r1.setMax(r13)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            r5 = 11
            if (r0 == r5) goto L_0x02f4
            r5 = 95
            if (r0 == r5) goto L_0x02f0
            goto L_0x02f4
        L_0x02f0:
            r7 = 36
            goto L_0x012a
        L_0x02f4:
            r7 = 41
            goto L_0x012a
        L_0x02f8:
            r1.setMax(r13)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            r5 = 20
            if (r0 == r5) goto L_0x030c
            r5 = 57
            if (r0 == r5) goto L_0x0306
            goto L_0x030c
        L_0x0306:
            r0 = 114(0x72, float:1.6E-43)
            r7 = 114(0x72, float:1.6E-43)
            goto L_0x012a
        L_0x030c:
            r0 = 154(0x9a, float:2.16E-43)
            r7 = 154(0x9a, float:2.16E-43)
            goto L_0x012a
        L_0x0312:
            o.AppLogUtils r0 = new o.AppLogUtils     // Catch:{ all -> 0x0396 }
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.setEventName r5 = (o.setEventName) r5     // Catch:{ all -> 0x0396 }
            r0.<init>(r5)     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x0328:
            r1.getMin = r9     // Catch:{ all -> 0x0396 }
            r1.setMax(r5)     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0396 }
            r1.setMax(r6)     // Catch:{ all -> 0x0396 }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x0396 }
            o.RedDotDrawable r5 = (o.RedDotDrawable) r5     // Catch:{ all -> 0x0396 }
            o.TitleBarRightButtonView$1 r0 = r0.concatMap(r5)     // Catch:{ all -> 0x0396 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0396 }
            goto L_0x01b0
        L_0x0343:
            r7 = 2
            goto L_0x012a
        L_0x0346:
            r1.setMax(r15)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 122(0x7a, float:1.71E-43)
            r7 = 122(0x7a, float:1.71E-43)
            goto L_0x012a
        L_0x0353:
            r7 = 152(0x98, float:2.13E-43)
            goto L_0x012a
        L_0x0357:
            r7 = 68
            goto L_0x012a
        L_0x035b:
            r1.setMax(r11)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 132(0x84, float:1.85E-43)
            r7 = 132(0x84, float:1.85E-43)
            goto L_0x012a
        L_0x0368:
            r7 = 107(0x6b, float:1.5E-43)
            goto L_0x012a
        L_0x036c:
            r7 = 61
            goto L_0x012a
        L_0x0370:
            r1.setMax(r13)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 == 0) goto L_0x02f4
            r5 = 1
            goto L_0x02f0
        L_0x037a:
            r1.setMax(r15)     // Catch:{ all -> 0x0396 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0396 }
            if (r0 != 0) goto L_0x0393
            r0 = 148(0x94, float:2.07E-43)
            r7 = 148(0x94, float:2.07E-43)
            goto L_0x012a
        L_0x0387:
            r7 = 52
            goto L_0x012a
        L_0x038b:
            r7 = 59
            goto L_0x012a
        L_0x038f:
            r7 = 123(0x7b, float:1.72E-43)
            goto L_0x012a
        L_0x0393:
            r7 = r10
            goto L_0x012a
        L_0x0396:
            r0 = move-exception
            byte[] r5 = setMin
            byte r5 = r5[r8]
            byte r5 = (byte) r5
            r6 = 15410(0x3c32, float:2.1594E-41)
            short r6 = (short) r6
            r7 = r6 & 239(0xef, float:3.35E-43)
            short r7 = (short) r7
            java.lang.String r5 = length(r5, r6, r7)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            r15 = 105(0x69, float:1.47E-43)
            if (r5 == 0) goto L_0x03bf
            if (r10 < r4) goto L_0x03bf
            if (r10 > r12) goto L_0x03bf
        L_0x03b6:
            r4 = 123(0x7b, float:1.72E-43)
            r5 = 133(0x85, float:1.86E-43)
            r7 = 161(0xa1, float:2.26E-43)
        L_0x03bc:
            r9 = 1
            goto L_0x0529
        L_0x03bf:
            byte[] r5 = setMin
            byte r4 = r5[r8]
            byte r4 = (byte) r4
            r9 = 9099(0x238b, float:1.275E-41)
            short r9 = (short) r9
            r18 = 4829(0x12dd, float:6.767E-42)
            byte r5 = r5[r18]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r4 = length(r4, r9, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e8
            r4 = 29
            if (r10 < r4) goto L_0x03e8
            if (r10 > r12) goto L_0x03e8
        L_0x03e1:
            r4 = 123(0x7b, float:1.72E-43)
            r5 = 133(0x85, float:1.86E-43)
        L_0x03e5:
            r7 = 105(0x69, float:1.47E-43)
            goto L_0x03bc
        L_0x03e8:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r14 = r5 | 4944(0x1350, float:6.928E-42)
            short r14 = (short) r14
            r19 = 13
            byte r4 = r4[r19]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0409
            if (r10 < r11) goto L_0x0409
            if (r10 > r13) goto L_0x0409
            goto L_0x03b6
        L_0x0409:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r11 = r5 | 2097(0x831, float:2.939E-42)
            short r11 = (short) r11
            r14 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r14]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0429
            if (r10 < r13) goto L_0x0429
            if (r10 > r12) goto L_0x0429
            goto L_0x03e1
        L_0x0429:
            r4 = 55
            if (r10 < r4) goto L_0x043a
            r4 = 59
            if (r10 > r4) goto L_0x043a
            r4 = 160(0xa0, float:2.24E-43)
            r4 = 123(0x7b, float:1.72E-43)
            r5 = 133(0x85, float:1.86E-43)
            r7 = 160(0xa0, float:2.24E-43)
            goto L_0x03bc
        L_0x043a:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r11 = 14230(0x3796, float:1.994E-41)
            short r11 = (short) r11
            r12 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r12]
            r12 = 1
            int r4 = r4 - r12
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0460
            r4 = 70
            if (r10 < r4) goto L_0x0460
            r4 = 98
            if (r10 > r4) goto L_0x0460
            goto L_0x03e1
        L_0x0460:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            byte r4 = r4[r18]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r9, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0481
            r4 = 93
            if (r10 < r4) goto L_0x0481
            r4 = 94
            if (r10 > r4) goto L_0x0481
            goto L_0x03e1
        L_0x0481:
            r4 = 118(0x76, float:1.65E-43)
            if (r10 < r4) goto L_0x0493
            r4 = 123(0x7b, float:1.72E-43)
            if (r10 > r4) goto L_0x0493
            r4 = 106(0x6a, float:1.49E-43)
            r4 = 123(0x7b, float:1.72E-43)
            r5 = 133(0x85, float:1.86E-43)
            r7 = 106(0x6a, float:1.49E-43)
            goto L_0x03bc
        L_0x0493:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            java.lang.String r4 = length(r4, r6, r7)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04b0
            r4 = 123(0x7b, float:1.72E-43)
            if (r10 < r4) goto L_0x04b2
            r5 = 133(0x85, float:1.86E-43)
            if (r10 > r5) goto L_0x04b2
        L_0x04ae:
            goto L_0x03e5
        L_0x04b0:
            r4 = 123(0x7b, float:1.72E-43)
        L_0x04b2:
            byte[] r5 = setMin
            byte r6 = r5[r8]
            byte r6 = (byte) r6
            r7 = r6 | 2097(0x831, float:2.939E-42)
            short r7 = (short) r7
            r12 = 9575(0x2567, float:1.3417E-41)
            byte r5 = r5[r12]
            short r5 = (short) r5
            java.lang.String r5 = length(r6, r7, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x04d6
            r5 = 128(0x80, float:1.794E-43)
            if (r10 < r5) goto L_0x04d6
            r5 = 133(0x85, float:1.86E-43)
            if (r10 > r5) goto L_0x04d8
        L_0x04d5:
            goto L_0x04ae
        L_0x04d6:
            r5 = 133(0x85, float:1.86E-43)
        L_0x04d8:
            byte[] r6 = setMin
            byte r7 = r6[r8]
            byte r7 = (byte) r7
            byte r6 = r6[r18]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r7, r9, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x04f8
            r6 = 134(0x86, float:1.88E-43)
            if (r10 < r6) goto L_0x04f8
            r6 = 135(0x87, float:1.89E-43)
            if (r10 > r6) goto L_0x04f8
            goto L_0x04d5
        L_0x04f8:
            byte[] r6 = setMin
            byte r7 = r6[r8]
            byte r7 = (byte) r7
            r9 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r9]
            r9 = 1
            int r6 = r6 - r9
            short r6 = (short) r6
            java.lang.String r6 = length(r7, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x051d
            r6 = 144(0x90, float:2.02E-43)
            if (r10 < r6) goto L_0x051d
            r6 = 149(0x95, float:2.09E-43)
            if (r10 > r6) goto L_0x051d
            r7 = 161(0xa1, float:2.26E-43)
            goto L_0x0529
        L_0x051d:
            r6 = 155(0x9b, float:2.17E-43)
            if (r10 < r6) goto L_0x0532
            r6 = 158(0x9e, float:2.21E-43)
            if (r10 > r6) goto L_0x0532
            r6 = 98
            r7 = 98
        L_0x0529:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x0127
        L_0x0532:
            throw r0
        L_0x0533:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x053b
            throw r1
        L_0x053b:
            goto L_0x053d
        L_0x053c:
            throw r0
        L_0x053d:
            goto L_0x053c
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.initAccount(o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:109:0x02ad, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x02d3, code lost:
        r7 = r11;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:33:0x015a, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:52:0x01b4, code lost:
        r1.setMax(24);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public o.TitleBarRightButtonView.AnonymousClass4<o.setEventName> initNotification(o.setEventName r20) {
        /*
            r19 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r19
            r0 = r20
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = r0 | 8992(0x2320, float:1.26E-41)
            short r3 = (short) r3
            r4 = 389(0x185, float:5.45E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0453 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0453 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0453 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0453 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0453 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0453 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0453 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0453 }
            short r10 = (short) r10     // Catch:{ all -> 0x0453 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0453 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0453 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0453 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0453 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0453 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0453 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0453 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0453 }
            short r13 = (short) r13     // Catch:{ all -> 0x0453 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0453 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0453 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0453 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0453 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0453 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0453 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0453 }
            short r14 = (short) r14     // Catch:{ all -> 0x0453 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0453 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0453 }
            r12[r7] = r13     // Catch:{ all -> 0x0453 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0453 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0453 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0453 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0127
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011e }
            r12[r7] = r10     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x011e }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011e }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011e }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011e }
            short r14 = (short) r14     // Catch:{ all -> 0x011e }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011e }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011e }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011e }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011e }
            short r6 = (short) r6     // Catch:{ all -> 0x011e }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011e }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011e }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011e }
            short r4 = (short) r4     // Catch:{ all -> 0x011e }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011e }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011e }
            r14[r7] = r4     // Catch:{ all -> 0x011e }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011e }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x0115 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0115 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0115 }
            short r12 = (short) r12     // Catch:{ all -> 0x0115 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0115 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0115 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0115 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0115 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0115 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0115 }
            short r14 = (short) r14     // Catch:{ all -> 0x0115 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0115 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0115 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0115 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0083
        L_0x0115:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011d
            throw r1
        L_0x011d:
            throw r0
        L_0x011e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0126
            throw r1
        L_0x0126:
            throw r0
        L_0x0127:
            r5 = 50
            r6 = 3
            r10 = 34
        L_0x012c:
            int r11 = r7 + 1
            r12 = 56
            r13 = 2
            r0 = r3[r7]     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x02d6 }
            r7 = 22
            r14 = 10
            r15 = 24
            r4 = 18
            r9 = 23
            switch(r0) {
                case -34: goto L_0x02cf;
                case -33: goto L_0x02b1;
                case -32: goto L_0x029a;
                case -31: goto L_0x0285;
                case -30: goto L_0x0281;
                case -29: goto L_0x026e;
                case -28: goto L_0x026a;
                case -27: goto L_0x0266;
                case -26: goto L_0x0259;
                case -25: goto L_0x0246;
                case -24: goto L_0x0243;
                case -23: goto L_0x023f;
                case -22: goto L_0x0227;
                case -21: goto L_0x0224;
                case -20: goto L_0x0215;
                case -19: goto L_0x0204;
                case -18: goto L_0x01fe;
                case -17: goto L_0x01eb;
                case -16: goto L_0x01e7;
                case -15: goto L_0x01cd;
                case -14: goto L_0x01b8;
                case -13: goto L_0x019b;
                case -12: goto L_0x0198;
                case -11: goto L_0x0195;
                case -10: goto L_0x0189;
                case -9: goto L_0x0180;
                case -8: goto L_0x017d;
                case -7: goto L_0x017a;
                case -6: goto L_0x016e;
                case -5: goto L_0x015e;
                case -4: goto L_0x0156;
                case -3: goto L_0x014d;
                case -2: goto L_0x014a;
                case -1: goto L_0x0147;
                default: goto L_0x0144;
            }     // Catch:{ all -> 0x02d6 }
        L_0x0144:
            r7 = 1
            goto L_0x02d3
        L_0x0147:
            r7 = 91
            goto L_0x012c
        L_0x014a:
            r7 = 32
            goto L_0x012c
        L_0x014d:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x02d6 }
            throw r0     // Catch:{ all -> 0x02d6 }
        L_0x0156:
            int r0 = setMax     // Catch:{ all -> 0x02d6 }
            r1.getMin = r0     // Catch:{ all -> 0x02d6 }
        L_0x015a:
            r1.setMax(r14)     // Catch:{ all -> 0x02d6 }
            goto L_0x0144
        L_0x015e:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            getMin = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x0144
        L_0x016e:
            r1.setMax(r7)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            if (r0 != 0) goto L_0x02d3
            r0 = 30
            r7 = 30
            goto L_0x012c
        L_0x017a:
            r7 = 116(0x74, float:1.63E-43)
            goto L_0x012c
        L_0x017d:
            r7 = 94
            goto L_0x012c
        L_0x0180:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x02d6 }
            return r0
        L_0x0189:
            r1.setMax(r7)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            if (r0 != 0) goto L_0x02d3
            r0 = 47
            r7 = 47
            goto L_0x012c
        L_0x0195:
            r7 = 89
            goto L_0x012c
        L_0x0198:
            r7 = 114(0x72, float:1.6E-43)
            goto L_0x012c
        L_0x019b:
            r1.getMin = r13     // Catch:{ all -> 0x02d6 }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$1 r0 = r0.flatMap(r4)     // Catch:{ all -> 0x02d6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d6 }
        L_0x01b4:
            r1.setMax(r15)     // Catch:{ all -> 0x02d6 }
            goto L_0x0144
        L_0x01b8:
            o.ApiLog$Builder r0 = new o.ApiLog$Builder     // Catch:{ all -> 0x02d6 }
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.setEventName r4 = (o.setEventName) r4     // Catch:{ all -> 0x02d6 }
            r0.<init>(r4)     // Catch:{ all -> 0x02d6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x01b4
        L_0x01cd:
            r1.getMin = r13     // Catch:{ all -> 0x02d6 }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$1 r0 = r0.onErrorReturn(r4)     // Catch:{ all -> 0x02d6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x01b4
        L_0x01e7:
            r7 = 61
            goto L_0x012c
        L_0x01eb:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x02d6 }
            r1.getMin = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x015a
        L_0x01fe:
            int r0 = getMin     // Catch:{ all -> 0x02d6 }
            r1.getMin = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x015a
        L_0x0204:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            setMax = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x0144
        L_0x0215:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            if (r0 != 0) goto L_0x02d3
            r0 = 87
            r7 = 87
            goto L_0x012c
        L_0x0224:
            r7 = 1
            goto L_0x012c
        L_0x0227:
            r1.setMax(r10)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            r4 = 71
            if (r0 == r4) goto L_0x023b
            r4 = 76
            if (r0 == r4) goto L_0x0235
            goto L_0x023b
        L_0x0235:
            r0 = 48
            r7 = 48
            goto L_0x012c
        L_0x023b:
            r7 = 56
            goto L_0x012c
        L_0x023f:
            r7 = 88
            goto L_0x012c
        L_0x0243:
            r7 = 3
            goto L_0x012c
        L_0x0246:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x02d6 }
            boolean r0 = r0.success     // Catch:{ all -> 0x02d6 }
            r1.getMin = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x015a
        L_0x0259:
            r1.setMax(r7)     // Catch:{ all -> 0x02d6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02d6 }
            if (r0 != 0) goto L_0x02d3
            r0 = 98
            r7 = 98
            goto L_0x012c
        L_0x0266:
            r7 = 103(0x67, float:1.44E-43)
            goto L_0x012c
        L_0x026a:
            r7 = 100
            goto L_0x012c
        L_0x026e:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x02d6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x01b4
        L_0x0281:
            r7 = 34
            goto L_0x012c
        L_0x0285:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02d6 }
            r1.setMax(r9)     // Catch:{ all -> 0x02d6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02d6 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x02d6 }
            o.isInDownloadPath r0 = r0.createGeneralPreferences()     // Catch:{ all -> 0x02d6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02d6 }
            goto L_0x01b4
        L_0x029a:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02cd }
            r1.setMax(r9)     // Catch:{ all -> 0x02cd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02cd }
            o.isInDownloadPath r0 = (o.isInDownloadPath) r0     // Catch:{ all -> 0x02cd }
            o.TitleBarRightButtonView$1 r0 = r0.getRegistrationTokenStatus()     // Catch:{ all -> 0x02cd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02cd }
        L_0x02ad:
            r1.setMax(r15)     // Catch:{ all -> 0x02cd }
            goto L_0x02d3
        L_0x02b1:
            r7 = 1
            o.setPageLogToken r0 = new o.setPageLogToken     // Catch:{ all -> 0x02cd }
            r1.getMin = r13     // Catch:{ all -> 0x02cd }
            r1.setMax(r4)     // Catch:{ all -> 0x02cd }
            r1.setMax(r9)     // Catch:{ all -> 0x02cd }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02cd }
            o.lock r4 = (o.lock) r4     // Catch:{ all -> 0x02cd }
            r1.setMax(r9)     // Catch:{ all -> 0x02cd }
            java.lang.Object r9 = r1.isInside     // Catch:{ all -> 0x02cd }
            o.setEventName r9 = (o.setEventName) r9     // Catch:{ all -> 0x02cd }
            r0.<init>(r4, r9)     // Catch:{ all -> 0x02cd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02cd }
            goto L_0x02ad
        L_0x02cd:
            r0 = move-exception
            goto L_0x02d8
        L_0x02cf:
            r7 = 50
            goto L_0x012c
        L_0x02d3:
            r7 = r11
            goto L_0x012c
        L_0x02d6:
            r0 = move-exception
            r7 = 1
        L_0x02d8:
            byte[] r4 = setMin
            byte r9 = r4[r8]
            byte r9 = (byte) r9
            r14 = 1451(0x5ab, float:2.033E-42)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r9, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r9 = 31
            if (r4 == 0) goto L_0x0300
            if (r11 < r6) goto L_0x0300
            r4 = 4
            if (r11 > r4) goto L_0x0300
        L_0x02fa:
            r4 = 61
        L_0x02fc:
            r6 = 114(0x72, float:1.6E-43)
            goto L_0x0447
        L_0x0300:
            byte[] r4 = setMin
            byte r14 = r4[r8]
            byte r14 = (byte) r14
            r6 = r14 | 4944(0x1350, float:6.928E-42)
            short r6 = (short) r6
            r18 = 13
            byte r4 = r4[r18]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r14, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0323
            r4 = 25
            if (r11 < r4) goto L_0x0323
            if (r11 > r9) goto L_0x0323
            goto L_0x02fa
        L_0x0323:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r14 = r6 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            r18 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0345
            if (r11 < r10) goto L_0x0345
            r4 = 48
            if (r11 > r4) goto L_0x0345
            goto L_0x02fa
        L_0x0345:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r14 = r6 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0367
            r4 = 43
            if (r11 < r4) goto L_0x0367
            r4 = 44
            if (r11 > r4) goto L_0x0367
            goto L_0x02fa
        L_0x0367:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r14 = r6 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0386
            if (r11 < r5) goto L_0x0386
            if (r11 > r12) goto L_0x0386
            goto L_0x02fa
        L_0x0386:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r12 = 15376(0x3c10, float:2.1546E-41)
            short r12 = (short) r12
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03b1
            r4 = 54
            if (r11 < r4) goto L_0x03b1
            r4 = 55
            if (r11 > r4) goto L_0x03b1
            r4 = 99
            r4 = 61
        L_0x03ab:
            r6 = 114(0x72, float:1.6E-43)
            r13 = 99
            goto L_0x0447
        L_0x03b1:
            r4 = 57
            if (r11 < r4) goto L_0x03bf
            r4 = 61
            if (r11 > r4) goto L_0x03bf
            r6 = 114(0x72, float:1.6E-43)
            r13 = 31
            goto L_0x0447
        L_0x03bf:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e0
            r4 = 61
            if (r11 < r4) goto L_0x03e2
            r6 = 62
            if (r11 > r6) goto L_0x03e2
            r6 = 99
            goto L_0x03ab
        L_0x03e0:
            r4 = 61
        L_0x03e2:
            byte[] r6 = setMin
            byte r9 = r6[r8]
            byte r9 = (byte) r9
            byte r6 = r6[r15]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0402
            r6 = 82
            if (r11 < r6) goto L_0x0402
            r6 = 83
            if (r11 > r6) goto L_0x0402
        L_0x0400:
            goto L_0x02fc
        L_0x0402:
            byte[] r6 = setMin
            byte r9 = r6[r8]
            byte r9 = (byte) r9
            r12 = r9 | 2097(0x831, float:2.939E-42)
            short r12 = (short) r12
            byte r6 = r6[r18]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0424
            r6 = 101(0x65, float:1.42E-43)
            if (r11 < r6) goto L_0x0424
            r6 = 102(0x66, float:1.43E-43)
            if (r11 > r6) goto L_0x0424
            goto L_0x0400
        L_0x0424:
            byte[] r6 = setMin
            byte r9 = r6[r8]
            byte r9 = (byte) r9
            r12 = r9 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            r14 = 1197(0x4ad, float:1.677E-42)
            byte r6 = r6[r14]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0452
            r6 = 105(0x69, float:1.47E-43)
            if (r11 < r6) goto L_0x0452
            r6 = 114(0x72, float:1.6E-43)
            if (r11 > r6) goto L_0x0452
        L_0x0447:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r7 = r13
            r6 = 3
            goto L_0x012c
        L_0x0452:
            throw r0
        L_0x0453:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x045b
            throw r1
        L_0x045b:
            goto L_0x045d
        L_0x045c:
            throw r0
        L_0x045d:
            goto L_0x045c
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.initNotification(o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:119:0x0350, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:153:0x0449, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:199:0x0532, code lost:
        if (r13 <= 141) goto L_0x04cc;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:217:0x0586, code lost:
        if (r13 <= 149) goto L_0x065c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:0x0175, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x0194, code lost:
        r0 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:72:0x0215, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x0364 A[Catch:{ all -> 0x03c6, all -> 0x0355, all -> 0x04ac }] */
    /* JADX WARNING: Removed duplicated region for block: B:129:0x0365 A[Catch:{ all -> 0x03c6, all -> 0x0355, all -> 0x04ac }] */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x04c8  */
    /* JADX WARNING: Removed duplicated region for block: B:181:0x04cf  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkRegistration$0(java.lang.String r22, java.lang.String r23, java.lang.String r24, o.EventLog r25) throws java.lang.Exception {
        /*
            r21 = this;
            o.getGroupId r7 = new o.getGroupId
            r1 = r7
            r2 = r21
            r3 = r22
            r4 = r23
            r5 = r24
            r6 = r25
            r1.<init>(r2, r3, r4, r5, r6)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 13605(0x3525, float:1.9065E-41)
            short r1 = (short) r1
            r2 = 880(0x370, float:1.233E-42)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x0667 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x0667 }
            byte[] r1 = setMin     // Catch:{ all -> 0x0667 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x0667 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x0667 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0667 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0667 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0667 }
            short r9 = (short) r9     // Catch:{ all -> 0x0667 }
            java.lang.String r1 = length(r1, r8, r9)     // Catch:{ all -> 0x0667 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0667 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0667 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0667 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0667 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0667 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0667 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0667 }
            short r12 = (short) r12     // Catch:{ all -> 0x0667 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0667 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0667 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0667 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0667 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0667 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0667 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0667 }
            short r13 = (short) r13     // Catch:{ all -> 0x0667 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0667 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0667 }
            r11[r5] = r12     // Catch:{ all -> 0x0667 }
            java.lang.reflect.Method r1 = r1.getMethod(r9, r11)     // Catch:{ all -> 0x0667 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x0667 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0667 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008a:
            int r9 = r0.length
            r11 = 0
            if (r3 >= r9) goto L_0x012e
            r9 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x0125 }
            r12[r5] = r9     // Catch:{ all -> 0x0125 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0125 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x0125 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0125 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0125 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0125 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0125 }
            short r14 = (short) r14     // Catch:{ all -> 0x0125 }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x0125 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0125 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0125 }
            byte r14 = r14[r4]     // Catch:{ all -> 0x0125 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0125 }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0125 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0125 }
            r17 = 52
            byte r4 = r16[r17]     // Catch:{ all -> 0x0125 }
            short r4 = (short) r4     // Catch:{ all -> 0x0125 }
            java.lang.String r4 = length(r14, r15, r4)     // Catch:{ all -> 0x0125 }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x0125 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0125 }
            byte r15 = r15[r6]     // Catch:{ all -> 0x0125 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0125 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0125 }
            byte r2 = r16[r10]     // Catch:{ all -> 0x0125 }
            short r2 = (short) r2     // Catch:{ all -> 0x0125 }
            java.lang.String r2 = length(r15, r8, r2)     // Catch:{ all -> 0x0125 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0125 }
            r14[r5] = r2     // Catch:{ all -> 0x0125 }
            java.lang.reflect.Method r2 = r9.getMethod(r4, r14)     // Catch:{ all -> 0x0125 }
            java.lang.Object r2 = r2.invoke(r11, r12)     // Catch:{ all -> 0x0125 }
            byte[] r4 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r4[r6]     // Catch:{ all -> 0x011c }
            byte r4 = (byte) r4     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r9 = r9[r12]     // Catch:{ all -> 0x011c }
            short r9 = (short) r9     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r4, r13, r9)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            r12 = 102(0x66, float:1.43E-43)
            byte r9 = r9[r12]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r4.getMethod(r9, r11)     // Catch:{ all -> 0x011c }
            java.lang.Object r2 = r4.invoke(r2, r11)     // Catch:{ all -> 0x011c }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x011c }
            int r2 = r2.intValue()     // Catch:{ all -> 0x011c }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            goto L_0x008a
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012d
            throw r1
        L_0x012d:
            throw r0
        L_0x012e:
            r4 = 33
            r12 = 2
            r0 = 0
        L_0x0132:
            int r13 = r0 + 1
            r0 = r1[r0]     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMax(r0)     // Catch:{ all -> 0x04b9 }
            r15 = 10
            r2 = 22
            r14 = 34
            r3 = 24
            r9 = 18
            r11 = 23
            switch(r0) {
                case -67: goto L_0x04ae;
                case -66: goto L_0x04a0;
                case -65: goto L_0x049b;
                case -64: goto L_0x0496;
                case -63: goto L_0x048a;
                case -62: goto L_0x0472;
                case -61: goto L_0x045d;
                case -60: goto L_0x044d;
                case -59: goto L_0x0436;
                case -58: goto L_0x0430;
                case -57: goto L_0x0428;
                case -56: goto L_0x040e;
                case -55: goto L_0x0408;
                case -54: goto L_0x0402;
                case -53: goto L_0x03fc;
                case -52: goto L_0x03ef;
                case -51: goto L_0x03e9;
                case -50: goto L_0x03cf;
                case -49: goto L_0x0366;
                case -48: goto L_0x02f5;
                case -47: goto L_0x02f1;
                case -46: goto L_0x02d9;
                case -45: goto L_0x02d6;
                case -44: goto L_0x02d3;
                case -43: goto L_0x02cf;
                case -42: goto L_0x02c4;
                case -41: goto L_0x02b1;
                case -40: goto L_0x02ad;
                case -39: goto L_0x02a9;
                case -38: goto L_0x0291;
                case -37: goto L_0x0279;
                case -36: goto L_0x0275;
                case -35: goto L_0x0272;
                case -34: goto L_0x026e;
                case -33: goto L_0x026a;
                case -32: goto L_0x025f;
                case -31: goto L_0x0249;
                case -30: goto L_0x023e;
                case -29: goto L_0x023a;
                case -28: goto L_0x0236;
                case -27: goto L_0x0231;
                case -26: goto L_0x022c;
                case -25: goto L_0x021a;
                case -24: goto L_0x0204;
                case -23: goto L_0x0200;
                case -22: goto L_0x01fc;
                case -21: goto L_0x01f8;
                case -20: goto L_0x01ed;
                case -19: goto L_0x01e9;
                case -18: goto L_0x01e0;
                case -17: goto L_0x01dc;
                case -16: goto L_0x01d8;
                case -15: goto L_0x01cd;
                case -14: goto L_0x01bc;
                case -13: goto L_0x01b7;
                case -12: goto L_0x01a4;
                case -11: goto L_0x01a0;
                case -10: goto L_0x019f;
                case -9: goto L_0x019b;
                case -8: goto L_0x0197;
                case -7: goto L_0x0189;
                case -6: goto L_0x0179;
                case -5: goto L_0x0171;
                case -4: goto L_0x016d;
                case -3: goto L_0x0161;
                case -2: goto L_0x0151;
                case -1: goto L_0x014d;
                default: goto L_0x0149;
            }     // Catch:{ all -> 0x04b9 }
        L_0x0149:
            r19 = 49
            goto L_0x04b3
        L_0x014d:
            r0 = 187(0xbb, float:2.62E-43)
            goto L_0x04b6
        L_0x0151:
            r7.setMax(r14)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 == 0) goto L_0x015d
            r2 = 1
            r0 = 28
            goto L_0x04b6
        L_0x015d:
            r0 = 198(0xc6, float:2.77E-43)
            goto L_0x04b6
        L_0x0161:
            r7.setMax(r14)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 == 0) goto L_0x023a
            r2 = 1
            r0 = 163(0xa3, float:2.28E-43)
            goto L_0x04b6
        L_0x016d:
            r0 = 94
            goto L_0x04b6
        L_0x0171:
            int r0 = setMax     // Catch:{ all -> 0x04b9 }
            r7.getMin = r0     // Catch:{ all -> 0x04b9 }
        L_0x0175:
            r7.setMax(r15)     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x0179:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r0 = 19
            r7.setMax(r0)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            getMin = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x0189:
            r7.setMax(r2)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 != 0) goto L_0x0194
            r0 = 27
            goto L_0x04b6
        L_0x0194:
            r0 = r13
            goto L_0x04b6
        L_0x0197:
            r0 = 30
            goto L_0x04b6
        L_0x019b:
            r0 = 221(0xdd, float:3.1E-43)
            goto L_0x04b6
        L_0x019f:
            return
        L_0x01a0:
            r0 = 223(0xdf, float:3.12E-43)
            goto L_0x04b6
        L_0x01a4:
            r7.setMax(r14)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 == 0) goto L_0x01b3
            r2 = 1
            if (r0 == r2) goto L_0x01af
            goto L_0x01b3
        L_0x01af:
            r0 = 132(0x84, float:1.85E-43)
            goto L_0x04b6
        L_0x01b3:
            r0 = 117(0x75, float:1.64E-43)
            goto L_0x04b6
        L_0x01b7:
            int r0 = getMin     // Catch:{ all -> 0x04b9 }
            r7.getMin = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0175
        L_0x01bc:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r0 = 19
            r7.setMax(r0)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            setMax = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x01cd:
            r7.setMax(r4)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 != 0) goto L_0x0194
            r0 = 58
            goto L_0x04b6
        L_0x01d8:
            r0 = 149(0x95, float:2.09E-43)
            goto L_0x04b6
        L_0x01dc:
            r0 = 130(0x82, float:1.82E-43)
            goto L_0x04b6
        L_0x01e0:
            r2 = 1
            r7.setMax(r2)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x04b9 }
            throw r0     // Catch:{ all -> 0x04b9 }
        L_0x01e9:
            r0 = 125(0x7d, float:1.75E-43)
            goto L_0x04b6
        L_0x01ed:
            r7.setMax(r4)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 != 0) goto L_0x0194
            r0 = 81
            goto L_0x04b6
        L_0x01f8:
            r0 = 153(0x99, float:2.14E-43)
            goto L_0x04b6
        L_0x01fc:
            r0 = 224(0xe0, float:3.14E-43)
            goto L_0x04b6
        L_0x0200:
            r0 = 95
            goto L_0x04b6
        L_0x0204:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x04b9 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x04b9 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04b9 }
        L_0x0215:
            r7.setMax(r3)     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x021a:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04b9 }
            r0.clear()     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x022c:
            java.lang.String r0 = "PhoneNumberEmpty"
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0215
        L_0x0231:
            java.lang.String r0 = "checkRegistration[success] regManager.clear() & setPhoneNumber: "
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0215
        L_0x0236:
            r0 = 154(0x9a, float:2.16E-43)
            goto L_0x04b6
        L_0x023a:
            r0 = 124(0x7c, float:1.74E-43)
            goto L_0x04b6
        L_0x023e:
            r7.setMax(r14)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            r2 = 5
            if (r0 == r2) goto L_0x023a
            r0 = 5
            goto L_0x04b6
        L_0x0249:
            r7.setMax(r14)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            r2 = 49
            if (r0 == r2) goto L_0x025b
            r2 = 66
            if (r0 == r2) goto L_0x0257
            goto L_0x025b
        L_0x0257:
            r0 = 143(0x8f, float:2.0E-43)
            goto L_0x04b6
        L_0x025b:
            r0 = 203(0xcb, float:2.84E-43)
            goto L_0x04b6
        L_0x025f:
            r7.setMax(r4)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 != 0) goto L_0x0194
            r0 = 112(0x70, float:1.57E-43)
            goto L_0x04b6
        L_0x026a:
            r0 = 208(0xd0, float:2.91E-43)
            goto L_0x04b6
        L_0x026e:
            r0 = 115(0x73, float:1.61E-43)
            goto L_0x04b6
        L_0x0272:
            r0 = 2
            goto L_0x04b6
        L_0x0275:
            r0 = 32
            goto L_0x04b6
        L_0x0279:
            r7.getMin = r12     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04b9 }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ all -> 0x04b9 }
            r0.setPhoneNumber(r2)     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x0291:
            r7.getMin = r12     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04b9 }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ all -> 0x04b9 }
            r0.setClientId(r2)     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x02a9:
            r0 = 191(0xbf, float:2.68E-43)
            goto L_0x04b6
        L_0x02ad:
            r0 = 33
            goto L_0x04b6
        L_0x02b1:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x04b9 }
            boolean r0 = r0.success     // Catch:{ all -> 0x04b9 }
            r7.getMin = r0     // Catch:{ all -> 0x04b9 }
            goto L_0x0175
        L_0x02c4:
            r7.setMax(r2)     // Catch:{ all -> 0x04b9 }
            int r0 = r7.setMin     // Catch:{ all -> 0x04b9 }
            if (r0 != 0) goto L_0x0194
            r0 = 129(0x81, float:1.81E-43)
            goto L_0x04b6
        L_0x02cf:
            r0 = 141(0x8d, float:1.98E-43)
            goto L_0x04b6
        L_0x02d3:
            r0 = 3
            goto L_0x04b6
        L_0x02d6:
            r0 = 1
            goto L_0x04b6
        L_0x02d9:
            r7.getMin = r12     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04b9 }
            o.EventLog r2 = (o.EventLog) r2     // Catch:{ all -> 0x04b9 }
            r0.setRegistrationStatusResult(r2)     // Catch:{ all -> 0x04b9 }
            goto L_0x0149
        L_0x02f1:
            r0 = 91
            goto L_0x04b6
        L_0x02f5:
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x04b9 }
            r7.setMax(r9)     // Catch:{ all -> 0x04b9 }
            r7.setMax(r11)     // Catch:{ all -> 0x04b9 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04b9 }
            java.lang.Object[] r9 = new java.lang.Object[r2]     // Catch:{ all -> 0x035a }
            r9[r5] = r0     // Catch:{ all -> 0x035a }
            byte[] r0 = setMin     // Catch:{ all -> 0x035a }
            byte r0 = r0[r6]     // Catch:{ all -> 0x035a }
            byte r0 = (byte) r0     // Catch:{ all -> 0x035a }
            byte[] r2 = setMin     // Catch:{ all -> 0x035a }
            byte r2 = r2[r10]     // Catch:{ all -> 0x035a }
            short r2 = (short) r2     // Catch:{ all -> 0x035a }
            java.lang.String r0 = length(r0, r8, r2)     // Catch:{ all -> 0x035a }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x035a }
            byte[] r2 = setMin     // Catch:{ all -> 0x035a }
            r19 = 49
            byte r2 = r2[r19]     // Catch:{ all -> 0x0357 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0357 }
            r11 = r2 | 1470(0x5be, float:2.06E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0357 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0357 }
            r15 = 52
            byte r14 = r14[r15]     // Catch:{ all -> 0x0357 }
            short r14 = (short) r14     // Catch:{ all -> 0x0357 }
            java.lang.String r2 = length(r2, r11, r14)     // Catch:{ all -> 0x0357 }
            r11 = 1
            java.lang.Class[] r14 = new java.lang.Class[r11]     // Catch:{ all -> 0x0357 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0357 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x0357 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0357 }
            r15 = 633(0x279, float:8.87E-43)
            short r15 = (short) r15     // Catch:{ all -> 0x0357 }
            byte[] r20 = setMin     // Catch:{ all -> 0x0357 }
            byte r4 = r20[r10]     // Catch:{ all -> 0x0357 }
            short r4 = (short) r4     // Catch:{ all -> 0x0357 }
            java.lang.String r4 = length(r11, r15, r4)     // Catch:{ all -> 0x0357 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0357 }
            r14[r5] = r4     // Catch:{ all -> 0x0357 }
            java.lang.reflect.Method r0 = r0.getMethod(r2, r14)     // Catch:{ all -> 0x0357 }
            r4 = 0
            java.lang.Object r0 = r0.invoke(r4, r9)     // Catch:{ all -> 0x0355 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04ac }
        L_0x0350:
            r7.setMax(r3)     // Catch:{ all -> 0x04ac }
            goto L_0x04b3
        L_0x0355:
            r0 = move-exception
            goto L_0x035e
        L_0x0357:
            r0 = move-exception
            r4 = 0
            goto L_0x035e
        L_0x035a:
            r0 = move-exception
            r4 = 0
            r19 = 49
        L_0x035e:
            java.lang.Throwable r2 = r0.getCause()     // Catch:{ all -> 0x04ac }
            if (r2 == 0) goto L_0x0365
            throw r2     // Catch:{ all -> 0x04ac }
        L_0x0365:
            throw r0     // Catch:{ all -> 0x04ac }
        L_0x0366:
            r4 = 0
            r19 = 49
            r7.getMin = r12     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04ac }
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ all -> 0x03c6 }
            r11[r5] = r2     // Catch:{ all -> 0x03c6 }
            byte[] r2 = setMin     // Catch:{ all -> 0x03c6 }
            byte r2 = r2[r6]     // Catch:{ all -> 0x03c6 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x03c6 }
            byte[] r9 = setMin     // Catch:{ all -> 0x03c6 }
            byte r9 = r9[r10]     // Catch:{ all -> 0x03c6 }
            short r9 = (short) r9     // Catch:{ all -> 0x03c6 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x03c6 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x03c6 }
            byte[] r9 = setMin     // Catch:{ all -> 0x03c6 }
            r14 = 56
            byte r9 = r9[r14]     // Catch:{ all -> 0x03c6 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x03c6 }
            r14 = 9657(0x25b9, float:1.3532E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x03c6 }
            byte[] r15 = setMin     // Catch:{ all -> 0x03c6 }
            r18 = 69
            byte r15 = r15[r18]     // Catch:{ all -> 0x03c6 }
            short r15 = (short) r15     // Catch:{ all -> 0x03c6 }
            java.lang.String r9 = length(r9, r14, r15)     // Catch:{ all -> 0x03c6 }
            r14 = 1
            java.lang.Class[] r15 = new java.lang.Class[r14]     // Catch:{ all -> 0x03c6 }
            byte[] r14 = setMin     // Catch:{ all -> 0x03c6 }
            byte r14 = r14[r6]     // Catch:{ all -> 0x03c6 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x03c6 }
            byte[] r18 = setMin     // Catch:{ all -> 0x03c6 }
            byte r4 = r18[r10]     // Catch:{ all -> 0x03c6 }
            short r4 = (short) r4     // Catch:{ all -> 0x03c6 }
            java.lang.String r4 = length(r14, r8, r4)     // Catch:{ all -> 0x03c6 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x03c6 }
            r15[r5] = r4     // Catch:{ all -> 0x03c6 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r15)     // Catch:{ all -> 0x03c6 }
            java.lang.Object r0 = r2.invoke(r0, r11)     // Catch:{ all -> 0x03c6 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04ac }
            goto L_0x0350
        L_0x03c6:
            r0 = move-exception
            java.lang.Throwable r2 = r0.getCause()     // Catch:{ all -> 0x04ac }
            if (r2 == 0) goto L_0x03ce
            throw r2     // Catch:{ all -> 0x04ac }
        L_0x03ce:
            throw r0     // Catch:{ all -> 0x04ac }
        L_0x03cf:
            r19 = 49
            r7.getMin = r12     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04ac }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ all -> 0x04ac }
            o.updateActionSheetContent.behaviorAndLog(r0, r2)     // Catch:{ all -> 0x04ac }
            goto L_0x04b3
        L_0x03e9:
            r19 = 49
            r0 = 96
            goto L_0x04b4
        L_0x03ef:
            r19 = 49
            r7.setMax(r2)     // Catch:{ all -> 0x04ac }
            int r0 = r7.setMin     // Catch:{ all -> 0x04ac }
            if (r0 != 0) goto L_0x04b3
            r0 = 186(0xba, float:2.6E-43)
            goto L_0x04b4
        L_0x03fc:
            r19 = 49
            r0 = 161(0xa1, float:2.26E-43)
            goto L_0x04b4
        L_0x0402:
            r19 = 49
            r0 = 83
            goto L_0x04b4
        L_0x0408:
            r19 = 49
            r0 = 230(0xe6, float:3.22E-43)
            goto L_0x04b4
        L_0x040e:
            r19 = 49
            r7.getMin = r12     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04ac }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ all -> 0x04ac }
            r0.setMerchantId(r2)     // Catch:{ all -> 0x04ac }
            goto L_0x04b3
        L_0x0428:
            r19 = 49
            java.lang.String r0 = "PAGE_MAIN_APP_REG_OTP_VERIFY"
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04ac }
            goto L_0x0350
        L_0x0430:
            r19 = 49
            r0 = 62
            goto L_0x04b4
        L_0x0436:
            r2 = 1
            r19 = 49
            r7.getMin = r2     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            int r0 = super.hashCode()     // Catch:{ all -> 0x04ac }
            r7.getMin = r0     // Catch:{ all -> 0x04ac }
        L_0x0449:
            r7.setMax(r15)     // Catch:{ all -> 0x04ac }
            goto L_0x04b3
        L_0x044d:
            r19 = 49
            r7.setMax(r14)     // Catch:{ all -> 0x04ac }
            int r0 = r7.setMin     // Catch:{ all -> 0x04ac }
            if (r0 == 0) goto L_0x045a
            r2 = 1
            r0 = 212(0xd4, float:2.97E-43)
            goto L_0x04b4
        L_0x045a:
            r0 = 85
            goto L_0x04b4
        L_0x045d:
            r2 = 1
            r19 = 49
            r7.getMin = r2     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x04ac }
            java.lang.String r0 = r0.action     // Catch:{ all -> 0x04ac }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x04ac }
            goto L_0x0350
        L_0x0472:
            r19 = 49
            r7.getMin = r12     // Catch:{ all -> 0x04ac }
            r7.setMax(r9)     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x04ac }
            r7.setMax(r11)     // Catch:{ all -> 0x04ac }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x04ac }
            boolean r0 = r0.equals(r2)     // Catch:{ all -> 0x04ac }
            r7.getMin = r0     // Catch:{ all -> 0x04ac }
            goto L_0x0449
        L_0x048a:
            r19 = 49
            r7.setMax(r2)     // Catch:{ all -> 0x04ac }
            int r0 = r7.setMin     // Catch:{ all -> 0x04ac }
            if (r0 != 0) goto L_0x04b3
            r0 = 228(0xe4, float:3.2E-43)
            goto L_0x04b4
        L_0x0496:
            r19 = 49
            r0 = 151(0x97, float:2.12E-43)
            goto L_0x04b4
        L_0x049b:
            r19 = 49
            r0 = 113(0x71, float:1.58E-43)
            goto L_0x04b4
        L_0x04a0:
            r19 = 49
            r7.setMax(r2)     // Catch:{ all -> 0x04ac }
            int r0 = r7.setMin     // Catch:{ all -> 0x04ac }
            if (r0 != 0) goto L_0x04b3
            r0 = 255(0xff, float:3.57E-43)
            goto L_0x04b4
        L_0x04ac:
            r0 = move-exception
            goto L_0x04bc
        L_0x04ae:
            r19 = 49
            r0 = 61
            goto L_0x04b4
        L_0x04b3:
            r0 = r13
        L_0x04b4:
            r4 = 33
        L_0x04b6:
            r11 = 0
            goto L_0x0132
        L_0x04b9:
            r0 = move-exception
            r19 = 49
        L_0x04bc:
            r2 = 138(0x8a, float:1.93E-43)
            r3 = 60
            r4 = 229(0xe5, float:3.21E-43)
            if (r13 < r2) goto L_0x04cf
            r2 = 141(0x8d, float:1.98E-43)
            if (r13 > r2) goto L_0x04cf
            r2 = 210(0xd2, float:2.94E-43)
            r4 = 210(0xd2, float:2.94E-43)
        L_0x04cc:
            r15 = 1
            goto L_0x065c
        L_0x04cf:
            byte[] r2 = setMin
            byte r2 = r2[r6]
            byte r2 = (byte) r2
            r9 = 15410(0x3c32, float:2.1594E-41)
            short r9 = (short) r9
            r11 = r9 & 239(0xef, float:3.35E-43)
            short r11 = (short) r11
            java.lang.String r2 = length(r2, r9, r11)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04f3
            r2 = 133(0x85, float:1.86E-43)
            if (r13 < r2) goto L_0x04f3
            r2 = 134(0x86, float:1.88E-43)
            if (r13 > r2) goto L_0x04f3
            r4 = 60
            goto L_0x04cc
        L_0x04f3:
            byte[] r2 = setMin
            byte r2 = r2[r6]
            byte r2 = (byte) r2
            java.lang.String r2 = length(r2, r9, r11)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x050f
            r2 = 135(0x87, float:1.89E-43)
            if (r13 < r2) goto L_0x050f
            r2 = 141(0x8d, float:1.98E-43)
            if (r13 > r2) goto L_0x050f
        L_0x050e:
            goto L_0x04cc
        L_0x050f:
            byte[] r2 = setMin
            byte r9 = r2[r6]
            byte r9 = (byte) r9
            r11 = 14230(0x3796, float:1.994E-41)
            short r11 = (short) r11
            r14 = 13952(0x3680, float:1.9551E-41)
            byte r2 = r2[r14]
            r15 = 1
            int r2 = r2 - r15
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0535
            r2 = 137(0x89, float:1.92E-43)
            if (r13 < r2) goto L_0x0535
            r2 = 141(0x8d, float:1.98E-43)
            if (r13 > r2) goto L_0x0537
            goto L_0x050e
        L_0x0535:
            r2 = 141(0x8d, float:1.98E-43)
        L_0x0537:
            r9 = 147(0x93, float:2.06E-43)
            if (r13 < r9) goto L_0x0544
            r9 = 149(0x95, float:2.09E-43)
            if (r13 > r9) goto L_0x0544
            r3 = 211(0xd3, float:2.96E-43)
            r4 = 211(0xd3, float:2.96E-43)
            goto L_0x04cc
        L_0x0544:
            byte[] r9 = setMin
            byte r15 = r9[r6]
            byte r15 = (byte) r15
            r2 = r15 | 2097(0x831, float:2.939E-42)
            short r2 = (short) r2
            r18 = 9575(0x2567, float:1.3417E-41)
            byte r9 = r9[r18]
            short r9 = (short) r9
            java.lang.String r2 = length(r15, r2, r9)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0568
            r2 = 144(0x90, float:2.02E-43)
            if (r13 < r2) goto L_0x0568
            r2 = 149(0x95, float:2.09E-43)
            if (r13 > r2) goto L_0x0568
            goto L_0x050e
        L_0x0568:
            byte[] r2 = setMin
            byte r9 = r2[r6]
            byte r9 = (byte) r9
            byte r2 = r2[r14]
            r15 = 1
            int r2 = r2 - r15
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x058a
            r2 = 146(0x92, float:2.05E-43)
            if (r13 < r2) goto L_0x058a
            r2 = 149(0x95, float:2.09E-43)
            if (r13 > r2) goto L_0x058c
            goto L_0x065c
        L_0x058a:
            r2 = 149(0x95, float:2.09E-43)
        L_0x058c:
            byte[] r9 = setMin
            byte r11 = r9[r6]
            byte r11 = (byte) r11
            r2 = r11 | 976(0x3d0, float:1.368E-42)
            short r2 = (short) r2
            r18 = 54
            byte r9 = r9[r18]
            short r9 = (short) r9
            java.lang.String r2 = length(r11, r2, r9)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05b3
            r2 = 192(0xc0, float:2.69E-43)
            if (r13 < r2) goto L_0x05b3
            r2 = 198(0xc6, float:2.77E-43)
            if (r13 > r2) goto L_0x05b3
        L_0x05af:
            r4 = 60
            goto L_0x065c
        L_0x05b3:
            byte[] r2 = setMin
            byte r9 = r2[r6]
            byte r9 = (byte) r9
            r11 = r9 | 976(0x3d0, float:1.368E-42)
            short r11 = (short) r11
            r18 = 54
            byte r2 = r2[r18]
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05d8
            r2 = 194(0xc2, float:2.72E-43)
            if (r13 < r2) goto L_0x05d8
            r2 = 195(0xc3, float:2.73E-43)
            if (r13 > r2) goto L_0x05d8
            goto L_0x065c
        L_0x05d8:
            byte[] r2 = setMin
            byte r9 = r2[r6]
            byte r9 = (byte) r9
            r11 = 963(0x3c3, float:1.35E-42)
            short r11 = (short) r11
            r18 = 55
            byte r2 = r2[r18]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05fd
            r2 = 195(0xc3, float:2.73E-43)
            if (r13 < r2) goto L_0x05fd
            r2 = 198(0xc6, float:2.77E-43)
            if (r13 > r2) goto L_0x05fd
            goto L_0x05af
        L_0x05fd:
            r2 = 199(0xc7, float:2.79E-43)
            if (r13 < r2) goto L_0x060a
            r2 = 203(0xcb, float:2.84E-43)
            if (r13 > r2) goto L_0x060a
            r2 = 59
            r4 = 59
            goto L_0x065c
        L_0x060a:
            r2 = 217(0xd9, float:3.04E-43)
            if (r13 < r2) goto L_0x0617
            r2 = 221(0xdd, float:3.1E-43)
            if (r13 > r2) goto L_0x0617
            r2 = 82
            r4 = 82
            goto L_0x065c
        L_0x0617:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            r9 = r3 | 5841(0x16d1, float:8.185E-42)
            short r9 = (short) r9
            r11 = 1197(0x4ad, float:1.677E-42)
            byte r2 = r2[r11]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r9, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x063b
            r2 = 230(0xe6, float:3.22E-43)
            if (r13 < r2) goto L_0x063b
            r2 = 256(0x100, float:3.59E-43)
            if (r13 > r2) goto L_0x063b
            goto L_0x065c
        L_0x063b:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            r9 = 1451(0x5ab, float:2.033E-42)
            short r9 = (short) r9
            byte r2 = r2[r14]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r9, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0666
            r2 = 251(0xfb, float:3.52E-43)
            if (r13 < r2) goto L_0x0666
            r2 = 256(0x100, float:3.59E-43)
            if (r13 > r2) goto L_0x0666
        L_0x065c:
            r7.IsOverlapping = r0
            r0 = 35
            r7.setMax(r0)
            r0 = r4
            goto L_0x04b4
        L_0x0666:
            throw r0
        L_0x0667:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x066f
            throw r1
        L_0x066f:
            goto L_0x0671
        L_0x0670:
            throw r0
        L_0x0671:
            goto L_0x0670
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$checkRegistration$0(java.lang.String, java.lang.String, java.lang.String, o.EventLog):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:163:0x042f, code lost:
        if (r11 <= 77) goto L_0x0334;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:170:0x0452, code lost:
        if (r11 <= 150) goto L_0x0337;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x015e, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x01da, code lost:
        r1.setMax(10);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkRegistration$1(o.EventLog r21) throws java.lang.Exception {
        /*
            r20 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r20
            r0 = r21
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 4247(0x1097, float:5.951E-42)
            short r3 = (short) r3
            r4 = 645(0x285, float:9.04E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x0484 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x0484 }
            byte[] r3 = setMin     // Catch:{ all -> 0x0484 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x0484 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x0484 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0484 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0484 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x0484 }
            short r10 = (short) r10     // Catch:{ all -> 0x0484 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x0484 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x0484 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0484 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0484 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0484 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0484 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0484 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0484 }
            short r13 = (short) r13     // Catch:{ all -> 0x0484 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0484 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0484 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0484 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0484 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0484 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0484 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x0484 }
            short r14 = (short) r14     // Catch:{ all -> 0x0484 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x0484 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0484 }
            r12[r7] = r13     // Catch:{ all -> 0x0484 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x0484 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x0484 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0484 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0127
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x011e }
            r12[r7] = r10     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x011e }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011e }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011e }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011e }
            short r14 = (short) r14     // Catch:{ all -> 0x011e }
            java.lang.String r10 = length(r10, r13, r14)     // Catch:{ all -> 0x011e }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011e }
            byte[] r14 = setMin     // Catch:{ all -> 0x011e }
            byte r14 = r14[r6]     // Catch:{ all -> 0x011e }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011e }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x011e }
            short r6 = (short) r6     // Catch:{ all -> 0x011e }
            java.lang.String r6 = length(r14, r15, r6)     // Catch:{ all -> 0x011e }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            byte r15 = r15[r8]     // Catch:{ all -> 0x011e }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            byte r4 = r16[r11]     // Catch:{ all -> 0x011e }
            short r4 = (short) r4     // Catch:{ all -> 0x011e }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x011e }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011e }
            r14[r7] = r4     // Catch:{ all -> 0x011e }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x011e }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x011e }
            byte[] r10 = setMin     // Catch:{ all -> 0x0115 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0115 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0115 }
            short r12 = (short) r12     // Catch:{ all -> 0x0115 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0115 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0115 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0115 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0115 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0115 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0115 }
            short r14 = (short) r14     // Catch:{ all -> 0x0115 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0115 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0115 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0115 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0115 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0083
        L_0x0115:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011d
            throw r1
        L_0x011d:
            throw r0
        L_0x011e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0126
            throw r1
        L_0x0126:
            throw r0
        L_0x0127:
            r5 = 9
            r9 = 60
            r0 = 0
        L_0x012c:
            int r11 = r0 + 1
            r12 = 19
            r13 = 26
            r14 = 22
            r15 = 18
            r7 = 23
            r0 = r3[r0]     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0302 }
            r10 = 24
            r4 = 10
            r6 = 34
            switch(r0) {
                case -48: goto L_0x02fd;
                case -47: goto L_0x02fa;
                case -46: goto L_0x02f7;
                case -45: goto L_0x02ed;
                case -44: goto L_0x02da;
                case -43: goto L_0x02cd;
                case -42: goto L_0x02ca;
                case -41: goto L_0x02c7;
                case -40: goto L_0x02c4;
                case -39: goto L_0x02b5;
                case -38: goto L_0x02a5;
                case -37: goto L_0x02a2;
                case -36: goto L_0x029e;
                case -35: goto L_0x0291;
                case -34: goto L_0x0282;
                case -33: goto L_0x027c;
                case -32: goto L_0x0278;
                case -31: goto L_0x0274;
                case -30: goto L_0x0269;
                case -29: goto L_0x0265;
                case -28: goto L_0x0261;
                case -27: goto L_0x0256;
                case -26: goto L_0x0242;
                case -25: goto L_0x023e;
                case -24: goto L_0x023a;
                case -23: goto L_0x022f;
                case -22: goto L_0x022b;
                case -21: goto L_0x0227;
                case -20: goto L_0x0214;
                case -19: goto L_0x0210;
                case -18: goto L_0x020c;
                case -17: goto L_0x0201;
                case -16: goto L_0x01fd;
                case -15: goto L_0x01f9;
                case -14: goto L_0x01ee;
                case -13: goto L_0x01df;
                case -12: goto L_0x01d6;
                case -11: goto L_0x01d2;
                case -10: goto L_0x01ce;
                case -9: goto L_0x01b3;
                case -8: goto L_0x01af;
                case -7: goto L_0x01a6;
                case -6: goto L_0x01a2;
                case -5: goto L_0x0189;
                case -4: goto L_0x0175;
                case -3: goto L_0x0163;
                case -2: goto L_0x014d;
                case -1: goto L_0x0149;
                default: goto L_0x0147;
            }     // Catch:{ all -> 0x0302 }
        L_0x0147:
            goto L_0x02fe
        L_0x0149:
            r0 = 80
            goto L_0x02ff
        L_0x014d:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0302 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x0302 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0302 }
        L_0x015e:
            r1.setMax(r10)     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x0163:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0302 }
            o.waitOnFinalized r0 = r0.deepLinkPayloadManager     // Catch:{ all -> 0x0302 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0302 }
            goto L_0x015e
        L_0x0175:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.waitOnFinalized r0 = (o.waitOnFinalized) r0     // Catch:{ all -> 0x0302 }
            java.lang.String r0 = r0.getReferralCode()     // Catch:{ all -> 0x0302 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0302 }
            goto L_0x015e
        L_0x0189:
            r0 = 2
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0302 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x0302 }
            r0.setReferralCode(r4)     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x01a2:
            r0 = 11
            goto L_0x02ff
        L_0x01a6:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0302 }
            throw r0     // Catch:{ all -> 0x0302 }
        L_0x01af:
            r0 = 165(0xa5, float:2.31E-43)
            goto L_0x02ff
        L_0x01b3:
            r0 = 2
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x0302 }
            r1.setMax(r12)     // Catch:{ all -> 0x0302 }
            int r4 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r4 == 0) goto L_0x01c9
            r4 = 1
            goto L_0x01ca
        L_0x01c9:
            r4 = 0
        L_0x01ca:
            r0.campaignEnabled = r4     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x01ce:
            r0 = 86
            goto L_0x02ff
        L_0x01d2:
            r0 = 77
            goto L_0x02ff
        L_0x01d6:
            int r0 = setMax     // Catch:{ all -> 0x0302 }
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
        L_0x01da:
            r1.setMax(r4)     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x01df:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r12)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            getMin = r0     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x01ee:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 59
            goto L_0x02ff
        L_0x01f9:
            r0 = 161(0xa1, float:2.26E-43)
            goto L_0x02ff
        L_0x01fd:
            r0 = 84
            goto L_0x02ff
        L_0x0201:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 76
            goto L_0x02ff
        L_0x020c:
            r0 = 150(0x96, float:2.1E-43)
            goto L_0x02ff
        L_0x0210:
            r0 = 183(0xb7, float:2.56E-43)
            goto L_0x02ff
        L_0x0214:
            r1.setMax(r6)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 == 0) goto L_0x0223
            r4 = 1
            if (r0 == r4) goto L_0x021f
            goto L_0x0223
        L_0x021f:
            r0 = 187(0xbb, float:2.62E-43)
            goto L_0x02ff
        L_0x0223:
            r0 = 167(0xa7, float:2.34E-43)
            goto L_0x02ff
        L_0x0227:
            r0 = 151(0x97, float:2.12E-43)
            goto L_0x02ff
        L_0x022b:
            r0 = 160(0xa0, float:2.24E-43)
            goto L_0x02ff
        L_0x022f:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 114(0x72, float:1.6E-43)
            goto L_0x02ff
        L_0x023a:
            r0 = 15
            goto L_0x02ff
        L_0x023e:
            r0 = 78
            goto L_0x02ff
        L_0x0242:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.waitOnFinalized r0 = (o.waitOnFinalized) r0     // Catch:{ all -> 0x0302 }
            boolean r0 = r0.hasReferralCode()     // Catch:{ all -> 0x0302 }
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
            goto L_0x01da
        L_0x0256:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 120(0x78, float:1.68E-43)
            goto L_0x02ff
        L_0x0261:
            r0 = 172(0xac, float:2.41E-43)
            goto L_0x02ff
        L_0x0265:
            r0 = 175(0xaf, float:2.45E-43)
            goto L_0x02ff
        L_0x0269:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 149(0x95, float:2.09E-43)
            goto L_0x02ff
        L_0x0274:
            r0 = 174(0xae, float:2.44E-43)
            goto L_0x02ff
        L_0x0278:
            r0 = 115(0x73, float:1.61E-43)
            goto L_0x02ff
        L_0x027c:
            int r0 = getMin     // Catch:{ all -> 0x0302 }
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
            goto L_0x01da
        L_0x0282:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r12)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            setMax = r0     // Catch:{ all -> 0x0302 }
            goto L_0x02fe
        L_0x0291:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 159(0x9f, float:2.23E-43)
            goto L_0x02ff
        L_0x029e:
            r0 = 186(0xba, float:2.6E-43)
            goto L_0x02ff
        L_0x02a2:
            r0 = 178(0xb2, float:2.5E-43)
            goto L_0x02ff
        L_0x02a5:
            r1.setMax(r6)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 == 0) goto L_0x02b2
            r4 = 1
            if (r0 == r4) goto L_0x02b0
            goto L_0x02b2
        L_0x02b0:
            r0 = 1
            goto L_0x02ff
        L_0x02b2:
            r0 = 17
            goto L_0x02ff
        L_0x02b5:
            r1.setMax(r6)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            r4 = 45
            if (r0 == r4) goto L_0x02c1
            r4 = 53
            goto L_0x02c7
        L_0x02c1:
            r0 = 121(0x79, float:1.7E-43)
            goto L_0x02ff
        L_0x02c4:
            r0 = 60
            goto L_0x02ff
        L_0x02c7:
            r0 = 166(0xa6, float:2.33E-43)
            goto L_0x02ff
        L_0x02ca:
            r0 = 177(0xb1, float:2.48E-43)
            goto L_0x02ff
        L_0x02cd:
            r1.setMax(r6)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 == r5) goto L_0x02d7
            r4 = 30
            goto L_0x02c7
        L_0x02d7:
            r0 = 26
            goto L_0x02ff
        L_0x02da:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0302 }
            r1.setMax(r15)     // Catch:{ all -> 0x0302 }
            r1.setMax(r7)     // Catch:{ all -> 0x0302 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0302 }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x0302 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0302 }
            r1.getMin = r0     // Catch:{ all -> 0x0302 }
            goto L_0x01da
        L_0x02ed:
            r1.setMax(r14)     // Catch:{ all -> 0x0302 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0302 }
            if (r0 != 0) goto L_0x02fe
            r0 = 182(0xb6, float:2.55E-43)
            goto L_0x02ff
        L_0x02f7:
            r0 = 163(0xa3, float:2.28E-43)
            goto L_0x02ff
        L_0x02fa:
            r0 = 9
            goto L_0x02ff
        L_0x02fd:
            return
        L_0x02fe:
            r0 = r11
        L_0x02ff:
            r7 = 0
            goto L_0x012c
        L_0x0302:
            r0 = move-exception
            if (r11 < r7) goto L_0x0312
            if (r11 > r13) goto L_0x0312
            r4 = 190(0xbe, float:2.66E-43)
            r4 = 77
            r6 = 150(0x96, float:2.1E-43)
            r12 = 1
            r18 = 190(0xbe, float:2.66E-43)
            goto L_0x0478
        L_0x0312:
            byte[] r6 = setMin
            byte r10 = r6[r8]
            byte r10 = (byte) r10
            r4 = r10 | 4944(0x1350, float:6.928E-42)
            short r4 = (short) r4
            r19 = 13
            byte r6 = r6[r19]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r4 = length(r10, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x033b
            if (r11 < r15) goto L_0x033b
            if (r11 > r12) goto L_0x033b
        L_0x0332:
            r4 = 77
        L_0x0334:
            r6 = 150(0x96, float:2.1E-43)
            r12 = 1
        L_0x0337:
            r18 = 8
            goto L_0x0478
        L_0x033b:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            r6 = 15410(0x3c32, float:2.1594E-41)
            short r6 = (short) r6
            r10 = r6 & 239(0xef, float:3.35E-43)
            short r10 = (short) r10
            java.lang.String r4 = length(r4, r6, r10)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x035d
            r4 = 20
            if (r11 < r4) goto L_0x035d
            r4 = 21
            if (r11 > r4) goto L_0x035d
            goto L_0x0332
        L_0x035d:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r10 = r6 | 976(0x3d0, float:1.368E-42)
            short r10 = (short) r10
            r12 = 54
            byte r4 = r4[r12]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r10, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x037f
            r4 = 21
            if (r11 < r4) goto L_0x037f
            if (r11 > r13) goto L_0x037f
            goto L_0x0332
        L_0x037f:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r10 = 1451(0x5ab, float:2.033E-42)
            short r10 = (short) r10
            r12 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r12]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r10, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x039f
            if (r11 < r14) goto L_0x039f
            if (r11 > r7) goto L_0x039f
            goto L_0x0332
        L_0x039f:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r7 = 15376(0x3c10, float:2.1546E-41)
            short r7 = (short) r7
            byte r4 = r4[r12]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03c9
            if (r11 < r13) goto L_0x03c9
            r4 = 27
            if (r11 > r4) goto L_0x03c9
            r4 = 185(0xb9, float:2.59E-43)
            r4 = 77
            r6 = 150(0x96, float:2.1E-43)
            r12 = 1
            r18 = 185(0xb9, float:2.59E-43)
            goto L_0x0478
        L_0x03c9:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r7 = 963(0x3c3, float:1.35E-42)
            short r7 = (short) r7
            r10 = 55
            byte r4 = r4[r10]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03eb
            if (r11 < r10) goto L_0x03eb
            if (r11 > r9) goto L_0x03eb
            goto L_0x0332
        L_0x03eb:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r13 = 14230(0x3796, float:1.994E-41)
            short r13 = (short) r13
            byte r4 = r4[r12]
            r14 = 1
            int r4 = r4 - r14
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x040e
            if (r11 < r9) goto L_0x040e
            r4 = 77
            if (r11 > r4) goto L_0x040e
        L_0x040c:
            goto L_0x0334
        L_0x040e:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r14 = r6 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            r15 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r15]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0432
            r4 = 71
            if (r11 < r4) goto L_0x0432
            r4 = 77
            if (r11 > r4) goto L_0x0434
            goto L_0x040c
        L_0x0432:
            r4 = 77
        L_0x0434:
            byte[] r6 = setMin
            byte r14 = r6[r8]
            byte r14 = (byte) r14
            byte r6 = r6[r12]
            r12 = 1
            int r6 = r6 - r12
            short r6 = (short) r6
            java.lang.String r6 = length(r14, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0456
            r6 = 121(0x79, float:1.7E-43)
            if (r11 < r6) goto L_0x0456
            r6 = 150(0x96, float:2.1E-43)
            if (r11 > r6) goto L_0x0458
        L_0x0454:
            goto L_0x0337
        L_0x0456:
            r6 = 150(0x96, float:2.1E-43)
        L_0x0458:
            byte[] r13 = setMin
            byte r14 = r13[r8]
            byte r14 = (byte) r14
            byte r10 = r13[r10]
            int r10 = -r10
            short r10 = (short) r10
            java.lang.String r7 = length(r14, r7, r10)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x0483
            r7 = 144(0x90, float:2.02E-43)
            if (r11 < r7) goto L_0x0483
            r7 = 145(0x91, float:2.03E-43)
            if (r11 > r7) goto L_0x0483
            goto L_0x0454
        L_0x0478:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r0 = r18
            goto L_0x02ff
        L_0x0483:
            throw r0
        L_0x0484:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x048c
            throw r1
        L_0x048c:
            goto L_0x048e
        L_0x048d:
            throw r0
        L_0x048e:
            goto L_0x048d
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$checkRegistration$1(o.EventLog):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.getOwner lambda$doUploadAvatarFirst$3(java.lang.Throwable r18) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r1.<init>(r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 930(0x3a2, float:1.303E-42)
            short r2 = (short) r2
            r3 = 116(0x74, float:1.63E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0212 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0212 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0212 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0212 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0212 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0212 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0212 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0212 }
            short r9 = (short) r9     // Catch:{ all -> 0x0212 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0212 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0212 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0212 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0212 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0212 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0212 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0212 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0212 }
            short r12 = (short) r12     // Catch:{ all -> 0x0212 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0212 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0212 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0212 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0212 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0212 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0212 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0212 }
            short r13 = (short) r13     // Catch:{ all -> 0x0212 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0212 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0212 }
            r11[r6] = r12     // Catch:{ all -> 0x0212 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0212 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0212 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0212 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0081:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0123
            r9 = r0[r4]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x011a }
            r11[r6] = r9     // Catch:{ all -> 0x011a }
            byte[] r9 = setMin     // Catch:{ all -> 0x011a }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011a }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011a }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x011a }
            byte[] r13 = setMin     // Catch:{ all -> 0x011a }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011a }
            short r13 = (short) r13     // Catch:{ all -> 0x011a }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011a }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011a }
            byte[] r13 = setMin     // Catch:{ all -> 0x011a }
            byte r13 = r13[r5]     // Catch:{ all -> 0x011a }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011a }
            r15 = r13 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011a }
            byte[] r16 = setMin     // Catch:{ all -> 0x011a }
            r17 = 52
            byte r5 = r16[r17]     // Catch:{ all -> 0x011a }
            short r5 = (short) r5     // Catch:{ all -> 0x011a }
            java.lang.String r5 = length(r13, r15, r5)     // Catch:{ all -> 0x011a }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011a }
            byte[] r15 = setMin     // Catch:{ all -> 0x011a }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011a }
            byte[] r16 = setMin     // Catch:{ all -> 0x011a }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011a }
            short r3 = (short) r3     // Catch:{ all -> 0x011a }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011a }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011a }
            r13[r6] = r3     // Catch:{ all -> 0x011a }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011a }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r11)     // Catch:{ all -> 0x011a }
            byte[] r9 = setMin     // Catch:{ all -> 0x0111 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0111 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0111 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0111 }
            byte r11 = r11[r14]     // Catch:{ all -> 0x0111 }
            short r11 = (short) r11     // Catch:{ all -> 0x0111 }
            java.lang.String r9 = length(r9, r12, r11)     // Catch:{ all -> 0x0111 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0111 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0111 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0111 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0111 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0111 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0111 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0111 }
            short r13 = (short) r13     // Catch:{ all -> 0x0111 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0111 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0111 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0111 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0111 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0111 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0081
        L_0x0111:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0119
            throw r1
        L_0x0119:
            throw r0
        L_0x011a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0122
            throw r1
        L_0x0122:
            throw r0
        L_0x0123:
            r3 = 10
            r4 = 22
        L_0x0127:
            int r5 = r6 + 1
            r8 = 34
            r9 = 16
            r10 = 19
            r0 = r2[r6]     // Catch:{ all -> 0x01b8 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01b8 }
            r6 = 18
            switch(r0) {
                case -13: goto L_0x01b1;
                case -12: goto L_0x01ac;
                case -11: goto L_0x019c;
                case -10: goto L_0x018e;
                case -9: goto L_0x0186;
                case -8: goto L_0x017d;
                case -7: goto L_0x017b;
                case -6: goto L_0x0178;
                case -5: goto L_0x015c;
                case -4: goto L_0x0153;
                case -3: goto L_0x0141;
                case -2: goto L_0x013f;
                case -1: goto L_0x013d;
                default: goto L_0x013a;
            }     // Catch:{ all -> 0x01b8 }
        L_0x013a:
            r11 = 1
            goto L_0x01b5
        L_0x013d:
            r6 = 1
            goto L_0x0127
        L_0x013f:
            r6 = 7
            goto L_0x0127
        L_0x0141:
            r1.setMax(r8)     // Catch:{ all -> 0x01b8 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01b8 }
            r5 = 15
            r6 = 1
            if (r0 == r6) goto L_0x01b5
            if (r0 == r9) goto L_0x014e
            goto L_0x01b5
        L_0x014e:
            r0 = 20
            r5 = 20
            goto L_0x01b5
        L_0x0153:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01b8 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01b8 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01b8 }
            throw r0     // Catch:{ all -> 0x01b8 }
        L_0x015c:
            o.getOwner r0 = new o.getOwner     // Catch:{ all -> 0x01b8 }
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x01aa }
            r1.setMax(r6)     // Catch:{ all -> 0x01b8 }
            r6 = 23
            r1.setMax(r6)     // Catch:{ all -> 0x01b8 }
            java.lang.Object r6 = r1.isInside     // Catch:{ all -> 0x01b8 }
            java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x01b8 }
            r0.<init>(r6)     // Catch:{ all -> 0x01b8 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01b8 }
            r0 = 24
            r1.setMax(r0)     // Catch:{ all -> 0x01b8 }
            goto L_0x013a
        L_0x0178:
            r6 = 22
            goto L_0x0127
        L_0x017b:
            r6 = 5
            goto L_0x0127
        L_0x017d:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01b8 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01b8 }
            o.getOwner r0 = (o.getOwner) r0     // Catch:{ all -> 0x01b8 }
            return r0
        L_0x0186:
            int r0 = setMax     // Catch:{ all -> 0x01b8 }
            r1.getMin = r0     // Catch:{ all -> 0x01b8 }
            r1.setMax(r3)     // Catch:{ all -> 0x01b8 }
            goto L_0x013a
        L_0x018e:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x01aa }
            r1.setMax(r6)     // Catch:{ all -> 0x01aa }
            r1.setMax(r10)     // Catch:{ all -> 0x01aa }
            int r0 = r1.setMin     // Catch:{ all -> 0x01aa }
            getMin = r0     // Catch:{ all -> 0x01aa }
            goto L_0x01b5
        L_0x019c:
            r11 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x01aa }
            int r0 = r1.setMin     // Catch:{ all -> 0x01aa }
            if (r0 != 0) goto L_0x01b5
            r0 = 37
            r6 = 37
            goto L_0x0127
        L_0x01aa:
            r0 = move-exception
            goto L_0x01ba
        L_0x01ac:
            r11 = 1
            r6 = 13
            goto L_0x0127
        L_0x01b1:
            r6 = 10
            goto L_0x0127
        L_0x01b5:
            r6 = r5
            goto L_0x0127
        L_0x01b8:
            r0 = move-exception
            r11 = 1
        L_0x01ba:
            if (r5 < r9) goto L_0x01c1
            if (r5 > r10) goto L_0x01c1
            r5 = 6
            r6 = 6
            goto L_0x0208
        L_0x01c1:
            byte[] r6 = setMin
            byte r6 = r6[r7]
            byte r6 = (byte) r6
            r9 = 15410(0x3c32, float:2.1594E-41)
            short r9 = (short) r9
            r12 = r9 & 239(0xef, float:3.35E-43)
            short r12 = (short) r12
            java.lang.String r6 = length(r6, r9, r12)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x01e5
            if (r5 < r4) goto L_0x01e5
            r6 = 38
            if (r5 > r6) goto L_0x01e5
            r5 = 12
            r6 = 12
            goto L_0x0208
        L_0x01e5:
            byte[] r6 = setMin
            byte r9 = r6[r7]
            byte r9 = (byte) r9
            r12 = r9 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            r13 = 54
            byte r6 = r6[r13]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0211
            r6 = 33
            if (r5 < r6) goto L_0x0211
            if (r5 > r8) goto L_0x0211
            r6 = 19
        L_0x0208:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x0127
        L_0x0211:
            throw r0
        L_0x0212:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x021a
            throw r1
        L_0x021a:
            goto L_0x021c
        L_0x021b:
            throw r0
        L_0x021c:
            goto L_0x021b
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$doUploadAvatarFirst$3(java.lang.Throwable):o.getOwner");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x025a, code lost:
        if (r7 <= 14) goto L_0x025c;
     */
    /* JADX WARNING: Removed duplicated region for block: B:106:0x0310  */
    /* JADX WARNING: Removed duplicated region for block: B:108:0x031f  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$doUploadAvatarFirst$4(java.lang.String r24, java.lang.String r25, java.lang.String r26, java.lang.String r27, java.lang.String r28, o.getOwner r29) throws java.lang.Exception {
        /*
            r23 = this;
            o.getGroupId r9 = new o.getGroupId
            r1 = r9
            r2 = r23
            r3 = r24
            r4 = r25
            r5 = r26
            r6 = r27
            r7 = r28
            r8 = r29
            r1.<init>(r2, r3, r4, r5, r6, r7, r8)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 12501(0x30d5, float:1.7518E-41)
            short r1 = (short) r1
            r2 = 285(0x11d, float:4.0E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x0320 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x0320 }
            byte[] r1 = setMin     // Catch:{ all -> 0x0320 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x0320 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x0320 }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0320 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0320 }
            r10 = 58
            byte r8 = r8[r10]     // Catch:{ all -> 0x0320 }
            short r8 = (short) r8     // Catch:{ all -> 0x0320 }
            java.lang.String r1 = length(r1, r7, r8)     // Catch:{ all -> 0x0320 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0320 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0320 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r8 = r8[r11]     // Catch:{ all -> 0x0320 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0320 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0320 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0320 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0320 }
            short r12 = (short) r12     // Catch:{ all -> 0x0320 }
            java.lang.String r8 = length(r8, r11, r12)     // Catch:{ all -> 0x0320 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0320 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0320 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0320 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0320 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0320 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0320 }
            short r13 = (short) r13     // Catch:{ all -> 0x0320 }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x0320 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0320 }
            r11[r5] = r12     // Catch:{ all -> 0x0320 }
            java.lang.reflect.Method r1 = r1.getMethod(r8, r11)     // Catch:{ all -> 0x0320 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x0320 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0320 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008e:
            int r8 = r0.length
            r11 = 52
            if (r3 >= r8) goto L_0x0130
            r8 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x0127 }
            r12[r5] = r8     // Catch:{ all -> 0x0127 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0127 }
            byte r8 = r8[r6]     // Catch:{ all -> 0x0127 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0127 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0127 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0127 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0127 }
            short r14 = (short) r14     // Catch:{ all -> 0x0127 }
            java.lang.String r8 = length(r8, r13, r14)     // Catch:{ all -> 0x0127 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0127 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0127 }
            byte r14 = r14[r4]     // Catch:{ all -> 0x0127 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0127 }
            r4 = r14 | 1470(0x5be, float:2.06E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0127 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0127 }
            byte r11 = r16[r11]     // Catch:{ all -> 0x0127 }
            short r11 = (short) r11     // Catch:{ all -> 0x0127 }
            java.lang.String r4 = length(r14, r4, r11)     // Catch:{ all -> 0x0127 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0127 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0127 }
            byte r14 = r14[r6]     // Catch:{ all -> 0x0127 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0127 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0127 }
            byte r2 = r16[r10]     // Catch:{ all -> 0x0127 }
            short r2 = (short) r2     // Catch:{ all -> 0x0127 }
            java.lang.String r2 = length(r14, r7, r2)     // Catch:{ all -> 0x0127 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0127 }
            r11[r5] = r2     // Catch:{ all -> 0x0127 }
            java.lang.reflect.Method r2 = r8.getMethod(r4, r11)     // Catch:{ all -> 0x0127 }
            r4 = 0
            java.lang.Object r2 = r2.invoke(r4, r12)     // Catch:{ all -> 0x0127 }
            byte[] r8 = setMin     // Catch:{ all -> 0x011e }
            byte r8 = r8[r6]     // Catch:{ all -> 0x011e }
            byte r8 = (byte) r8     // Catch:{ all -> 0x011e }
            byte[] r11 = setMin     // Catch:{ all -> 0x011e }
            byte r11 = r11[r15]     // Catch:{ all -> 0x011e }
            short r11 = (short) r11     // Catch:{ all -> 0x011e }
            java.lang.String r8 = length(r8, r13, r11)     // Catch:{ all -> 0x011e }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x011e }
            byte[] r11 = setMin     // Catch:{ all -> 0x011e }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x011e }
            byte r11 = (byte) r11     // Catch:{ all -> 0x011e }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x011e }
            byte[] r13 = setMin     // Catch:{ all -> 0x011e }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x011e }
            short r13 = (short) r13     // Catch:{ all -> 0x011e }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x011e }
            java.lang.reflect.Method r8 = r8.getMethod(r11, r4)     // Catch:{ all -> 0x011e }
            java.lang.Object r2 = r8.invoke(r2, r4)     // Catch:{ all -> 0x011e }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x011e }
            int r2 = r2.intValue()     // Catch:{ all -> 0x011e }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            goto L_0x008e
        L_0x011e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0126
            throw r1
        L_0x0126:
            throw r0
        L_0x0127:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012f
            throw r1
        L_0x012f:
            throw r0
        L_0x0130:
            r2 = 14
            r3 = 19
            r4 = 50
        L_0x0136:
            int r7 = r5 + 1
            r8 = 64
            r12 = 54
            r0 = r1[r5]     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMax(r0)     // Catch:{ all -> 0x0238 }
            r5 = 22
            r13 = 34
            r14 = 18
            r15 = 23
            switch(r0) {
                case -19: goto L_0x0231;
                case -18: goto L_0x022e;
                case -17: goto L_0x01e2;
                case -16: goto L_0x01cb;
                case -15: goto L_0x01c7;
                case -14: goto L_0x01be;
                case -13: goto L_0x01b5;
                case -12: goto L_0x01a3;
                case -11: goto L_0x0191;
                case -10: goto L_0x018e;
                case -9: goto L_0x018b;
                case -8: goto L_0x0181;
                case -7: goto L_0x017e;
                case -6: goto L_0x017b;
                case -5: goto L_0x0178;
                case -4: goto L_0x016c;
                case -3: goto L_0x015d;
                case -2: goto L_0x0152;
                case -1: goto L_0x014f;
                default: goto L_0x014d;
            }     // Catch:{ all -> 0x0238 }
        L_0x014d:
            goto L_0x0235
        L_0x014f:
            r5 = 14
            goto L_0x0136
        L_0x0152:
            int r0 = setMax     // Catch:{ all -> 0x0238 }
            r9.getMin = r0     // Catch:{ all -> 0x0238 }
            r0 = 10
            r9.setMax(r0)     // Catch:{ all -> 0x0238 }
            goto L_0x0235
        L_0x015d:
            r5 = 1
            r9.getMin = r5     // Catch:{ all -> 0x0238 }
            r9.setMax(r14)     // Catch:{ all -> 0x0238 }
            r9.setMax(r3)     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMin     // Catch:{ all -> 0x0238 }
            getMin = r0     // Catch:{ all -> 0x0238 }
            goto L_0x0235
        L_0x016c:
            r9.setMax(r5)     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMin     // Catch:{ all -> 0x0238 }
            if (r0 != 0) goto L_0x0235
            r0 = 13
            r5 = 13
            goto L_0x0136
        L_0x0178:
            r5 = 80
            goto L_0x0136
        L_0x017b:
            r5 = 82
            goto L_0x0136
        L_0x017e:
            r5 = 19
            goto L_0x0136
        L_0x0181:
            r9.setMax(r5)     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMin     // Catch:{ all -> 0x0238 }
            if (r0 != 0) goto L_0x0235
            r5 = 49
            goto L_0x0136
        L_0x018b:
            r5 = 84
            goto L_0x0136
        L_0x018e:
            r5 = 55
            goto L_0x0136
        L_0x0191:
            r9.setMax(r13)     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMin     // Catch:{ all -> 0x0238 }
            r5 = 74
            if (r0 == 0) goto L_0x0136
            r7 = 1
            if (r0 == r7) goto L_0x019e
            goto L_0x0136
        L_0x019e:
            r0 = 53
            r5 = 53
            goto L_0x0136
        L_0x01a3:
            r9.setMax(r13)     // Catch:{ all -> 0x0238 }
            int r0 = r9.setMin     // Catch:{ all -> 0x0238 }
            r5 = 27
            if (r0 == r5) goto L_0x01b2
            if (r0 == r12) goto L_0x01af
            goto L_0x01b2
        L_0x01af:
            r5 = 64
            goto L_0x0136
        L_0x01b2:
            r5 = 58
            goto L_0x0136
        L_0x01b5:
            r5 = 1
            r9.setMax(r5)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0238 }
            throw r0     // Catch:{ all -> 0x0238 }
        L_0x01be:
            r5 = 1
            r9.setMax(r5)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0238 }
            return r0
        L_0x01c7:
            r5 = 51
            goto L_0x0136
        L_0x01cb:
            r5 = 1
            r9.getMin = r5     // Catch:{ all -> 0x0238 }
            r9.setMax(r14)     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            o.getOwner r0 = (o.getOwner) r0     // Catch:{ all -> 0x0238 }
            java.lang.String r0 = r0.url     // Catch:{ all -> 0x0238 }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x0238 }
        L_0x01dc:
            r0 = 24
            r9.setMax(r0)     // Catch:{ all -> 0x0238 }
            goto L_0x0235
        L_0x01e2:
            r0 = 7
            r9.getMin = r0     // Catch:{ all -> 0x0238 }
            r9.setMax(r14)     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r16 = r0
            o.lock r16 = (o.lock) r16     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r17 = r0
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r18 = r0
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0238 }
            r9.setMax(r15)     // Catch:{ all -> 0x0238 }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x0238 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0238 }
            o.TitleBarRightButtonView$1 r0 = r16.thenRegister(r17, r18, r19, r20, r21, r22)     // Catch:{ all -> 0x0238 }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x0238 }
            goto L_0x01dc
        L_0x022e:
            r5 = 1
            goto L_0x0136
        L_0x0231:
            r5 = 50
            goto L_0x0136
        L_0x0235:
            r5 = r7
            goto L_0x0136
        L_0x0238:
            r0 = move-exception
            byte[] r5 = setMin
            byte r13 = r5[r6]
            byte r13 = (byte) r13
            r14 = 9099(0x238b, float:1.275E-41)
            short r14 = (short) r14
            r15 = 4829(0x12dd, float:6.767E-42)
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r13, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            r13 = 73
            if (r5 == 0) goto L_0x0260
            r5 = 1
            if (r7 < r5) goto L_0x0261
            if (r7 > r2) goto L_0x0261
        L_0x025c:
            r5 = 79
            goto L_0x0312
        L_0x0260:
            r5 = 1
        L_0x0261:
            byte[] r16 = setMin
            byte r5 = r16[r6]
            byte r5 = (byte) r5
            r11 = r5 | 976(0x3d0, float:1.368E-42)
            short r11 = (short) r11
            byte r10 = r16[r12]
            short r10 = (short) r10
            java.lang.String r5 = length(r5, r11, r10)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0284
            r5 = 9
            if (r7 < r5) goto L_0x0284
            if (r7 > r2) goto L_0x0284
        L_0x0280:
            r5 = 52
            goto L_0x0312
        L_0x0284:
            byte[] r5 = setMin
            byte r10 = r5[r6]
            byte r10 = (byte) r10
            r11 = r10 | 976(0x3d0, float:1.368E-42)
            short r11 = (short) r11
            byte r5 = r5[r12]
            short r5 = (short) r5
            java.lang.String r5 = length(r10, r11, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02a2
            if (r7 < r3) goto L_0x02a2
            if (r7 > r4) goto L_0x02a2
            goto L_0x0280
        L_0x02a2:
            byte[] r5 = setMin
            byte r10 = r5[r6]
            byte r10 = (byte) r10
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r10, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02c0
            r5 = 44
            if (r7 < r5) goto L_0x02c0
            if (r7 > r4) goto L_0x02c0
            goto L_0x025c
        L_0x02c0:
            byte[] r5 = setMin
            byte r5 = r5[r6]
            byte r5 = (byte) r5
            r10 = 15410(0x3c32, float:2.1594E-41)
            short r10 = (short) r10
            r11 = r10 & 239(0xef, float:3.35E-43)
            short r11 = (short) r11
            java.lang.String r5 = length(r5, r10, r11)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02e0
            r5 = 60
            if (r7 < r5) goto L_0x02e0
            if (r7 > r8) goto L_0x02e0
            goto L_0x0280
        L_0x02e0:
            r5 = 70
            if (r7 < r5) goto L_0x02e9
            if (r7 > r13) goto L_0x02e9
            r5 = 57
            goto L_0x0312
        L_0x02e9:
            byte[] r5 = setMin
            byte r8 = r5[r6]
            byte r8 = (byte) r8
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0308
            r5 = 67
            if (r7 < r5) goto L_0x0308
            if (r7 > r13) goto L_0x0308
            goto L_0x025c
        L_0x0308:
            r5 = 75
            if (r7 < r5) goto L_0x031f
            r5 = 79
            if (r7 > r5) goto L_0x031f
            r5 = 73
        L_0x0312:
            r9.IsOverlapping = r0
            r0 = 35
            r9.setMax(r0)
            r10 = 58
            r11 = 52
            goto L_0x0136
        L_0x031f:
            throw r0
        L_0x0320:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0328
            throw r1
        L_0x0328:
            goto L_0x032a
        L_0x0329:
            throw r0
        L_0x032a:
            goto L_0x0329
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$doUploadAvatarFirst$4(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, o.getOwner):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$initAccount$18(o.setEventName r18, java.lang.Boolean r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 7996(0x1f3c, float:1.1205E-41)
            short r2 = (short) r2
            r3 = 143(0x8f, float:2.0E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0269 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0269 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0269 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0269 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0269 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0269 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0269 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0269 }
            short r9 = (short) r9     // Catch:{ all -> 0x0269 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0269 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0269 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0269 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0269 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0269 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0269 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0269 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0269 }
            short r12 = (short) r12     // Catch:{ all -> 0x0269 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0269 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0269 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0269 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0269 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0269 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0269 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0269 }
            short r13 = (short) r13     // Catch:{ all -> 0x0269 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0269 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0269 }
            r11[r6] = r12     // Catch:{ all -> 0x0269 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0269 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0269 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0269 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r12[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r5]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r5 = r14 | 1470(0x5be, float:2.06E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x011c }
            short r11 = (short) r11     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r14, r5, r11)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r7]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r14, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r11[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r11)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r12)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r15]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r13, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r14 = 11
            r3 = 8
            r4 = 45
            r5 = 13
        L_0x012d:
            int r8 = r6 + 1
            r9 = 35
            r0 = r2[r6]     // Catch:{ all -> 0x01c6 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01c6 }
            r6 = 10
            r10 = 23
            r11 = 18
            switch(r0) {
                case -14: goto L_0x01b1;
                case -13: goto L_0x019f;
                case -12: goto L_0x0196;
                case -11: goto L_0x0193;
                case -10: goto L_0x0191;
                case -9: goto L_0x0185;
                case -8: goto L_0x0175;
                case -7: goto L_0x016d;
                case -6: goto L_0x016a;
                case -5: goto L_0x0168;
                case -4: goto L_0x0151;
                case -3: goto L_0x014e;
                case -2: goto L_0x0145;
                case -1: goto L_0x0142;
                default: goto L_0x0140;
            }     // Catch:{ all -> 0x01c6 }
        L_0x0140:
            goto L_0x01c3
        L_0x0142:
            r6 = 8
            goto L_0x012d
        L_0x0145:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01c6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c6 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x01c6 }
            return r0
        L_0x014e:
            r6 = 45
            goto L_0x012d
        L_0x0151:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01c6 }
            r1.setMax(r11)     // Catch:{ all -> 0x01c6 }
            r1.setMax(r10)     // Catch:{ all -> 0x01c6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c6 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x01c6 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x01c6 }
            r0 = 24
            r1.setMax(r0)     // Catch:{ all -> 0x01c6 }
            goto L_0x01c3
        L_0x0168:
            r6 = 1
            goto L_0x012d
        L_0x016a:
            r6 = 13
            goto L_0x012d
        L_0x016d:
            int r0 = getMin     // Catch:{ all -> 0x01c6 }
            r1.getMin = r0     // Catch:{ all -> 0x01c6 }
        L_0x0171:
            r1.setMax(r6)     // Catch:{ all -> 0x01c6 }
            goto L_0x01c3
        L_0x0175:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01c6 }
            r1.setMax(r11)     // Catch:{ all -> 0x01c6 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01c6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c6 }
            setMax = r0     // Catch:{ all -> 0x01c6 }
            goto L_0x01c3
        L_0x0185:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x01c6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c6 }
            if (r0 != 0) goto L_0x01c3
            r6 = 35
            goto L_0x012d
        L_0x0191:
            r6 = 3
            goto L_0x012d
        L_0x0193:
            r6 = 11
            goto L_0x012d
        L_0x0196:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01c6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c6 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01c6 }
            throw r0     // Catch:{ all -> 0x01c6 }
        L_0x019f:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x01c6 }
            r1.setMax(r11)     // Catch:{ all -> 0x01c6 }
            r1.setMax(r10)     // Catch:{ all -> 0x01c6 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c6 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01c6 }
            r1.getMin = r0     // Catch:{ all -> 0x01c6 }
            goto L_0x0171
        L_0x01b1:
            r0 = 34
            r1.setMax(r0)     // Catch:{ all -> 0x01c6 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c6 }
            r6 = 39
            if (r0 == 0) goto L_0x01bf
            r8 = 1
            goto L_0x012d
        L_0x01bf:
            r0 = 5
            r6 = 5
            goto L_0x012d
        L_0x01c3:
            r6 = r8
            goto L_0x012d
        L_0x01c6:
            r0 = move-exception
            byte[] r6 = setMin
            byte r10 = r6[r7]
            byte r10 = (byte) r10
            r11 = 14230(0x3796, float:1.994E-41)
            short r11 = (short) r11
            r12 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r12]
            r13 = 1
            int r6 = r6 - r13
            short r6 = (short) r6
            java.lang.String r6 = length(r10, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r10 = 37
            r13 = 36
            if (r6 == 0) goto L_0x01f3
            r6 = 6
            if (r8 < r6) goto L_0x01f3
            if (r8 > r3) goto L_0x01f3
            r6 = 36
            r16 = 1
            goto L_0x0261
        L_0x01f3:
            byte[] r6 = setMin
            byte r15 = r6[r7]
            byte r15 = (byte) r15
            byte r6 = r6[r12]
            r16 = 1
            int r6 = r6 + -1
            short r6 = (short) r6
            java.lang.String r6 = length(r15, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0216
            if (r8 < r5) goto L_0x0216
            r6 = 14
            if (r8 > r6) goto L_0x0216
            r6 = 36
            goto L_0x0261
        L_0x0216:
            byte[] r6 = setMin
            byte r11 = r6[r7]
            byte r11 = (byte) r11
            r15 = 15376(0x3c10, float:2.1546E-41)
            short r15 = (short) r15
            byte r6 = r6[r12]
            short r6 = (short) r6
            java.lang.String r6 = length(r11, r15, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0238
            r6 = 30
            if (r8 < r6) goto L_0x0238
            if (r8 > r13) goto L_0x0238
        L_0x0235:
            r6 = 37
            goto L_0x0261
        L_0x0238:
            r6 = 41
            if (r8 < r6) goto L_0x0241
            if (r8 > r4) goto L_0x0241
            r6 = 38
            goto L_0x0261
        L_0x0241:
            byte[] r11 = setMin
            byte r13 = r11[r7]
            byte r13 = (byte) r13
            r15 = 1451(0x5ab, float:2.033E-42)
            short r15 = (short) r15
            byte r11 = r11[r12]
            short r11 = (short) r11
            java.lang.String r11 = length(r13, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0268
            r11 = 40
            if (r8 < r11) goto L_0x0268
            if (r8 > r6) goto L_0x0268
            goto L_0x0235
        L_0x0261:
            r1.IsOverlapping = r0
            r1.setMax(r9)
            goto L_0x012d
        L_0x0268:
            throw r0
        L_0x0269:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0271
            throw r1
        L_0x0271:
            goto L_0x0273
        L_0x0272:
            throw r0
        L_0x0273:
            goto L_0x0272
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$initAccount$18(o.setEventName, java.lang.Boolean):o.TitleBarRightButtonView$4");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v23, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v24, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v25, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v26, resolved type: java.lang.Object} */
    /* JADX WARNING: type inference failed for: r15v4 */
    /* JADX WARNING: type inference failed for: r15v30 */
    /* JADX WARNING: type inference failed for: r15v34 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:139:0x0356, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:157:0x0400, code lost:
        r7 = r10;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x015f, code lost:
        r7 = 54;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x0185, code lost:
        r7 = 165;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:0x0260, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:92:0x0263, code lost:
        r14 = r15;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:204:0x0503 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x0515  */
    /* JADX WARNING: Removed duplicated region for block: B:211:0x051d  */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x0233 A[Catch:{ all -> 0x0224, all -> 0x033b }] */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0234 A[Catch:{ all -> 0x0224, all -> 0x033b }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass1 lambda$initNotification$20(o.setEventName r23, java.lang.Boolean r24) throws java.lang.Exception {
        /*
            r22 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r22
            r0 = r23
            r3 = r24
            r1.<init>(r2, r0, r3)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 8676(0x21e4, float:1.2158E-41)
            short r3 = (short) r3
            r4 = 680(0x2a8, float:9.53E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x059e }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x059e }
            byte[] r3 = setMin     // Catch:{ all -> 0x059e }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x059e }
            byte r3 = (byte) r3     // Catch:{ all -> 0x059e }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x059e }
            byte[] r10 = setMin     // Catch:{ all -> 0x059e }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x059e }
            short r10 = (short) r10     // Catch:{ all -> 0x059e }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x059e }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x059e }
            byte[] r10 = setMin     // Catch:{ all -> 0x059e }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x059e }
            byte r10 = (byte) r10     // Catch:{ all -> 0x059e }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x059e }
            byte[] r13 = setMin     // Catch:{ all -> 0x059e }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x059e }
            short r13 = (short) r13     // Catch:{ all -> 0x059e }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x059e }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x059e }
            byte[] r13 = setMin     // Catch:{ all -> 0x059e }
            byte r13 = r13[r8]     // Catch:{ all -> 0x059e }
            byte r13 = (byte) r13     // Catch:{ all -> 0x059e }
            byte[] r14 = setMin     // Catch:{ all -> 0x059e }
            byte r14 = r14[r11]     // Catch:{ all -> 0x059e }
            short r14 = (short) r14     // Catch:{ all -> 0x059e }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x059e }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x059e }
            r12[r7] = r13     // Catch:{ all -> 0x059e }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x059e }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x059e }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x059e }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0085:
            int r10 = r0.length
            r12 = 4832(0x12e0, float:6.771E-42)
            if (r5 >= r10) goto L_0x012a
            r10 = r0[r5]
            java.lang.Object[] r14 = new java.lang.Object[r4]     // Catch:{ all -> 0x0121 }
            r14[r7] = r10     // Catch:{ all -> 0x0121 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0121 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0121 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0121 }
            r15 = 14246(0x37a6, float:1.9963E-41)
            short r15 = (short) r15     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r16[r12]     // Catch:{ all -> 0x0121 }
            short r13 = (short) r13     // Catch:{ all -> 0x0121 }
            java.lang.String r10 = length(r10, r15, r13)     // Catch:{ all -> 0x0121 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r13[r6]     // Catch:{ all -> 0x0121 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0121 }
            r6 = r13 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            r17 = 52
            byte r12 = r16[r17]     // Catch:{ all -> 0x0121 }
            short r12 = (short) r12     // Catch:{ all -> 0x0121 }
            java.lang.String r6 = length(r13, r6, r12)     // Catch:{ all -> 0x0121 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0121 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            byte r4 = r16[r11]     // Catch:{ all -> 0x0121 }
            short r4 = (short) r4     // Catch:{ all -> 0x0121 }
            java.lang.String r4 = length(r13, r9, r4)     // Catch:{ all -> 0x0121 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0121 }
            r12[r7] = r4     // Catch:{ all -> 0x0121 }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x0121 }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r14)     // Catch:{ all -> 0x0121 }
            byte[] r6 = setMin     // Catch:{ all -> 0x0118 }
            byte r6 = r6[r8]     // Catch:{ all -> 0x0118 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            short r10 = (short) r10     // Catch:{ all -> 0x0118 }
            java.lang.String r6 = length(r6, r15, r10)     // Catch:{ all -> 0x0118 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0118 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0118 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0118 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0118 }
            short r13 = (short) r13     // Catch:{ all -> 0x0118 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0118 }
            r12 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r10, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Object r4 = r6.invoke(r4, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0118 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0118 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0085
        L_0x0118:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0120
            throw r1
        L_0x0120:
            throw r0
        L_0x0121:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0129
            throw r1
        L_0x0129:
            throw r0
        L_0x012a:
            r5 = 101(0x65, float:1.42E-43)
            r9 = 18
        L_0x012e:
            int r10 = r7 + 1
            r11 = 145(0x91, float:2.03E-43)
            r12 = 10
            r13 = 54
            r0 = r3[r7]     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0403 }
            r7 = 22
            r14 = 33
            r15 = 24
            r6 = 34
            r4 = 23
            switch(r0) {
                case -52: goto L_0x03fa;
                case -51: goto L_0x03f3;
                case -50: goto L_0x03e1;
                case -49: goto L_0x03da;
                case -48: goto L_0x03bb;
                case -47: goto L_0x03a6;
                case -46: goto L_0x038f;
                case -45: goto L_0x0380;
                case -44: goto L_0x0379;
                case -43: goto L_0x0372;
                case -42: goto L_0x035b;
                case -41: goto L_0x034d;
                case -40: goto L_0x0346;
                case -39: goto L_0x033f;
                case -38: goto L_0x032b;
                case -37: goto L_0x0313;
                case -36: goto L_0x030c;
                case -35: goto L_0x0305;
                case -34: goto L_0x02fe;
                case -33: goto L_0x02ee;
                case -32: goto L_0x02e7;
                case -31: goto L_0x02e0;
                case -30: goto L_0x02da;
                case -29: goto L_0x02ca;
                case -28: goto L_0x02be;
                case -27: goto L_0x02b8;
                case -26: goto L_0x02b1;
                case -25: goto L_0x0297;
                case -24: goto L_0x0290;
                case -23: goto L_0x0289;
                case -22: goto L_0x0279;
                case -21: goto L_0x0266;
                case -20: goto L_0x0259;
                case -19: goto L_0x0252;
                case -18: goto L_0x024b;
                case -17: goto L_0x023b;
                case -16: goto L_0x01da;
                case -15: goto L_0x01d6;
                case -14: goto L_0x01d2;
                case -13: goto L_0x01c5;
                case -12: goto L_0x01b5;
                case -11: goto L_0x01ad;
                case -10: goto L_0x01ab;
                case -9: goto L_0x01a9;
                case -8: goto L_0x01a0;
                case -7: goto L_0x019d;
                case -6: goto L_0x0188;
                case -5: goto L_0x0185;
                case -4: goto L_0x0173;
                case -3: goto L_0x0162;
                case -2: goto L_0x0151;
                case -1: goto L_0x014e;
                default: goto L_0x0149;
            }     // Catch:{ all -> 0x0403 }
        L_0x0149:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            goto L_0x0400
        L_0x014e:
            r7 = 104(0x68, float:1.46E-43)
            goto L_0x012e
        L_0x0151:
            r1.setMax(r6)     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0403 }
            r4 = 41
            if (r0 == r4) goto L_0x0185
            r4 = 46
            if (r0 == r4) goto L_0x015f
            goto L_0x0185
        L_0x015f:
            r7 = 54
            goto L_0x012e
        L_0x0162:
            r1.setMax(r6)     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0403 }
            if (r0 == 0) goto L_0x0170
            r4 = 1
            if (r0 == r4) goto L_0x016d
            goto L_0x0170
        L_0x016d:
            r7 = 49
            goto L_0x012e
        L_0x0170:
            r7 = 145(0x91, float:2.03E-43)
            goto L_0x012e
        L_0x0173:
            r1.setMax(r6)     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0403 }
            if (r0 == 0) goto L_0x0180
            r4 = 1
            r0 = 157(0x9d, float:2.2E-43)
            r7 = 157(0x9d, float:2.2E-43)
            goto L_0x012e
        L_0x0180:
            r0 = 151(0x97, float:2.12E-43)
            r7 = 151(0x97, float:2.12E-43)
            goto L_0x012e
        L_0x0185:
            r7 = 165(0xa5, float:2.31E-43)
            goto L_0x012e
        L_0x0188:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0403 }
            r1.setMax(r9)     // Catch:{ all -> 0x0403 }
            r1.setMax(r4)     // Catch:{ all -> 0x0403 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0403 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x0403 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0403 }
            r1.setMax(r15)     // Catch:{ all -> 0x0403 }
            goto L_0x0149
        L_0x019d:
            r7 = 20
            goto L_0x012e
        L_0x01a0:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0403 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0403 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0403 }
            throw r0     // Catch:{ all -> 0x0403 }
        L_0x01a9:
            r7 = 1
            goto L_0x012e
        L_0x01ab:
            r7 = 2
            goto L_0x012e
        L_0x01ad:
            int r0 = getMin     // Catch:{ all -> 0x0403 }
            r1.getMin = r0     // Catch:{ all -> 0x0403 }
            r1.setMax(r12)     // Catch:{ all -> 0x0403 }
            goto L_0x0149
        L_0x01b5:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0403 }
            r1.setMax(r9)     // Catch:{ all -> 0x0403 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0403 }
            setMax = r0     // Catch:{ all -> 0x0403 }
            goto L_0x0149
        L_0x01c5:
            r1.setMax(r14)     // Catch:{ all -> 0x0403 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0403 }
            if (r0 != 0) goto L_0x0400
            r0 = 47
            r7 = 47
            goto L_0x012e
        L_0x01d2:
            r7 = 101(0x65, float:1.42E-43)
            goto L_0x012e
        L_0x01d6:
            r7 = 80
            goto L_0x012e
        L_0x01da:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x0235 }
            r1.setMax(r9)     // Catch:{ all -> 0x0235 }
            r1.setMax(r4)     // Catch:{ all -> 0x0235 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0235 }
            byte[] r4 = setMin     // Catch:{ all -> 0x0229 }
            byte r4 = r4[r8]     // Catch:{ all -> 0x0229 }
            byte r4 = (byte) r4     // Catch:{ all -> 0x0229 }
            r6 = 3032(0xbd8, float:4.249E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0229 }
            byte[] r7 = setMin     // Catch:{ all -> 0x0229 }
            r18 = 4832(0x12e0, float:6.771E-42)
            byte r7 = r7[r18]     // Catch:{ all -> 0x0226 }
            short r7 = (short) r7     // Catch:{ all -> 0x0226 }
            java.lang.String r4 = length(r4, r6, r7)     // Catch:{ all -> 0x0226 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0226 }
            byte[] r6 = setMin     // Catch:{ all -> 0x0226 }
            r7 = 12391(0x3067, float:1.7363E-41)
            byte r6 = r6[r7]     // Catch:{ all -> 0x0226 }
            int r6 = -r6
            byte r6 = (byte) r6     // Catch:{ all -> 0x0226 }
            r7 = 5864(0x16e8, float:8.217E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x0226 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0226 }
            r15 = 9
            byte r14 = r14[r15]     // Catch:{ all -> 0x0226 }
            short r14 = (short) r14     // Catch:{ all -> 0x0226 }
            java.lang.String r6 = length(r6, r7, r14)     // Catch:{ all -> 0x0226 }
            r15 = 0
            java.lang.reflect.Method r4 = r4.getMethod(r6, r15)     // Catch:{ all -> 0x0224 }
            java.lang.Object r0 = r4.invoke(r0, r15)     // Catch:{ all -> 0x0224 }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x0224 }
            boolean r0 = r0.booleanValue()     // Catch:{ all -> 0x0224 }
            r1.getMin = r0     // Catch:{ all -> 0x033b }
            goto L_0x0260
        L_0x0224:
            r0 = move-exception
            goto L_0x022d
        L_0x0226:
            r0 = move-exception
            r15 = 0
            goto L_0x022d
        L_0x0229:
            r0 = move-exception
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
        L_0x022d:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x033b }
            if (r4 == 0) goto L_0x0234
            throw r4     // Catch:{ all -> 0x033b }
        L_0x0234:
            throw r0     // Catch:{ all -> 0x033b }
        L_0x0235:
            r0 = move-exception
            r18 = 4832(0x12e0, float:6.771E-42)
            r14 = 0
            goto L_0x0407
        L_0x023b:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r14)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 != 0) goto L_0x0400
            r0 = 53
            r7 = 53
            goto L_0x012e
        L_0x024b:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 74
            goto L_0x012e
        L_0x0252:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 76
            goto L_0x012e
        L_0x0259:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            int r0 = setMax     // Catch:{ all -> 0x033b }
            r1.getMin = r0     // Catch:{ all -> 0x033b }
        L_0x0260:
            r1.setMax(r12)     // Catch:{ all -> 0x033b }
        L_0x0263:
            r14 = r15
            goto L_0x0400
        L_0x0266:
            r4 = 1
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r4     // Catch:{ all -> 0x033b }
            r1.setMax(r9)     // Catch:{ all -> 0x033b }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            getMin = r0     // Catch:{ all -> 0x033b }
            goto L_0x0263
        L_0x0279:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r7)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 != 0) goto L_0x0400
            r0 = 66
            r7 = 66
            goto L_0x012e
        L_0x0289:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 102(0x66, float:1.43E-43)
            goto L_0x012e
        L_0x0290:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 78
            goto L_0x012e
        L_0x0297:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 == 0) goto L_0x02ab
            r4 = 1
            if (r0 == r4) goto L_0x02a5
            goto L_0x02ab
        L_0x02a5:
            r0 = 140(0x8c, float:1.96E-43)
            r7 = 140(0x8c, float:1.96E-43)
            goto L_0x012e
        L_0x02ab:
            r0 = 8
            r7 = 8
            goto L_0x012e
        L_0x02b1:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 164(0xa4, float:2.3E-43)
            goto L_0x012e
        L_0x02b8:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 3
            goto L_0x012e
        L_0x02be:
            r4 = 1
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r4)     // Catch:{ all -> 0x033b }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x033b }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x033b }
            return r0
        L_0x02ca:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r7)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 != 0) goto L_0x0400
            r0 = 100
            r7 = 100
            goto L_0x012e
        L_0x02da:
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 18
            goto L_0x012e
        L_0x02e0:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 16
            goto L_0x012e
        L_0x02e7:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 82
            goto L_0x012e
        L_0x02ee:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r14)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 != 0) goto L_0x0400
            r0 = 134(0x86, float:1.88E-43)
            r7 = 134(0x86, float:1.88E-43)
            goto L_0x012e
        L_0x02fe:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 138(0x8a, float:1.93E-43)
            goto L_0x012e
        L_0x0305:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 135(0x87, float:1.89E-43)
            goto L_0x012e
        L_0x030c:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 67
            goto L_0x012e
        L_0x0313:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 == 0) goto L_0x0327
            r4 = 1
            if (r0 == r4) goto L_0x0321
            goto L_0x0327
        L_0x0321:
            r0 = 70
            r7 = 70
            goto L_0x012e
        L_0x0327:
            r0 = 4
            r7 = 4
            goto L_0x012e
        L_0x032b:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r14)     // Catch:{ all -> 0x033b }
            int r0 = r1.setMin     // Catch:{ all -> 0x033b }
            if (r0 != 0) goto L_0x0400
            r0 = 150(0x96, float:2.1E-43)
            r7 = 150(0x96, float:2.1E-43)
            goto L_0x012e
        L_0x033b:
            r0 = move-exception
            r14 = r15
            goto L_0x0407
        L_0x033f:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 155(0x9b, float:2.17E-43)
            goto L_0x012e
        L_0x0346:
            r15 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 14
            goto L_0x012e
        L_0x034d:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            com.google.firebase.installations.FirebaseInstallations r0 = com.google.firebase.installations.FirebaseInstallations.getInstance()     // Catch:{ all -> 0x03f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03f1 }
        L_0x0356:
            r1.setMax(r15)     // Catch:{ all -> 0x03f1 }
            goto L_0x0400
        L_0x035b:
            r6 = 1
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r6     // Catch:{ all -> 0x03f1 }
            r1.setMax(r9)     // Catch:{ all -> 0x03f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x03f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x03f1 }
            com.google.firebase.installations.FirebaseInstallations r0 = (com.google.firebase.installations.FirebaseInstallations) r0     // Catch:{ all -> 0x03f1 }
            com.google.android.gms.tasks.Task r0 = r0.delete()     // Catch:{ all -> 0x03f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03f1 }
            goto L_0x0356
        L_0x0372:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 173(0xad, float:2.42E-43)
            goto L_0x012e
        L_0x0379:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 137(0x89, float:1.92E-43)
            goto L_0x012e
        L_0x0380:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x03f1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x03f1 }
            r6 = 1
            if (r0 == 0) goto L_0x0185
            if (r0 == r6) goto L_0x015f
            goto L_0x0185
        L_0x038f:
            r6 = 1
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r6     // Catch:{ all -> 0x03f1 }
            r1.setMax(r9)     // Catch:{ all -> 0x03f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x03f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x03f1 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x03f1 }
            o.handleCollectedApi r0 = r0.createPushNotification()     // Catch:{ all -> 0x03f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03f1 }
            goto L_0x0356
        L_0x03a6:
            r6 = 1
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r6     // Catch:{ all -> 0x03f1 }
            r1.setMax(r9)     // Catch:{ all -> 0x03f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x03f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x03f1 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x03f1 }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x03f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03f1 }
            goto L_0x0356
        L_0x03bb:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r0 = 2
            r1.getMin = r0     // Catch:{ all -> 0x03f1 }
            r1.setMax(r9)     // Catch:{ all -> 0x03f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x03f1 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x03f1 }
            o.handleCollectedApi r0 = (o.handleCollectedApi) r0     // Catch:{ all -> 0x03f1 }
            r1.setMax(r4)     // Catch:{ all -> 0x03f1 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x03f1 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x03f1 }
            o.TitleBarRightButtonView$1 r0 = r0.bindApp(r4)     // Catch:{ all -> 0x03f1 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03f1 }
            goto L_0x0356
        L_0x03da:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 108(0x6c, float:1.51E-43)
            goto L_0x012e
        L_0x03e1:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r7)     // Catch:{ all -> 0x03f1 }
            int r0 = r1.setMin     // Catch:{ all -> 0x03f1 }
            if (r0 != 0) goto L_0x0400
            r0 = 198(0xc6, float:2.77E-43)
            r7 = 198(0xc6, float:2.77E-43)
            goto L_0x012e
        L_0x03f1:
            r0 = move-exception
            goto L_0x0407
        L_0x03f3:
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 171(0xab, float:2.4E-43)
            goto L_0x012e
        L_0x03fa:
            r18 = 4832(0x12e0, float:6.771E-42)
            r7 = 162(0xa2, float:2.27E-43)
            goto L_0x012e
        L_0x0400:
            r7 = r10
            goto L_0x012e
        L_0x0403:
            r0 = move-exception
            r14 = 0
            r18 = 4832(0x12e0, float:6.771E-42)
        L_0x0407:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r7 = r6 | 976(0x3d0, float:1.368E-42)
            short r7 = (short) r7
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r7 = 48
            if (r4 == 0) goto L_0x042d
            if (r10 < r12) goto L_0x042d
            r4 = 12
            if (r10 > r4) goto L_0x042d
        L_0x0428:
            r4 = 162(0xa2, float:2.27E-43)
        L_0x042a:
            r12 = 1
            goto L_0x0594
        L_0x042d:
            byte[] r4 = setMin
            byte r12 = r4[r8]
            byte r12 = (byte) r12
            r15 = 15376(0x3c10, float:2.1546E-41)
            short r15 = (short) r15
            r19 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r19]
            short r4 = (short) r4
            java.lang.String r4 = length(r12, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0453
            r4 = 20
            if (r10 < r4) goto L_0x0453
            if (r10 > r7) goto L_0x0453
        L_0x044e:
            r4 = 162(0xa2, float:2.27E-43)
            r7 = 69
            goto L_0x042a
        L_0x0453:
            byte[] r4 = setMin
            byte r12 = r4[r8]
            byte r12 = (byte) r12
            r15 = 1451(0x5ab, float:2.033E-42)
            short r15 = (short) r15
            byte r4 = r4[r19]
            short r4 = (short) r4
            java.lang.String r4 = length(r12, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0475
            r4 = 42
            if (r10 < r4) goto L_0x0475
            r4 = 43
            if (r10 > r4) goto L_0x0475
            goto L_0x0428
        L_0x0475:
            byte[] r4 = setMin
            byte r12 = r4[r8]
            byte r12 = (byte) r12
            r6 = r12 | 2097(0x831, float:2.939E-42)
            short r6 = (short) r6
            r20 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r20]
            short r4 = (short) r4
            java.lang.String r4 = length(r12, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0497
            if (r10 < r13) goto L_0x0497
            r4 = 55
            if (r10 > r4) goto L_0x0497
            goto L_0x0428
        L_0x0497:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            r6 = 15410(0x3c32, float:2.1594E-41)
            short r6 = (short) r6
            r12 = r6 & 239(0xef, float:3.35E-43)
            short r12 = (short) r12
            java.lang.String r4 = length(r4, r6, r12)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04b9
            r4 = 61
            if (r10 < r4) goto L_0x04b9
            r4 = 67
            if (r10 > r4) goto L_0x04b9
            goto L_0x044e
        L_0x04b9:
            byte[] r4 = setMin
            byte r13 = r4[r8]
            byte r13 = (byte) r13
            r7 = 9099(0x238b, float:1.275E-41)
            short r7 = (short) r7
            r21 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r21]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r13, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04dd
            r4 = 82
            if (r10 < r4) goto L_0x04dd
            if (r10 > r5) goto L_0x04dd
            goto L_0x044e
        L_0x04dd:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            byte r4 = r4[r19]
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r15, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04ff
            r4 = 95
            if (r10 < r4) goto L_0x04ff
            if (r10 > r5) goto L_0x04ff
            r4 = 162(0xa2, float:2.27E-43)
        L_0x04fb:
            r7 = 48
            goto L_0x042a
        L_0x04ff:
            r4 = 142(0x8e, float:1.99E-43)
            if (r10 < r4) goto L_0x050d
            if (r10 > r11) goto L_0x050d
            r4 = 13
            r4 = 162(0xa2, float:2.27E-43)
            r7 = 13
            goto L_0x042a
        L_0x050d:
            r4 = 147(0x93, float:2.06E-43)
            if (r10 < r4) goto L_0x051d
            r4 = 151(0x97, float:2.12E-43)
            if (r10 > r4) goto L_0x051d
            r4 = 68
            r4 = 162(0xa2, float:2.27E-43)
            r7 = 68
            goto L_0x042a
        L_0x051d:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            java.lang.String r4 = length(r4, r6, r12)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x053a
            r4 = 146(0x92, float:2.05E-43)
            if (r10 < r4) goto L_0x053a
            r4 = 147(0x93, float:2.06E-43)
            if (r10 > r4) goto L_0x053a
            goto L_0x044e
        L_0x053a:
            r4 = 160(0xa0, float:2.24E-43)
            if (r10 < r4) goto L_0x0548
            r4 = 162(0xa2, float:2.27E-43)
            if (r10 > r4) goto L_0x054a
            r6 = 12
            r7 = 12
            goto L_0x042a
        L_0x0548:
            r4 = 162(0xa2, float:2.27E-43)
        L_0x054a:
            byte[] r6 = setMin
            byte r7 = r6[r8]
            byte r7 = (byte) r7
            r11 = r7 | 4944(0x1350, float:6.928E-42)
            short r11 = (short) r11
            r12 = 13
            byte r6 = r6[r12]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r7, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x056f
            r6 = 173(0xad, float:2.42E-43)
            if (r10 < r6) goto L_0x056f
            r6 = 174(0xae, float:2.44E-43)
            if (r10 > r6) goto L_0x056f
            goto L_0x04fb
        L_0x056f:
            byte[] r6 = setMin
            byte r7 = r6[r8]
            byte r7 = (byte) r7
            r11 = 14230(0x3796, float:1.994E-41)
            short r11 = (short) r11
            byte r6 = r6[r19]
            r12 = 1
            int r6 = r6 - r12
            short r6 = (short) r6
            java.lang.String r6 = length(r7, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x059d
            r6 = 193(0xc1, float:2.7E-43)
            if (r10 < r6) goto L_0x059d
            r6 = 199(0xc7, float:2.79E-43)
            if (r10 > r6) goto L_0x059d
            r7 = 48
        L_0x0594:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012e
        L_0x059d:
            throw r0
        L_0x059e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x05a6
            throw r1
        L_0x05a6:
            goto L_0x05a8
        L_0x05a7:
            throw r0
        L_0x05a8:
            goto L_0x05a7
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$initNotification$20(o.setEventName, java.lang.Boolean):o.TitleBarRightButtonView$1");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$initNotification$21(o.setEventName r18, java.lang.Throwable r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 2577(0xa11, float:3.611E-42)
            short r2 = (short) r2
            r3 = 207(0xcf, float:2.9E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0271 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0271 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0271 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0271 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0271 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0271 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0271 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0271 }
            short r9 = (short) r9     // Catch:{ all -> 0x0271 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0271 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0271 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0271 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0271 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0271 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0271 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0271 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0271 }
            short r12 = (short) r12     // Catch:{ all -> 0x0271 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0271 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0271 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0271 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0271 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0271 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0271 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0271 }
            short r13 = (short) r13     // Catch:{ all -> 0x0271 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0271 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0271 }
            r11[r6] = r12     // Catch:{ all -> 0x0271 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0271 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0271 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0271 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r11[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r5]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            r15 = r13 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r5 = r16[r17]     // Catch:{ all -> 0x011c }
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r13, r15, r5)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r13[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r11)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r14]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r12, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 44
            r4 = 34
            r5 = 22
        L_0x012b:
            int r8 = r6 + 1
            r0 = r2[r6]     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01ca }
            r6 = 10
            r9 = 19
            r10 = 18
            switch(r0) {
                case -17: goto L_0x01c3;
                case -16: goto L_0x01bf;
                case -15: goto L_0x01b0;
                case -14: goto L_0x01a2;
                case -13: goto L_0x019d;
                case -12: goto L_0x0194;
                case -11: goto L_0x0192;
                case -10: goto L_0x018f;
                case -9: goto L_0x0186;
                case -8: goto L_0x0183;
                case -7: goto L_0x016b;
                case -6: goto L_0x0168;
                case -5: goto L_0x0165;
                case -4: goto L_0x0159;
                case -3: goto L_0x014a;
                case -2: goto L_0x0141;
                case -1: goto L_0x013e;
                default: goto L_0x013c;
            }     // Catch:{ all -> 0x01ca }
        L_0x013c:
            goto L_0x01c7
        L_0x013e:
            r6 = 30
            goto L_0x012b
        L_0x0141:
            int r0 = setMax     // Catch:{ all -> 0x01ca }
            r1.getMin = r0     // Catch:{ all -> 0x01ca }
        L_0x0145:
            r1.setMax(r6)     // Catch:{ all -> 0x01ca }
            goto L_0x01c7
        L_0x014a:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01ca }
            r1.setMax(r10)     // Catch:{ all -> 0x01ca }
            r1.setMax(r9)     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ca }
            getMin = r0     // Catch:{ all -> 0x01ca }
            goto L_0x01c7
        L_0x0159:
            r1.setMax(r5)     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ca }
            if (r0 != 0) goto L_0x01c7
            r0 = 21
            r6 = 21
            goto L_0x012b
        L_0x0165:
            r6 = 22
            goto L_0x012b
        L_0x0168:
            r6 = 24
            goto L_0x012b
        L_0x016b:
            r1.setMax(r4)     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ca }
            r6 = 53
            r8 = 26
            if (r0 == r6) goto L_0x0180
            r6 = 86
            if (r0 == r6) goto L_0x017b
            goto L_0x0180
        L_0x017b:
            r0 = 36
            r6 = 36
            goto L_0x012b
        L_0x0180:
            r6 = 26
            goto L_0x012b
        L_0x0183:
            r6 = 44
            goto L_0x012b
        L_0x0186:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01ca }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ca }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x01ca }
            return r0
        L_0x018f:
            r6 = 23
            goto L_0x012b
        L_0x0192:
            r6 = 1
            goto L_0x012b
        L_0x0194:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01ca }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01ca }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01ca }
            throw r0     // Catch:{ all -> 0x01ca }
        L_0x019d:
            int r0 = getMin     // Catch:{ all -> 0x01ca }
            r1.getMin = r0     // Catch:{ all -> 0x01ca }
            goto L_0x0145
        L_0x01a2:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01ca }
            r1.setMax(r10)     // Catch:{ all -> 0x01ca }
            r1.setMax(r9)     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ca }
            setMax = r0     // Catch:{ all -> 0x01ca }
            goto L_0x01c7
        L_0x01b0:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x01ca }
            int r0 = r1.setMin     // Catch:{ all -> 0x01ca }
            if (r0 != 0) goto L_0x01c7
            r0 = 65
            r6 = 65
            goto L_0x012b
        L_0x01bf:
            r6 = 28
            goto L_0x012b
        L_0x01c3:
            r6 = 34
            goto L_0x012b
        L_0x01c7:
            r6 = r8
            goto L_0x012b
        L_0x01ca:
            r0 = move-exception
            byte[] r6 = setMin
            byte r9 = r6[r7]
            byte r9 = (byte) r9
            r10 = r9 | 2097(0x831, float:2.939E-42)
            short r10 = (short) r10
            r11 = 9575(0x2567, float:1.3417E-41)
            byte r6 = r6[r11]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r9 = 41
            r10 = 42
            if (r6 == 0) goto L_0x01f6
            r6 = 1
            if (r8 < r6) goto L_0x01f7
            r11 = 2
            if (r8 > r11) goto L_0x01f7
            r8 = 43
            r10 = 43
            goto L_0x0266
        L_0x01f6:
            r6 = 1
        L_0x01f7:
            byte[] r11 = setMin
            byte r12 = r11[r7]
            byte r12 = (byte) r12
            r13 = 9099(0x238b, float:1.275E-41)
            short r13 = (short) r13
            r14 = 4829(0x12dd, float:6.767E-42)
            byte r11 = r11[r14]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r13, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x021a
            r11 = 16
            if (r8 < r11) goto L_0x021a
            if (r8 > r5) goto L_0x021a
            goto L_0x0266
        L_0x021a:
            r11 = 37
            if (r8 < r11) goto L_0x0223
            if (r8 > r9) goto L_0x0223
            r10 = 41
            goto L_0x0266
        L_0x0223:
            byte[] r9 = setMin
            byte r11 = r9[r7]
            byte r11 = (byte) r11
            r12 = 15376(0x3c10, float:2.1546E-41)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r9 = r9[r13]
            short r9 = (short) r9
            java.lang.String r9 = length(r11, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            r11 = 66
            if (r9 == 0) goto L_0x0245
            if (r8 < r3) goto L_0x0245
            if (r8 > r11) goto L_0x0245
            goto L_0x0266
        L_0x0245:
            byte[] r9 = setMin
            byte r12 = r9[r7]
            byte r12 = (byte) r12
            r13 = r12 | 5841(0x16d1, float:8.185E-42)
            short r13 = (short) r13
            r14 = 1197(0x4ad, float:1.677E-42)
            byte r9 = r9[r14]
            short r9 = (short) r9
            java.lang.String r9 = length(r12, r13, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x0270
            r9 = 60
            if (r8 < r9) goto L_0x0270
            if (r8 > r11) goto L_0x0270
        L_0x0266:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r6 = r10
            goto L_0x012b
        L_0x0270:
            throw r0
        L_0x0271:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0279
            throw r1
        L_0x0279:
            goto L_0x027b
        L_0x027a:
            throw r0
        L_0x027b:
            goto L_0x027a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$initNotification$21(o.setEventName, java.lang.Throwable):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x02fa, code lost:
        r6 = r11;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:163:0x03c9, code lost:
        if (r11 <= 129) goto L_0x036e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:170:0x03ea, code lost:
        if (r11 <= 129) goto L_0x03ec;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:190:0x044c, code lost:
        if (r11 <= 180) goto L_0x0470;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x0167, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x023a, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x039e  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x03aa  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$resendOtp$2(o.EventLog r19) throws java.lang.Exception {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r0 = r19
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 614(0x266, float:8.6E-43)
            short r3 = (short) r3
            int r4 = r3 + -5
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x047b }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x047b }
            byte[] r3 = setMin     // Catch:{ all -> 0x047b }
            r7 = 72
            byte r3 = r3[r7]     // Catch:{ all -> 0x047b }
            byte r3 = (byte) r3     // Catch:{ all -> 0x047b }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x047b }
            byte[] r9 = setMin     // Catch:{ all -> 0x047b }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x047b }
            short r9 = (short) r9     // Catch:{ all -> 0x047b }
            java.lang.String r3 = length(r3, r8, r9)     // Catch:{ all -> 0x047b }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x047b }
            byte[] r9 = setMin     // Catch:{ all -> 0x047b }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x047b }
            byte r9 = (byte) r9     // Catch:{ all -> 0x047b }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x047b }
            byte[] r13 = setMin     // Catch:{ all -> 0x047b }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x047b }
            short r13 = (short) r13     // Catch:{ all -> 0x047b }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x047b }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x047b }
            byte[] r13 = setMin     // Catch:{ all -> 0x047b }
            byte r13 = r13[r7]     // Catch:{ all -> 0x047b }
            byte r13 = (byte) r13     // Catch:{ all -> 0x047b }
            byte[] r14 = setMin     // Catch:{ all -> 0x047b }
            byte r14 = r14[r10]     // Catch:{ all -> 0x047b }
            short r14 = (short) r14     // Catch:{ all -> 0x047b }
            java.lang.String r13 = length(r13, r8, r14)     // Catch:{ all -> 0x047b }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x047b }
            r12[r6] = r13     // Catch:{ all -> 0x047b }
            java.lang.reflect.Method r3 = r3.getMethod(r9, r12)     // Catch:{ all -> 0x047b }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x047b }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x047b }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r9 = r0.length
            if (r5 >= r9) goto L_0x0129
            r9 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x0120 }
            r12[r6] = r9     // Catch:{ all -> 0x0120 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0120 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0120 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0120 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0120 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0120 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0120 }
            short r14 = (short) r14     // Catch:{ all -> 0x0120 }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x0120 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0120 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0120 }
            r15 = 49
            byte r14 = r14[r15]     // Catch:{ all -> 0x0120 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0120 }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x0120 }
            short r11 = (short) r11     // Catch:{ all -> 0x0120 }
            java.lang.String r11 = length(r14, r15, r11)     // Catch:{ all -> 0x0120 }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            byte r15 = r15[r7]     // Catch:{ all -> 0x0120 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            byte r4 = r16[r10]     // Catch:{ all -> 0x0120 }
            short r4 = (short) r4     // Catch:{ all -> 0x0120 }
            java.lang.String r4 = length(r15, r8, r4)     // Catch:{ all -> 0x0120 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0120 }
            r14[r6] = r4     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r4 = r9.getMethod(r11, r14)     // Catch:{ all -> 0x0120 }
            r9 = 0
            java.lang.Object r4 = r4.invoke(r9, r12)     // Catch:{ all -> 0x0120 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0117 }
            byte r11 = r11[r7]     // Catch:{ all -> 0x0117 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0117 }
            short r12 = (short) r12     // Catch:{ all -> 0x0117 }
            java.lang.String r11 = length(r11, r13, r12)     // Catch:{ all -> 0x0117 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0117 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0117 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0117 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0117 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0117 }
            short r14 = (short) r14     // Catch:{ all -> 0x0117 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0117 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r9)     // Catch:{ all -> 0x0117 }
            java.lang.Object r4 = r11.invoke(r4, r9)     // Catch:{ all -> 0x0117 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0117 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0117 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r11 = 176(0xb0, float:2.47E-43)
            goto L_0x0083
        L_0x0117:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011f
            throw r1
        L_0x011f:
            throw r0
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r10 = 34
        L_0x012b:
            int r11 = r6 + 1
            r12 = 101(0x65, float:1.42E-43)
            r13 = 55
            r14 = 33
            r0 = r3[r6]     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x02fd }
            r6 = 10
            r15 = 24
            r9 = 22
            r8 = 2
            r5 = 18
            r4 = 23
            switch(r0) {
                case -50: goto L_0x02ec;
                case -49: goto L_0x02e8;
                case -48: goto L_0x02d0;
                case -47: goto L_0x02ca;
                case -46: goto L_0x02b7;
                case -45: goto L_0x02aa;
                case -44: goto L_0x02a6;
                case -43: goto L_0x0299;
                case -42: goto L_0x0295;
                case -41: goto L_0x027d;
                case -40: goto L_0x0279;
                case -39: goto L_0x0275;
                case -38: goto L_0x0268;
                case -37: goto L_0x0251;
                case -36: goto L_0x023f;
                case -35: goto L_0x0236;
                case -34: goto L_0x0232;
                case -33: goto L_0x022e;
                case -32: goto L_0x022a;
                case -31: goto L_0x021d;
                case -30: goto L_0x0219;
                case -29: goto L_0x0215;
                case -28: goto L_0x0208;
                case -27: goto L_0x0204;
                case -26: goto L_0x0200;
                case -25: goto L_0x01f3;
                case -24: goto L_0x01f0;
                case -23: goto L_0x01ec;
                case -22: goto L_0x01e8;
                case -21: goto L_0x01e4;
                case -20: goto L_0x01d7;
                case -19: goto L_0x01c5;
                case -18: goto L_0x01c1;
                case -17: goto L_0x01b6;
                case -16: goto L_0x01a3;
                case -15: goto L_0x019e;
                case -14: goto L_0x019b;
                case -13: goto L_0x0192;
                case -12: goto L_0x0190;
                case -11: goto L_0x018d;
                case -10: goto L_0x018a;
                case -9: goto L_0x0187;
                case -8: goto L_0x017b;
                case -7: goto L_0x016b;
                case -6: goto L_0x0163;
                case -5: goto L_0x0161;
                case -4: goto L_0x015e;
                case -3: goto L_0x015d;
                case -2: goto L_0x014d;
                case -1: goto L_0x014a;
                default: goto L_0x0147;
            }     // Catch:{ all -> 0x02fd }
        L_0x0147:
            r4 = 1
            goto L_0x02fa
        L_0x014a:
            r6 = 62
            goto L_0x012b
        L_0x014d:
            r1.setMax(r10)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 == 0) goto L_0x0161
            r4 = 1
            if (r0 == r4) goto L_0x0158
            goto L_0x0161
        L_0x0158:
            r0 = 90
            r6 = 90
            goto L_0x012b
        L_0x015d:
            return
        L_0x015e:
            r6 = 107(0x6b, float:1.5E-43)
            goto L_0x012b
        L_0x0161:
            r6 = 4
            goto L_0x012b
        L_0x0163:
            int r0 = setMax     // Catch:{ all -> 0x02fd }
            r1.getMin = r0     // Catch:{ all -> 0x02fd }
        L_0x0167:
            r1.setMax(r6)     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x016b:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x01b3 }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            getMin = r0     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x017b:
            r1.setMax(r9)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 29
            r6 = 29
            goto L_0x012b
        L_0x0187:
            r6 = 145(0x91, float:2.03E-43)
            goto L_0x012b
        L_0x018a:
            r6 = 56
            goto L_0x012b
        L_0x018d:
            r6 = 148(0x94, float:2.07E-43)
            goto L_0x012b
        L_0x0190:
            r6 = 1
            goto L_0x012b
        L_0x0192:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x01b3 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x02fd }
            throw r0     // Catch:{ all -> 0x02fd }
        L_0x019b:
            r6 = 172(0xac, float:2.41E-43)
            goto L_0x012b
        L_0x019e:
            int r0 = getMin     // Catch:{ all -> 0x02fd }
            r1.getMin = r0     // Catch:{ all -> 0x02fd }
            goto L_0x0167
        L_0x01a3:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x01b3 }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            setMax = r0     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x01b3:
            r0 = move-exception
            goto L_0x02ff
        L_0x01b6:
            r1.setMax(r14)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r6 = 55
            goto L_0x012b
        L_0x01c1:
            r6 = 30
            goto L_0x012b
        L_0x01c5:
            r8 = 1
            r1.getMin = r8     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x02fd }
            boolean r0 = r0.success     // Catch:{ all -> 0x02fd }
            r1.getMin = r0     // Catch:{ all -> 0x02fd }
            goto L_0x0167
        L_0x01d7:
            r1.setMax(r9)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 60
            r6 = 60
            goto L_0x012b
        L_0x01e4:
            r6 = 129(0x81, float:1.81E-43)
            goto L_0x012b
        L_0x01e8:
            r6 = 141(0x8d, float:1.98E-43)
            goto L_0x012b
        L_0x01ec:
            r6 = 9
            goto L_0x012b
        L_0x01f0:
            r6 = 5
            goto L_0x012b
        L_0x01f3:
            r1.setMax(r14)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 89
            r6 = 89
            goto L_0x012b
        L_0x0200:
            r6 = 147(0x93, float:2.06E-43)
            goto L_0x012b
        L_0x0204:
            r6 = 134(0x86, float:1.88E-43)
            goto L_0x012b
        L_0x0208:
            r1.setMax(r14)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 100
            r6 = 100
            goto L_0x012b
        L_0x0215:
            r6 = 133(0x85, float:1.86E-43)
            goto L_0x012b
        L_0x0219:
            r6 = 173(0xad, float:2.42E-43)
            goto L_0x012b
        L_0x021d:
            r1.setMax(r9)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 128(0x80, float:1.794E-43)
            r6 = 128(0x80, float:1.794E-43)
            goto L_0x012b
        L_0x022a:
            r6 = 34
            goto L_0x012b
        L_0x022e:
            r6 = 143(0x8f, float:2.0E-43)
            goto L_0x012b
        L_0x0232:
            r6 = 180(0xb4, float:2.52E-43)
            goto L_0x012b
        L_0x0236:
            java.lang.String r0 = "PAGE_MAIN_APP_REG_OTP_VERIFY"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02fd }
        L_0x023a:
            r1.setMax(r15)     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x023f:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.EventLog r0 = (o.EventLog) r0     // Catch:{ all -> 0x02fd }
            java.lang.String r0 = r0.action     // Catch:{ all -> 0x02fd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02fd }
            goto L_0x023a
        L_0x0251:
            r1.getMin = r8     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02fd }
            boolean r0 = r0.equals(r4)     // Catch:{ all -> 0x02fd }
            r1.getMin = r0     // Catch:{ all -> 0x02fd }
            goto L_0x0167
        L_0x0268:
            r1.setMax(r9)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 140(0x8c, float:1.96E-43)
            r6 = 140(0x8c, float:1.96E-43)
            goto L_0x012b
        L_0x0275:
            r6 = 31
            goto L_0x012b
        L_0x0279:
            r6 = 131(0x83, float:1.84E-43)
            goto L_0x012b
        L_0x027d:
            r1.getMin = r8     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.EventLog r4 = (o.EventLog) r4     // Catch:{ all -> 0x02fd }
            r0.setRegistrationStatusResult(r4)     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x0295:
            r6 = 151(0x97, float:2.12E-43)
            goto L_0x012b
        L_0x0299:
            r1.setMax(r14)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            if (r0 != 0) goto L_0x02fa
            r0 = 171(0xab, float:2.4E-43)
            r6 = 171(0xab, float:2.4E-43)
            goto L_0x012b
        L_0x02a6:
            r6 = 66
            goto L_0x012b
        L_0x02aa:
            r1.setMax(r10)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            r6 = 1
            if (r0 == 0) goto L_0x02b3
            goto L_0x02b4
        L_0x02b3:
            r12 = 2
        L_0x02b4:
            r6 = r12
            goto L_0x012b
        L_0x02b7:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x02fd }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x02fd }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02fd }
            goto L_0x023a
        L_0x02ca:
            java.lang.String r0 = "OTP_SMS"
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02fd }
            goto L_0x023a
        L_0x02d0:
            r1.getMin = r8     // Catch:{ all -> 0x02fd }
            r1.setMax(r5)     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02fd }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x02fd }
            r1.setMax(r4)     // Catch:{ all -> 0x02fd }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x02fd }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x02fd }
            r0.setVerifyMethod(r4)     // Catch:{ all -> 0x02fd }
            goto L_0x0147
        L_0x02e8:
            r6 = 36
            goto L_0x012b
        L_0x02ec:
            r1.setMax(r10)     // Catch:{ all -> 0x02fd }
            int r0 = r1.setMin     // Catch:{ all -> 0x02fd }
            r4 = 1
            if (r0 == 0) goto L_0x0161
            r0 = 67
            r6 = 67
            goto L_0x012b
        L_0x02fa:
            r6 = r11
            goto L_0x012b
        L_0x02fd:
            r0 = move-exception
            r4 = 1
        L_0x02ff:
            byte[] r5 = setMin
            byte r6 = r5[r7]
            byte r6 = (byte) r6
            r8 = 1451(0x5ab, float:2.033E-42)
            short r8 = (short) r8
            r9 = 13952(0x3680, float:1.9551E-41)
            byte r5 = r5[r9]
            short r5 = (short) r5
            java.lang.String r5 = length(r6, r8, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x032c
            r5 = 9
            if (r11 < r5) goto L_0x032c
            r5 = 30
            if (r11 > r5) goto L_0x032c
        L_0x0322:
            r4 = 176(0xb0, float:2.47E-43)
            r5 = 129(0x81, float:1.81E-43)
        L_0x0326:
            r6 = 180(0xb4, float:2.52E-43)
            r14 = 146(0x92, float:2.05E-43)
            goto L_0x0470
        L_0x032c:
            byte[] r5 = setMin
            byte r8 = r5[r7]
            byte r8 = (byte) r8
            r15 = 963(0x3c3, float:1.35E-42)
            short r15 = (short) r15
            byte r5 = r5[r13]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x034f
            r5 = 57
            if (r11 < r5) goto L_0x034f
            r5 = 61
            if (r11 > r5) goto L_0x034f
            goto L_0x0322
        L_0x034f:
            byte[] r5 = setMin
            byte r5 = r5[r7]
            byte r5 = (byte) r5
            r8 = 15410(0x3c32, float:2.1594E-41)
            short r8 = (short) r8
            r4 = r8 & 239(0xef, float:3.35E-43)
            short r4 = (short) r4
            java.lang.String r5 = length(r5, r8, r4)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0376
            r5 = 90
            if (r11 < r5) goto L_0x0376
            if (r11 > r12) goto L_0x0376
        L_0x036e:
            r4 = 176(0xb0, float:2.47E-43)
            r5 = 129(0x81, float:1.81E-43)
        L_0x0372:
            r6 = 180(0xb4, float:2.52E-43)
            goto L_0x0470
        L_0x0376:
            byte[] r5 = setMin
            byte r12 = r5[r7]
            byte r12 = (byte) r12
            byte r5 = r5[r13]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r12, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0396
            r5 = 96
            if (r11 < r5) goto L_0x0396
            r5 = 97
            if (r11 > r5) goto L_0x0396
            goto L_0x0322
        L_0x0396:
            r5 = 102(0x66, float:1.43E-43)
            if (r11 < r5) goto L_0x03aa
            r5 = 107(0x6b, float:1.5E-43)
            if (r11 > r5) goto L_0x03aa
            r4 = 61
            r4 = 176(0xb0, float:2.47E-43)
            r5 = 129(0x81, float:1.81E-43)
            r6 = 180(0xb4, float:2.52E-43)
            r14 = 61
            goto L_0x0470
        L_0x03aa:
            byte[] r5 = setMin
            byte r12 = r5[r7]
            byte r12 = (byte) r12
            r6 = 15376(0x3c10, float:2.1546E-41)
            short r6 = (short) r6
            byte r5 = r5[r9]
            short r5 = (short) r5
            java.lang.String r5 = length(r12, r6, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x03cc
            r5 = 107(0x6b, float:1.5E-43)
            if (r11 < r5) goto L_0x03ce
            r12 = 129(0x81, float:1.81E-43)
            if (r11 > r12) goto L_0x03ce
            goto L_0x036e
        L_0x03cc:
            r5 = 107(0x6b, float:1.5E-43)
        L_0x03ce:
            byte[] r12 = setMin
            byte r5 = r12[r7]
            byte r5 = (byte) r5
            byte r9 = r12[r9]
            short r9 = (short) r9
            java.lang.String r5 = length(r5, r6, r9)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x03f0
            r5 = 123(0x7b, float:1.72E-43)
            if (r11 < r5) goto L_0x03f0
            r5 = 129(0x81, float:1.81E-43)
            if (r11 > r5) goto L_0x03f2
        L_0x03ec:
            r4 = 176(0xb0, float:2.47E-43)
            goto L_0x0326
        L_0x03f0:
            r5 = 129(0x81, float:1.81E-43)
        L_0x03f2:
            byte[] r6 = setMin
            byte r6 = r6[r7]
            byte r6 = (byte) r6
            java.lang.String r6 = length(r6, r8, r4)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x040e
            r6 = 174(0xae, float:2.44E-43)
            if (r11 < r6) goto L_0x040e
            r6 = 175(0xaf, float:2.45E-43)
            if (r11 > r6) goto L_0x040e
            goto L_0x03ec
        L_0x040e:
            byte[] r6 = setMin
            byte r6 = r6[r7]
            byte r6 = (byte) r6
            java.lang.String r4 = length(r6, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x042b
            r4 = 175(0xaf, float:2.45E-43)
            if (r11 < r4) goto L_0x042b
            r4 = 176(0xb0, float:2.47E-43)
            if (r11 > r4) goto L_0x042b
            goto L_0x0372
        L_0x042b:
            byte[] r4 = setMin
            byte r6 = r4[r7]
            byte r6 = (byte) r6
            r8 = r6 | 5841(0x16d1, float:8.185E-42)
            short r8 = (short) r8
            r9 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r9]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r8, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x044f
            r4 = 176(0xb0, float:2.47E-43)
            if (r11 < r4) goto L_0x0451
            r6 = 180(0xb4, float:2.52E-43)
            if (r11 > r6) goto L_0x0451
            goto L_0x0470
        L_0x044f:
            r4 = 176(0xb0, float:2.47E-43)
        L_0x0451:
            byte[] r6 = setMin
            byte r8 = r6[r7]
            byte r8 = (byte) r8
            byte r6 = r6[r13]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r15, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x047a
            r6 = 178(0xb2, float:2.5E-43)
            if (r11 < r6) goto L_0x047a
            r6 = 180(0xb4, float:2.52E-43)
            if (r11 > r6) goto L_0x047a
        L_0x0470:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r6 = r14
            goto L_0x012b
        L_0x047a:
            throw r0
        L_0x047b:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0483
            throw r1
        L_0x0483:
            goto L_0x0485
        L_0x0484:
            throw r0
        L_0x0485:
            goto L_0x0484
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$resendOtp$2(o.EventLog):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$saveAccount$19(o.setEventName r18, o.attach r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 3016(0xbc8, float:4.226E-42)
            short r2 = (short) r2
            r3 = 226(0xe2, float:3.17E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x024e }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x024e }
            byte[] r2 = setMin     // Catch:{ all -> 0x024e }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x024e }
            byte r2 = (byte) r2     // Catch:{ all -> 0x024e }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x024e }
            byte[] r9 = setMin     // Catch:{ all -> 0x024e }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x024e }
            short r9 = (short) r9     // Catch:{ all -> 0x024e }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x024e }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x024e }
            byte[] r9 = setMin     // Catch:{ all -> 0x024e }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x024e }
            byte r9 = (byte) r9     // Catch:{ all -> 0x024e }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x024e }
            byte[] r12 = setMin     // Catch:{ all -> 0x024e }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x024e }
            short r12 = (short) r12     // Catch:{ all -> 0x024e }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x024e }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x024e }
            byte[] r12 = setMin     // Catch:{ all -> 0x024e }
            byte r12 = r12[r7]     // Catch:{ all -> 0x024e }
            byte r12 = (byte) r12     // Catch:{ all -> 0x024e }
            byte[] r13 = setMin     // Catch:{ all -> 0x024e }
            byte r13 = r13[r10]     // Catch:{ all -> 0x024e }
            short r13 = (short) r13     // Catch:{ all -> 0x024e }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x024e }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x024e }
            r11[r6] = r12     // Catch:{ all -> 0x024e }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x024e }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x024e }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x024e }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r11[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r5]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            r15 = r13 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r5 = r16[r17]     // Catch:{ all -> 0x011c }
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r13, r15, r5)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r13[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r11)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r14]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r12, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 31
            r4 = 34
            r5 = 2
            r8 = 46
        L_0x012c:
            int r9 = r6 + 1
            r10 = 65
            r11 = 33
            r0 = r2[r6]     // Catch:{ all -> 0x01af }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01af }
            switch(r0) {
                case -15: goto L_0x019a;
                case -14: goto L_0x0197;
                case -13: goto L_0x0194;
                case -12: goto L_0x0188;
                case -11: goto L_0x0186;
                case -10: goto L_0x0183;
                case -9: goto L_0x0180;
                case -8: goto L_0x0177;
                case -7: goto L_0x0174;
                case -6: goto L_0x0171;
                case -5: goto L_0x0165;
                case -4: goto L_0x0153;
                case -3: goto L_0x0149;
                case -2: goto L_0x0140;
                case -1: goto L_0x013d;
                default: goto L_0x013b;
            }     // Catch:{ all -> 0x01af }
        L_0x013b:
            goto L_0x01ac
        L_0x013d:
            r6 = 37
            goto L_0x012c
        L_0x0140:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01af }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01af }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01af }
            throw r0     // Catch:{ all -> 0x01af }
        L_0x0149:
            int r0 = getMin     // Catch:{ all -> 0x01af }
            r1.getMin = r0     // Catch:{ all -> 0x01af }
            r0 = 10
            r1.setMax(r0)     // Catch:{ all -> 0x01af }
            goto L_0x01ac
        L_0x0153:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01af }
            r0 = 18
            r1.setMax(r0)     // Catch:{ all -> 0x01af }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01af }
            int r0 = r1.setMin     // Catch:{ all -> 0x01af }
            setMax = r0     // Catch:{ all -> 0x01af }
            goto L_0x01ac
        L_0x0165:
            r1.setMax(r11)     // Catch:{ all -> 0x01af }
            int r0 = r1.setMin     // Catch:{ all -> 0x01af }
            if (r0 != 0) goto L_0x01ac
            r0 = 30
            r6 = 30
            goto L_0x012c
        L_0x0171:
            r6 = 36
            goto L_0x012c
        L_0x0174:
            r6 = 31
            goto L_0x012c
        L_0x0177:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01af }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01af }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x01af }
            return r0
        L_0x0180:
            r6 = 67
            goto L_0x012c
        L_0x0183:
            r6 = 46
            goto L_0x012c
        L_0x0186:
            r6 = 2
            goto L_0x012c
        L_0x0188:
            r1.setMax(r11)     // Catch:{ all -> 0x01af }
            int r0 = r1.setMin     // Catch:{ all -> 0x01af }
            if (r0 != 0) goto L_0x01ac
            r0 = 64
            r6 = 64
            goto L_0x012c
        L_0x0194:
            r6 = 69
            goto L_0x012c
        L_0x0197:
            r6 = 34
            goto L_0x012c
        L_0x019a:
            r1.setMax(r4)     // Catch:{ all -> 0x01af }
            int r0 = r1.setMin     // Catch:{ all -> 0x01af }
            if (r0 == r11) goto L_0x01a9
            if (r0 == r10) goto L_0x01a4
            goto L_0x01a9
        L_0x01a4:
            r0 = 42
            r6 = 42
            goto L_0x012c
        L_0x01a9:
            r6 = 65
            goto L_0x012c
        L_0x01ac:
            r6 = r9
            goto L_0x012c
        L_0x01af:
            r0 = move-exception
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r13 = 9099(0x238b, float:1.275E-41)
            short r13 = (short) r13
            r14 = 4829(0x12dd, float:6.767E-42)
            byte r6 = r6[r14]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x01d7
            if (r9 < r5) goto L_0x01d7
            r6 = 3
            if (r9 > r6) goto L_0x01d7
            r6 = 33
        L_0x01d3:
            r16 = 1
            goto L_0x0244
        L_0x01d7:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r13 = 15376(0x3c10, float:2.1546E-41)
            short r13 = (short) r13
            r14 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r14]
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x01fb
            r6 = 25
            if (r9 < r6) goto L_0x01fb
            if (r9 > r3) goto L_0x01fb
            r6 = 68
            goto L_0x01d3
        L_0x01fb:
            r6 = 43
            if (r9 < r6) goto L_0x0203
            if (r9 > r8) goto L_0x0203
            r6 = 1
            goto L_0x01d3
        L_0x0203:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r15 = 14230(0x3796, float:1.994E-41)
            short r15 = (short) r15
            byte r6 = r6[r14]
            r16 = 1
            int r6 = r6 + -1
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r15, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0227
            if (r9 < r8) goto L_0x0227
            if (r9 > r10) goto L_0x0227
        L_0x0224:
            r6 = 33
            goto L_0x0244
        L_0x0227:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            byte r6 = r6[r14]
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r13, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x024d
            r6 = 59
            if (r9 < r6) goto L_0x024d
            if (r9 > r10) goto L_0x024d
            goto L_0x0224
        L_0x0244:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012c
        L_0x024d:
            throw r0
        L_0x024e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0256
            throw r1
        L_0x0256:
            goto L_0x0258
        L_0x0257:
            throw r0
        L_0x0258:
            goto L_0x0257
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$saveAccount$19(o.setEventName, o.attach):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$thenRegister$10(o.setEventName r18, id.dana.data.deeplink.repository.source.branch.result.DeepLinkPayloadEntity r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 7853(0x1ead, float:1.1004E-41)
            short r2 = (short) r2
            r3 = 250(0xfa, float:3.5E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0286 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0286 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0286 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0286 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0286 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0286 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0286 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0286 }
            short r9 = (short) r9     // Catch:{ all -> 0x0286 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0286 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0286 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0286 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0286 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0286 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0286 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0286 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0286 }
            short r12 = (short) r12     // Catch:{ all -> 0x0286 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0286 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0286 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0286 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0286 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0286 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0286 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0286 }
            short r13 = (short) r13     // Catch:{ all -> 0x0286 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0286 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0286 }
            r11[r6] = r12     // Catch:{ all -> 0x0286 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0286 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0286 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0286 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r11[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r5]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            r15 = r13 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r5 = r16[r17]     // Catch:{ all -> 0x011c }
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r13, r15, r5)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r13[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r11)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r14]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r12, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 30
            r4 = 37
            r5 = 8
        L_0x012b:
            int r8 = r6 + 1
            r9 = 61
            r10 = 64
            r0 = r2[r6]     // Catch:{ all -> 0x01da }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01da }
            r6 = 10
            r11 = 18
            r12 = 34
            r13 = 22
            switch(r0) {
                case -18: goto L_0x01c3;
                case -17: goto L_0x01ba;
                case -16: goto L_0x01b7;
                case -15: goto L_0x01b3;
                case -14: goto L_0x01a6;
                case -13: goto L_0x019d;
                case -12: goto L_0x019a;
                case -11: goto L_0x018b;
                case -10: goto L_0x0189;
                case -9: goto L_0x0186;
                case -8: goto L_0x017a;
                case -7: goto L_0x016a;
                case -6: goto L_0x0161;
                case -5: goto L_0x015f;
                case -4: goto L_0x015c;
                case -3: goto L_0x014a;
                case -2: goto L_0x0147;
                case -1: goto L_0x0144;
                default: goto L_0x0142;
            }     // Catch:{ all -> 0x01da }
        L_0x0142:
            goto L_0x01d7
        L_0x0144:
            r6 = 31
            goto L_0x012b
        L_0x0147:
            r6 = 8
            goto L_0x012b
        L_0x014a:
            r1.setMax(r12)     // Catch:{ all -> 0x01da }
            int r0 = r1.setMin     // Catch:{ all -> 0x01da }
            if (r0 == r9) goto L_0x0159
            r6 = 93
            if (r0 == r6) goto L_0x0156
            goto L_0x0159
        L_0x0156:
            r6 = 72
            goto L_0x012b
        L_0x0159:
            r6 = 64
            goto L_0x012b
        L_0x015c:
            r6 = 30
            goto L_0x012b
        L_0x015f:
            r6 = 3
            goto L_0x012b
        L_0x0161:
            int r0 = setMax     // Catch:{ all -> 0x01da }
            r1.getMin = r0     // Catch:{ all -> 0x01da }
        L_0x0165:
            r1.setMax(r6)     // Catch:{ all -> 0x01da }
            goto L_0x01d7
        L_0x016a:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01da }
            r1.setMax(r11)     // Catch:{ all -> 0x01da }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01da }
            int r0 = r1.setMin     // Catch:{ all -> 0x01da }
            getMin = r0     // Catch:{ all -> 0x01da }
            goto L_0x01d7
        L_0x017a:
            r1.setMax(r13)     // Catch:{ all -> 0x01da }
            int r0 = r1.setMin     // Catch:{ all -> 0x01da }
            if (r0 != 0) goto L_0x01d7
            r0 = 29
            r6 = 29
            goto L_0x012b
        L_0x0186:
            r6 = 70
            goto L_0x012b
        L_0x0189:
            r6 = 6
            goto L_0x012b
        L_0x018b:
            r1.setMax(r12)     // Catch:{ all -> 0x01da }
            int r0 = r1.setMin     // Catch:{ all -> 0x01da }
            r6 = 60
            r11 = 1
            if (r0 == 0) goto L_0x012b
            if (r0 == r11) goto L_0x0198
            goto L_0x012b
        L_0x0198:
            r6 = 1
            goto L_0x012b
        L_0x019a:
            r6 = 37
            goto L_0x012b
        L_0x019d:
            r11 = 1
            r1.setMax(r11)     // Catch:{ all -> 0x01da }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01da }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01da }
            throw r0     // Catch:{ all -> 0x01da }
        L_0x01a6:
            r1.setMax(r13)     // Catch:{ all -> 0x01da }
            int r0 = r1.setMin     // Catch:{ all -> 0x01da }
            if (r0 != 0) goto L_0x01d7
            r0 = 59
            r6 = 59
            goto L_0x012b
        L_0x01b3:
            r6 = 67
            goto L_0x012b
        L_0x01b7:
            r6 = 4
            goto L_0x012b
        L_0x01ba:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01da }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01da }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x01da }
            return r0
        L_0x01c3:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x01da }
            r1.setMax(r11)     // Catch:{ all -> 0x01da }
            r0 = 23
            r1.setMax(r0)     // Catch:{ all -> 0x01da }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01da }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01da }
            r1.getMin = r0     // Catch:{ all -> 0x01da }
            goto L_0x0165
        L_0x01d7:
            r6 = r8
            goto L_0x012b
        L_0x01da:
            r0 = move-exception
            byte[] r6 = setMin
            byte r11 = r6[r7]
            byte r11 = (byte) r11
            r12 = 14230(0x3796, float:1.994E-41)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r13]
            r13 = 1
            int r6 = r6 - r13
            short r6 = (short) r6
            java.lang.String r6 = length(r11, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r11 = 77
            if (r6 == 0) goto L_0x0202
            if (r8 < r5) goto L_0x0202
            if (r8 > r3) goto L_0x0202
            r6 = 66
            goto L_0x027c
        L_0x0202:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r14 = r12 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            r15 = 1197(0x4ad, float:1.677E-42)
            byte r6 = r6[r15]
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0228
            r6 = 25
            if (r8 < r6) goto L_0x0228
            r6 = 26
            if (r8 > r6) goto L_0x0228
        L_0x0225:
            r6 = 77
            goto L_0x027c
        L_0x0228:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r14 = r12 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            byte r6 = r6[r15]
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0248
            if (r8 < r4) goto L_0x0248
            r6 = 38
            if (r8 > r6) goto L_0x0248
            goto L_0x0225
        L_0x0248:
            byte[] r6 = setMin
            byte r12 = r6[r7]
            byte r12 = (byte) r12
            r14 = 9099(0x238b, float:1.275E-41)
            short r14 = (short) r14
            r15 = 4829(0x12dd, float:6.767E-42)
            byte r6 = r6[r15]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r12, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x026d
            r6 = 55
            if (r8 < r6) goto L_0x026d
            r6 = 56
            if (r8 > r6) goto L_0x026d
            goto L_0x0225
        L_0x026d:
            if (r8 < r9) goto L_0x0274
            if (r8 > r10) goto L_0x0274
            r6 = 36
            goto L_0x027c
        L_0x0274:
            r6 = 73
            if (r8 < r6) goto L_0x0285
            if (r8 > r11) goto L_0x0285
            r6 = 69
        L_0x027c:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012b
        L_0x0285:
            throw r0
        L_0x0286:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x028e
            throw r1
        L_0x028e:
            goto L_0x0290
        L_0x028f:
            throw r0
        L_0x0290:
            goto L_0x028f
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$10(o.setEventName, id.dana.data.deeplink.repository.source.branch.result.DeepLinkPayloadEntity):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x02e9, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:122:0x0326, code lost:
        r7 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:144:0x0390, code lost:
        if (r9 <= 43) goto L_0x036b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:0x0408, code lost:
        if (r9 <= 103) goto L_0x04c0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x0154, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x0187, code lost:
        if (r1.setMin != 0) goto L_0x0189;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x0189, code lost:
        r7 = com.google.android.exoplayer2.extractor.ts.TsExtractor.TS_STREAM_TYPE_SPLICE_INFO;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x018c, code lost:
        r7 = 39;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x01d0, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x0402  */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x040c  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$11(o.setEventName r19) throws java.lang.Exception {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r0 = r19
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            r5 = r3 | 558(0x22e, float:7.82E-43)
            short r5 = (short) r5
            java.lang.String r0 = length(r0, r3, r5)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r5 = 9652(0x25b4, float:1.3525E-41)
            short r5 = (short) r5
            byte[] r6 = setMin
            byte r6 = r6[r4]
            short r6 = (short) r6
            java.lang.String r3 = length(r3, r5, r6)
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ all -> 0x04ca }
            r7 = 0
            r6[r7] = r3     // Catch:{ all -> 0x04ca }
            byte[] r3 = setMin     // Catch:{ all -> 0x04ca }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x04ca }
            byte r3 = (byte) r3     // Catch:{ all -> 0x04ca }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x04ca }
            byte[] r10 = setMin     // Catch:{ all -> 0x04ca }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x04ca }
            short r10 = (short) r10     // Catch:{ all -> 0x04ca }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x04ca }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x04ca }
            byte[] r10 = setMin     // Catch:{ all -> 0x04ca }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x04ca }
            byte r10 = (byte) r10     // Catch:{ all -> 0x04ca }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x04ca }
            byte[] r13 = setMin     // Catch:{ all -> 0x04ca }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x04ca }
            short r13 = (short) r13     // Catch:{ all -> 0x04ca }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x04ca }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x04ca }
            byte[] r13 = setMin     // Catch:{ all -> 0x04ca }
            byte r13 = r13[r8]     // Catch:{ all -> 0x04ca }
            byte r13 = (byte) r13     // Catch:{ all -> 0x04ca }
            byte[] r14 = setMin     // Catch:{ all -> 0x04ca }
            byte r14 = r14[r11]     // Catch:{ all -> 0x04ca }
            short r14 = (short) r14     // Catch:{ all -> 0x04ca }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x04ca }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x04ca }
            r12[r7] = r13     // Catch:{ all -> 0x04ca }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x04ca }
            java.lang.Object r0 = r3.invoke(r0, r6)     // Catch:{ all -> 0x04ca }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x04ca }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r6 = 0
        L_0x0085:
            int r10 = r0.length
            if (r6 >= r10) goto L_0x0129
            r10 = r0[r6]
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ all -> 0x0120 }
            r13[r7] = r10     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0120 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0120 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0120 }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x0120 }
            short r15 = (short) r15     // Catch:{ all -> 0x0120 }
            java.lang.String r10 = length(r10, r14, r15)     // Catch:{ all -> 0x0120 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            byte r15 = r15[r4]     // Catch:{ all -> 0x0120 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0120 }
            r4 = r15 | 1470(0x5be, float:2.06E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            r17 = 52
            byte r12 = r16[r17]     // Catch:{ all -> 0x0120 }
            short r12 = (short) r12     // Catch:{ all -> 0x0120 }
            java.lang.String r4 = length(r15, r4, r12)     // Catch:{ all -> 0x0120 }
            java.lang.Class[] r12 = new java.lang.Class[r5]     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            byte r15 = r15[r8]     // Catch:{ all -> 0x0120 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            byte r5 = r16[r11]     // Catch:{ all -> 0x0120 }
            short r5 = (short) r5     // Catch:{ all -> 0x0120 }
            java.lang.String r5 = length(r15, r9, r5)     // Catch:{ all -> 0x0120 }
            java.lang.Class r5 = java.lang.Class.forName(r5)     // Catch:{ all -> 0x0120 }
            r12[r7] = r5     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r4 = r10.getMethod(r4, r12)     // Catch:{ all -> 0x0120 }
            r5 = 0
            java.lang.Object r4 = r4.invoke(r5, r13)     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0117 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0117 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r13 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0117 }
            short r12 = (short) r12     // Catch:{ all -> 0x0117 }
            java.lang.String r10 = length(r10, r14, r12)     // Catch:{ all -> 0x0117 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0117 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0117 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0117 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0117 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0117 }
            short r14 = (short) r14     // Catch:{ all -> 0x0117 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0117 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r5)     // Catch:{ all -> 0x0117 }
            java.lang.Object r4 = r10.invoke(r4, r5)     // Catch:{ all -> 0x0117 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0117 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0117 }
            r3[r6] = r4
            int r6 = r6 + 1
            r4 = 49
            r5 = 1
            goto L_0x0085
        L_0x0117:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011f
            throw r1
        L_0x011f:
            throw r0
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r6 = 29
        L_0x012b:
            int r9 = r7 + 1
            r10 = 33
            r11 = 39
            r0 = r3[r7]     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0329 }
            r12 = 10
            r13 = 2
            r14 = 34
            r15 = 22
            r7 = 24
            r5 = 18
            r4 = 23
            switch(r0) {
                case -46: goto L_0x0321;
                case -45: goto L_0x031c;
                case -44: goto L_0x030c;
                case -43: goto L_0x0308;
                case -42: goto L_0x02ed;
                case -41: goto L_0x02d5;
                case -40: goto L_0x02d1;
                case -39: goto L_0x02cd;
                case -38: goto L_0x02c9;
                case -37: goto L_0x02ae;
                case -36: goto L_0x029b;
                case -35: goto L_0x0286;
                case -34: goto L_0x026f;
                case -33: goto L_0x026b;
                case -32: goto L_0x0267;
                case -31: goto L_0x0263;
                case -30: goto L_0x025f;
                case -29: goto L_0x0252;
                case -28: goto L_0x0248;
                case -27: goto L_0x0245;
                case -26: goto L_0x022b;
                case -25: goto L_0x0219;
                case -24: goto L_0x0215;
                case -23: goto L_0x0211;
                case -22: goto L_0x0204;
                case -21: goto L_0x01f3;
                case -20: goto L_0x01ed;
                case -19: goto L_0x01e9;
                case -18: goto L_0x01e6;
                case -17: goto L_0x01d9;
                case -16: goto L_0x01d5;
                case -15: goto L_0x01bf;
                case -14: goto L_0x01bb;
                case -13: goto L_0x01b7;
                case -12: goto L_0x01aa;
                case -11: goto L_0x0198;
                case -10: goto L_0x018f;
                case -9: goto L_0x0181;
                case -8: goto L_0x0178;
                case -7: goto L_0x0175;
                case -6: goto L_0x0172;
                case -5: goto L_0x0168;
                case -4: goto L_0x0158;
                case -3: goto L_0x0150;
                case -2: goto L_0x014d;
                case -1: goto L_0x014a;
                default: goto L_0x0147;
            }     // Catch:{ all -> 0x0329 }
        L_0x0147:
            r12 = 1
            goto L_0x0326
        L_0x014a:
            r7 = 140(0x8c, float:1.96E-43)
            goto L_0x012b
        L_0x014d:
            r7 = 131(0x83, float:1.84E-43)
            goto L_0x012b
        L_0x0150:
            int r0 = setMax     // Catch:{ all -> 0x0329 }
            r1.getMin = r0     // Catch:{ all -> 0x0329 }
        L_0x0154:
            r1.setMax(r12)     // Catch:{ all -> 0x0329 }
            goto L_0x0147
        L_0x0158:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0329 }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            getMin = r0     // Catch:{ all -> 0x0329 }
            goto L_0x0147
        L_0x0168:
            r1.setMax(r15)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 != 0) goto L_0x0326
            r7 = 23
            goto L_0x012b
        L_0x0172:
            r7 = 128(0x80, float:1.794E-43)
            goto L_0x012b
        L_0x0175:
            r7 = 91
            goto L_0x012b
        L_0x0178:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0329 }
            return r0
        L_0x0181:
            r1.setMax(r14)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            r4 = 1
            if (r0 == 0) goto L_0x018c
        L_0x0189:
            r7 = 134(0x86, float:1.88E-43)
            goto L_0x012b
        L_0x018c:
            r7 = 39
            goto L_0x012b
        L_0x018f:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0329 }
            throw r0     // Catch:{ all -> 0x0329 }
        L_0x0198:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x0329 }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0329 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0329 }
            r1.getMin = r0     // Catch:{ all -> 0x0329 }
            goto L_0x0154
        L_0x01aa:
            r1.setMax(r15)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 != 0) goto L_0x0326
            r0 = 38
            r7 = 38
            goto L_0x012b
        L_0x01b7:
            r7 = 129(0x81, float:1.81E-43)
            goto L_0x012b
        L_0x01bb:
            r7 = 161(0xa1, float:2.26E-43)
            goto L_0x012b
        L_0x01bf:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x031a }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x0329 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0329 }
        L_0x01d0:
            r1.setMax(r7)     // Catch:{ all -> 0x0329 }
            goto L_0x0147
        L_0x01d5:
            r7 = 102(0x66, float:1.43E-43)
            goto L_0x012b
        L_0x01d9:
            r1.setMax(r15)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 != 0) goto L_0x0326
            r0 = 69
            r7 = 69
            goto L_0x012b
        L_0x01e6:
            r7 = 1
            goto L_0x012b
        L_0x01e9:
            r7 = 159(0x9f, float:2.23E-43)
            goto L_0x012b
        L_0x01ed:
            int r0 = getMin     // Catch:{ all -> 0x0329 }
            r1.getMin = r0     // Catch:{ all -> 0x0329 }
            goto L_0x0154
        L_0x01f3:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x0329 }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            setMax = r0     // Catch:{ all -> 0x0329 }
            goto L_0x0147
        L_0x0204:
            r1.setMax(r10)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 != 0) goto L_0x0326
            r0 = 90
            r7 = 90
            goto L_0x012b
        L_0x0211:
            r7 = 165(0xa5, float:2.31E-43)
            goto L_0x012b
        L_0x0215:
            r7 = 94
            goto L_0x012b
        L_0x0219:
            r1.setMax(r14)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 == 0) goto L_0x012b
            r4 = 1
            if (r0 == r4) goto L_0x0225
            goto L_0x012b
        L_0x0225:
            r0 = 99
            r7 = 99
            goto L_0x012b
        L_0x022b:
            r1.getMin = r13     // Catch:{ all -> 0x0329 }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$4 r4 = (o.TitleBarRightButtonView.AnonymousClass4) r4     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$1 r0 = r0.onErrorResumeNext(r4)     // Catch:{ all -> 0x0329 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0329 }
            goto L_0x01d0
        L_0x0245:
            r7 = 3
            goto L_0x012b
        L_0x0248:
            r1.setMax(r14)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 == 0) goto L_0x0189
            r4 = 1
            goto L_0x018c
        L_0x0252:
            r1.setMax(r15)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 != 0) goto L_0x0326
            r0 = 125(0x7d, float:1.75E-43)
            r7 = 125(0x7d, float:1.75E-43)
            goto L_0x012b
        L_0x025f:
            r7 = 126(0x7e, float:1.77E-43)
            goto L_0x012b
        L_0x0263:
            r7 = 157(0x9d, float:2.2E-43)
            goto L_0x012b
        L_0x0267:
            r7 = 93
            goto L_0x012b
        L_0x026b:
            r7 = 101(0x65, float:1.42E-43)
            goto L_0x012b
        L_0x026f:
            r1.setMax(r14)     // Catch:{ all -> 0x0329 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0329 }
            if (r0 == 0) goto L_0x0280
            r4 = 1
            if (r0 == r4) goto L_0x027a
            goto L_0x0280
        L_0x027a:
            r0 = 31
            r7 = 31
            goto L_0x012b
        L_0x0280:
            r0 = 152(0x98, float:2.13E-43)
            r7 = 152(0x98, float:2.13E-43)
            goto L_0x012b
        L_0x0286:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x031a }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0329 }
            o.setExitListener r0 = r0.createDeepLinkData()     // Catch:{ all -> 0x0329 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0329 }
            goto L_0x01d0
        L_0x029b:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x031a }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0329 }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x0329 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0329 }
            goto L_0x01d0
        L_0x02ae:
            r1.getMin = r13     // Catch:{ all -> 0x0329 }
            r1.setMax(r5)     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0329 }
            o.setExitListener r0 = (o.setExitListener) r0     // Catch:{ all -> 0x0329 }
            r1.setMax(r4)     // Catch:{ all -> 0x0329 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0329 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x0329 }
            o.TitleBarRightButtonView$1 r0 = r0.login(r4)     // Catch:{ all -> 0x0329 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0329 }
            goto L_0x01d0
        L_0x02c9:
            r7 = 147(0x93, float:2.06E-43)
            goto L_0x012b
        L_0x02cd:
            r7 = 42
            goto L_0x012b
        L_0x02d1:
            r7 = 29
            goto L_0x012b
        L_0x02d5:
            o.getIgnoreEventList r0 = new o.getIgnoreEventList     // Catch:{ all -> 0x0329 }
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x031a }
            r1.setMax(r5)     // Catch:{ all -> 0x031a }
            r1.setMax(r4)     // Catch:{ all -> 0x031a }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x031a }
            o.setEventName r4 = (o.setEventName) r4     // Catch:{ all -> 0x031a }
            r0.<init>(r4)     // Catch:{ all -> 0x031a }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x031a }
        L_0x02e9:
            r1.setMax(r7)     // Catch:{ all -> 0x031a }
            goto L_0x0326
        L_0x02ed:
            r12 = 1
            r1.getMin = r13     // Catch:{ all -> 0x031a }
            r1.setMax(r5)     // Catch:{ all -> 0x031a }
            r1.setMax(r4)     // Catch:{ all -> 0x031a }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x031a }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x031a }
            r1.setMax(r4)     // Catch:{ all -> 0x031a }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x031a }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x031a }
            o.TitleBarRightButtonView$1 r0 = r0.map(r4)     // Catch:{ all -> 0x031a }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x031a }
            goto L_0x02e9
        L_0x0308:
            r7 = 70
            goto L_0x012b
        L_0x030c:
            r12 = 1
            r1.setMax(r15)     // Catch:{ all -> 0x031a }
            int r0 = r1.setMin     // Catch:{ all -> 0x031a }
            if (r0 != 0) goto L_0x0326
            r0 = 156(0x9c, float:2.19E-43)
            r7 = 156(0x9c, float:2.19E-43)
            goto L_0x012b
        L_0x031a:
            r0 = move-exception
            goto L_0x032b
        L_0x031c:
            r12 = 1
            r7 = 163(0xa3, float:2.28E-43)
            goto L_0x012b
        L_0x0321:
            r12 = 1
            r7 = 145(0x91, float:2.03E-43)
            goto L_0x012b
        L_0x0326:
            r7 = r9
            goto L_0x012b
        L_0x0329:
            r0 = move-exception
            r12 = 1
        L_0x032b:
            r4 = 25
            r5 = 30
            r7 = 132(0x84, float:1.85E-43)
            if (r9 < r4) goto L_0x033f
            if (r9 > r6) goto L_0x033f
            r4 = 133(0x85, float:1.86E-43)
            r4 = 102(0x66, float:1.43E-43)
            r7 = 133(0x85, float:1.86E-43)
        L_0x033b:
            r10 = 70
            goto L_0x04c0
        L_0x033f:
            if (r9 < r10) goto L_0x034a
            if (r9 > r11) goto L_0x034a
            r4 = 98
            r4 = 102(0x66, float:1.43E-43)
            r7 = 98
            goto L_0x033b
        L_0x034a:
            byte[] r4 = setMin
            byte r11 = r4[r8]
            byte r11 = (byte) r11
            r13 = 15376(0x3c10, float:2.1546E-41)
            short r13 = (short) r13
            r14 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r14]
            short r4 = (short) r4
            java.lang.String r4 = length(r11, r13, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x036e
            r4 = 32
            if (r9 < r4) goto L_0x036e
            if (r9 > r10) goto L_0x036e
        L_0x036b:
            r4 = 102(0x66, float:1.43E-43)
            goto L_0x033b
        L_0x036e:
            byte[] r4 = setMin
            byte r10 = r4[r8]
            byte r10 = (byte) r10
            r11 = 963(0x3c3, float:1.35E-42)
            short r11 = (short) r11
            r13 = 55
            byte r4 = r4[r13]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r10, r11, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0393
            r4 = 42
            if (r9 < r4) goto L_0x0395
            r10 = 43
            if (r9 > r10) goto L_0x0395
            goto L_0x036b
        L_0x0393:
            r4 = 42
        L_0x0395:
            byte[] r10 = setMin
            byte r10 = r10[r8]
            byte r10 = (byte) r10
            r13 = 15410(0x3c32, float:2.1594E-41)
            short r13 = (short) r13
            r14 = r13 & 239(0xef, float:3.35E-43)
            short r14 = (short) r14
            java.lang.String r10 = length(r10, r13, r14)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x03bb
            r10 = 65
            if (r9 < r10) goto L_0x03bb
            r10 = 66
            if (r9 > r10) goto L_0x03bb
            r4 = 102(0x66, float:1.43E-43)
            r7 = 30
            goto L_0x033b
        L_0x03bb:
            byte[] r10 = setMin
            byte r13 = r10[r8]
            byte r13 = (byte) r13
            r14 = 9099(0x238b, float:1.275E-41)
            short r14 = (short) r14
            r15 = 4829(0x12dd, float:6.767E-42)
            byte r10 = r10[r15]
            int r10 = -r10
            short r10 = (short) r10
            java.lang.String r10 = length(r13, r14, r10)
            java.lang.Class r10 = java.lang.Class.forName(r10)
            boolean r10 = r10.isInstance(r0)
            if (r10 == 0) goto L_0x03e5
            r10 = 70
            if (r9 < r10) goto L_0x03e7
            r13 = 71
            if (r9 > r13) goto L_0x03e7
            r4 = 102(0x66, float:1.43E-43)
        L_0x03e1:
            r7 = 30
            goto L_0x04c0
        L_0x03e5:
            r10 = 70
        L_0x03e7:
            byte[] r13 = setMin
            byte r15 = r13[r8]
            byte r15 = (byte) r15
            r4 = 1451(0x5ab, float:2.033E-42)
            short r4 = (short) r4
            r16 = 13952(0x3680, float:1.9551E-41)
            byte r13 = r13[r16]
            short r13 = (short) r13
            java.lang.String r4 = length(r15, r4, r13)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x040c
            r4 = 102(0x66, float:1.43E-43)
            if (r9 < r4) goto L_0x040e
            r13 = 103(0x67, float:1.44E-43)
            if (r9 > r13) goto L_0x040e
            goto L_0x04c0
        L_0x040c:
            r4 = 102(0x66, float:1.43E-43)
        L_0x040e:
            byte[] r13 = setMin
            byte r15 = r13[r8]
            byte r15 = (byte) r15
            r16 = 4829(0x12dd, float:6.767E-42)
            byte r13 = r13[r16]
            int r13 = -r13
            short r13 = (short) r13
            java.lang.String r13 = length(r15, r14, r13)
            java.lang.Class r13 = java.lang.Class.forName(r13)
            boolean r13 = r13.isInstance(r0)
            if (r13 == 0) goto L_0x0430
            r13 = 120(0x78, float:1.68E-43)
            if (r9 < r13) goto L_0x0430
            r13 = 126(0x7e, float:1.77E-43)
            if (r9 > r13) goto L_0x0430
        L_0x042f:
            goto L_0x03e1
        L_0x0430:
            byte[] r13 = setMin
            byte r14 = r13[r8]
            byte r14 = (byte) r14
            r15 = r14 | 4944(0x1350, float:6.928E-42)
            short r15 = (short) r15
            r16 = 13
            byte r13 = r13[r16]
            int r13 = -r13
            short r13 = (short) r13
            java.lang.String r13 = length(r14, r15, r13)
            java.lang.Class r13 = java.lang.Class.forName(r13)
            boolean r13 = r13.isInstance(r0)
            if (r13 == 0) goto L_0x0455
            r13 = 137(0x89, float:1.92E-43)
            if (r9 < r13) goto L_0x0455
            r13 = 140(0x8c, float:1.96E-43)
            if (r9 > r13) goto L_0x0455
            goto L_0x042f
        L_0x0455:
            byte[] r13 = setMin
            byte r14 = r13[r8]
            byte r14 = (byte) r14
            r15 = 55
            byte r13 = r13[r15]
            int r13 = -r13
            short r13 = (short) r13
            java.lang.String r11 = length(r14, r11, r13)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0477
            r11 = 138(0x8a, float:1.93E-43)
            if (r9 < r11) goto L_0x0477
            r11 = 139(0x8b, float:1.95E-43)
            if (r9 > r11) goto L_0x0477
            goto L_0x04c0
        L_0x0477:
            byte[] r11 = setMin
            byte r13 = r11[r8]
            byte r13 = (byte) r13
            r14 = r13 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            r15 = 9575(0x2567, float:1.3417E-41)
            byte r11 = r11[r15]
            short r11 = (short) r11
            java.lang.String r11 = length(r13, r14, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x049b
            r11 = 150(0x96, float:2.1E-43)
            if (r9 < r11) goto L_0x049b
            r11 = 151(0x97, float:2.12E-43)
            if (r9 > r11) goto L_0x049b
            goto L_0x04c0
        L_0x049b:
            byte[] r7 = setMin
            byte r11 = r7[r8]
            byte r11 = (byte) r11
            r13 = r11 | 976(0x3d0, float:1.368E-42)
            short r13 = (short) r13
            r14 = 54
            byte r7 = r7[r14]
            short r7 = (short) r7
            java.lang.String r7 = length(r11, r13, r7)
            java.lang.Class r7 = java.lang.Class.forName(r7)
            boolean r7 = r7.isInstance(r0)
            if (r7 == 0) goto L_0x04c9
            r7 = 153(0x99, float:2.14E-43)
            if (r9 < r7) goto L_0x04c9
            r7 = 157(0x9d, float:2.2E-43)
            if (r9 > r7) goto L_0x04c9
            goto L_0x042f
        L_0x04c0:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012b
        L_0x04c9:
            throw r0
        L_0x04ca:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x04d2
            throw r1
        L_0x04d2:
            goto L_0x04d4
        L_0x04d3:
            throw r0
        L_0x04d4:
            goto L_0x04d3
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$11(o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x0204, code lost:
        if (r5 <= 12) goto L_0x0206;
     */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x022d  */
    /* JADX WARNING: Removed duplicated region for block: B:76:0x0230  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$thenRegister$12(o.setEventName r18, java.lang.Boolean r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 4929(0x1341, float:6.907E-42)
            short r2 = (short) r2
            r3 = 205(0xcd, float:2.87E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0287 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0287 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0287 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0287 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0287 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0287 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0287 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0287 }
            short r9 = (short) r9     // Catch:{ all -> 0x0287 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0287 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0287 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0287 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0287 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0287 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0287 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0287 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0287 }
            short r12 = (short) r12     // Catch:{ all -> 0x0287 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0287 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0287 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0287 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0287 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0287 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0287 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0287 }
            short r13 = (short) r13     // Catch:{ all -> 0x0287 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0287 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0287 }
            r11[r6] = r12     // Catch:{ all -> 0x0287 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0287 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0287 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0287 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r12[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r5]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r5 = r14 | 1470(0x5be, float:2.06E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x011c }
            short r11 = (short) r11     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r14, r5, r11)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r7]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r14, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r11[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r11)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r12)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r15]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r13, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 44
            r4 = 43
        L_0x0129:
            int r5 = r6 + 1
            r8 = 55
            r9 = 60
            r10 = 10
            r0 = r2[r6]     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01e0 }
            r6 = 19
            r11 = 18
            switch(r0) {
                case -18: goto L_0x01da;
                case -17: goto L_0x01d6;
                case -16: goto L_0x01c7;
                case -15: goto L_0x01b9;
                case -14: goto L_0x01b4;
                case -13: goto L_0x019c;
                case -12: goto L_0x0199;
                case -11: goto L_0x0185;
                case -10: goto L_0x0183;
                case -9: goto L_0x0175;
                case -8: goto L_0x0166;
                case -7: goto L_0x015d;
                case -6: goto L_0x0154;
                case -5: goto L_0x0151;
                case -4: goto L_0x0148;
                case -3: goto L_0x0145;
                case -2: goto L_0x0142;
                case -1: goto L_0x0140;
                default: goto L_0x013e;
            }     // Catch:{ all -> 0x01e0 }
        L_0x013e:
            goto L_0x01dd
        L_0x0140:
            r6 = 2
            goto L_0x0129
        L_0x0142:
            r6 = 8
            goto L_0x0129
        L_0x0145:
            r6 = 44
            goto L_0x0129
        L_0x0148:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01e0 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01e0 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01e0 }
            throw r0     // Catch:{ all -> 0x01e0 }
        L_0x0151:
            r6 = 43
            goto L_0x0129
        L_0x0154:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01e0 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01e0 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x01e0 }
            return r0
        L_0x015d:
            int r0 = getMin     // Catch:{ all -> 0x01e0 }
            r1.getMin = r0     // Catch:{ all -> 0x01e0 }
        L_0x0161:
            r1.setMax(r10)     // Catch:{ all -> 0x01e0 }
            goto L_0x01dd
        L_0x0166:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x01e0 }
            r1.setMax(r11)     // Catch:{ all -> 0x01e0 }
            r1.setMax(r6)     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01e0 }
            setMax = r0     // Catch:{ all -> 0x01e0 }
            goto L_0x01dd
        L_0x0175:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01e0 }
            if (r0 != 0) goto L_0x01dd
            r0 = 36
            r6 = 36
            goto L_0x0129
        L_0x0183:
            r6 = 1
            goto L_0x0129
        L_0x0185:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01e0 }
            r1.setMax(r11)     // Catch:{ all -> 0x01e0 }
            r0 = 23
            r1.setMax(r0)     // Catch:{ all -> 0x01e0 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01e0 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01e0 }
            r1.getMin = r0     // Catch:{ all -> 0x01e0 }
            goto L_0x0161
        L_0x0199:
            r6 = 11
            goto L_0x0129
        L_0x019c:
            r0 = 34
            r1.setMax(r0)     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01e0 }
            if (r0 == r8) goto L_0x01b0
            r5 = 85
            if (r0 == r5) goto L_0x01aa
            goto L_0x01b0
        L_0x01aa:
            r0 = 38
            r6 = 38
            goto L_0x0129
        L_0x01b0:
            r6 = 60
            goto L_0x0129
        L_0x01b4:
            int r0 = setMax     // Catch:{ all -> 0x01e0 }
            r1.getMin = r0     // Catch:{ all -> 0x01e0 }
            goto L_0x0161
        L_0x01b9:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x01e0 }
            r1.setMax(r11)     // Catch:{ all -> 0x01e0 }
            r1.setMax(r6)     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01e0 }
            getMin = r0     // Catch:{ all -> 0x01e0 }
            goto L_0x01dd
        L_0x01c7:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x01e0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01e0 }
            if (r0 != 0) goto L_0x01dd
            r0 = 59
            r6 = 59
            goto L_0x0129
        L_0x01d6:
            r6 = 62
            goto L_0x0129
        L_0x01da:
            r6 = 6
            goto L_0x0129
        L_0x01dd:
            r6 = r5
            goto L_0x0129
        L_0x01e0:
            r0 = move-exception
            byte[] r6 = setMin
            byte r11 = r6[r7]
            byte r11 = (byte) r11
            r12 = r11 | 2097(0x831, float:2.939E-42)
            short r12 = (short) r12
            r13 = 9575(0x2567, float:1.3417E-41)
            byte r6 = r6[r13]
            short r6 = (short) r6
            java.lang.String r6 = length(r11, r12, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r11 = 37
            if (r6 == 0) goto L_0x0209
            r6 = 11
            if (r5 < r6) goto L_0x020b
            r12 = 12
            if (r5 > r12) goto L_0x020b
        L_0x0206:
            r14 = 1
            goto L_0x027c
        L_0x0209:
            r6 = 11
        L_0x020b:
            byte[] r12 = setMin
            byte r13 = r12[r7]
            byte r13 = (byte) r13
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            byte r8 = r12[r8]
            int r8 = -r8
            short r8 = (short) r8
            java.lang.String r8 = length(r13, r14, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x0230
            r8 = 31
            if (r5 < r8) goto L_0x0230
            r8 = 32
            if (r5 > r8) goto L_0x0230
            r5 = 5
            r11 = 5
            goto L_0x0206
        L_0x0230:
            r8 = 39
            if (r5 < r8) goto L_0x0239
            if (r5 > r4) goto L_0x0239
            r11 = 10
            goto L_0x0206
        L_0x0239:
            byte[] r8 = setMin
            byte r10 = r8[r7]
            byte r10 = (byte) r10
            r12 = 14230(0x3796, float:1.994E-41)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r8 = r8[r13]
            r14 = 1
            int r8 = r8 - r14
            short r8 = (short) r8
            java.lang.String r8 = length(r10, r12, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x025d
            if (r5 < r3) goto L_0x025d
            r8 = 45
            if (r5 > r8) goto L_0x025d
            goto L_0x027c
        L_0x025d:
            byte[] r8 = setMin
            byte r10 = r8[r7]
            byte r10 = (byte) r10
            r12 = 15376(0x3c10, float:2.1546E-41)
            short r12 = (short) r12
            byte r8 = r8[r13]
            short r8 = (short) r8
            java.lang.String r8 = length(r10, r12, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x0286
            r8 = 54
            if (r5 < r8) goto L_0x0286
            if (r5 > r9) goto L_0x0286
        L_0x027c:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r6 = r11
            goto L_0x0129
        L_0x0286:
            throw r0
        L_0x0287:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x028f
            throw r1
        L_0x028f:
            goto L_0x0291
        L_0x0290:
            throw r0
        L_0x0291:
            goto L_0x0290
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$12(o.setEventName, java.lang.Boolean):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:206:0x0515, code lost:
        if (r11 <= 125) goto L_0x03d8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:33:0x0182, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x01b0, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x01f5, code lost:
        r6 = 59;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x01f9, code lost:
        r6 = 48;
     */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x0396  */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x03a2  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$13(o.setEventName r19) throws java.lang.Exception {
        /*
            r18 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r18
            r0 = r19
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 2071(0x817, float:2.902E-42)
            short r3 = (short) r3
            r4 = 601(0x259, float:8.42E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x054d }
            r6 = 0
            r5[r6] = r3     // Catch:{ all -> 0x054d }
            byte[] r3 = setMin     // Catch:{ all -> 0x054d }
            r7 = 72
            byte r3 = r3[r7]     // Catch:{ all -> 0x054d }
            byte r3 = (byte) r3     // Catch:{ all -> 0x054d }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x054d }
            byte[] r9 = setMin     // Catch:{ all -> 0x054d }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x054d }
            short r9 = (short) r9     // Catch:{ all -> 0x054d }
            java.lang.String r3 = length(r3, r8, r9)     // Catch:{ all -> 0x054d }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x054d }
            byte[] r9 = setMin     // Catch:{ all -> 0x054d }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x054d }
            byte r9 = (byte) r9     // Catch:{ all -> 0x054d }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x054d }
            byte[] r13 = setMin     // Catch:{ all -> 0x054d }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x054d }
            short r13 = (short) r13     // Catch:{ all -> 0x054d }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x054d }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x054d }
            byte[] r13 = setMin     // Catch:{ all -> 0x054d }
            byte r13 = r13[r7]     // Catch:{ all -> 0x054d }
            byte r13 = (byte) r13     // Catch:{ all -> 0x054d }
            byte[] r14 = setMin     // Catch:{ all -> 0x054d }
            byte r14 = r14[r10]     // Catch:{ all -> 0x054d }
            short r14 = (short) r14     // Catch:{ all -> 0x054d }
            java.lang.String r13 = length(r13, r8, r14)     // Catch:{ all -> 0x054d }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x054d }
            r12[r6] = r13     // Catch:{ all -> 0x054d }
            java.lang.reflect.Method r3 = r3.getMethod(r9, r12)     // Catch:{ all -> 0x054d }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x054d }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x054d }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r9 = r0.length
            if (r5 >= r9) goto L_0x012b
            r9 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x0122 }
            r12[r6] = r9     // Catch:{ all -> 0x0122 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0122 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0122 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0122 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0122 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0122 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0122 }
            short r14 = (short) r14     // Catch:{ all -> 0x0122 }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x0122 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0122 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0122 }
            r15 = 49
            byte r14 = r14[r15]     // Catch:{ all -> 0x0122 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0122 }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0122 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0122 }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x0122 }
            short r11 = (short) r11     // Catch:{ all -> 0x0122 }
            java.lang.String r11 = length(r14, r15, r11)     // Catch:{ all -> 0x0122 }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x0122 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0122 }
            byte r15 = r15[r7]     // Catch:{ all -> 0x0122 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0122 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0122 }
            byte r4 = r16[r10]     // Catch:{ all -> 0x0122 }
            short r4 = (short) r4     // Catch:{ all -> 0x0122 }
            java.lang.String r4 = length(r15, r8, r4)     // Catch:{ all -> 0x0122 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0122 }
            r14[r6] = r4     // Catch:{ all -> 0x0122 }
            java.lang.reflect.Method r4 = r9.getMethod(r11, r14)     // Catch:{ all -> 0x0122 }
            r9 = 0
            java.lang.Object r4 = r4.invoke(r9, r12)     // Catch:{ all -> 0x0122 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0119 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0119 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0119 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0119 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0119 }
            short r11 = (short) r11     // Catch:{ all -> 0x0119 }
            java.lang.String r9 = length(r9, r13, r11)     // Catch:{ all -> 0x0119 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0119 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0119 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0119 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0119 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0119 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0119 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0119 }
            short r13 = (short) r13     // Catch:{ all -> 0x0119 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0119 }
            r12 = 0
            java.lang.reflect.Method r9 = r9.getMethod(r11, r12)     // Catch:{ all -> 0x0119 }
            r11 = 0
            java.lang.Object r4 = r9.invoke(r4, r11)     // Catch:{ all -> 0x0119 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0119 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0119 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r11 = 176(0xb0, float:2.47E-43)
            goto L_0x0083
        L_0x0119:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0121
            throw r1
        L_0x0121:
            throw r0
        L_0x0122:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012a
            throw r1
        L_0x012a:
            throw r0
        L_0x012b:
            r4 = 33
            r9 = 34
        L_0x012f:
            int r11 = r6 + 1
            r12 = 54
            r13 = 20
            r14 = 2
            r15 = 22
            r0 = r3[r6]     // Catch:{ all -> 0x038d }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x038d }
            r16 = 59
            r6 = 19
            r10 = 10
            r8 = 24
            r5 = 18
            r7 = 23
            switch(r0) {
                case -51: goto L_0x0382;
                case -50: goto L_0x037e;
                case -49: goto L_0x036f;
                case -48: goto L_0x036c;
                case -47: goto L_0x0368;
                case -46: goto L_0x035b;
                case -45: goto L_0x034d;
                case -44: goto L_0x0347;
                case -43: goto L_0x0344;
                case -42: goto L_0x0341;
                case -41: goto L_0x0335;
                case -40: goto L_0x0332;
                case -39: goto L_0x0317;
                case -38: goto L_0x02fc;
                case -37: goto L_0x02f8;
                case -36: goto L_0x02f5;
                case -35: goto L_0x02e8;
                case -34: goto L_0x02d9;
                case -33: goto L_0x02d3;
                case -32: goto L_0x02cf;
                case -31: goto L_0x02cb;
                case -30: goto L_0x02b8;
                case -29: goto L_0x02a6;
                case -28: goto L_0x02a2;
                case -27: goto L_0x029e;
                case -26: goto L_0x028b;
                case -25: goto L_0x0276;
                case -24: goto L_0x0263;
                case -23: goto L_0x024e;
                case -22: goto L_0x0234;
                case -21: goto L_0x0221;
                case -20: goto L_0x020c;
                case -19: goto L_0x0208;
                case -18: goto L_0x01fd;
                case -17: goto L_0x01e9;
                case -16: goto L_0x01e5;
                case -15: goto L_0x01e1;
                case -14: goto L_0x01d8;
                case -13: goto L_0x01d4;
                case -12: goto L_0x01d0;
                case -11: goto L_0x01c5;
                case -10: goto L_0x01c1;
                case -9: goto L_0x01bd;
                case -8: goto L_0x01b4;
                case -7: goto L_0x019f;
                case -6: goto L_0x019b;
                case -5: goto L_0x0186;
                case -4: goto L_0x0161;
                case -3: goto L_0x015d;
                case -2: goto L_0x0154;
                case -1: goto L_0x0150;
                default: goto L_0x014d;
            }     // Catch:{ all -> 0x038d }
        L_0x014d:
            r7 = 1
            goto L_0x0386
        L_0x0150:
            r6 = 62
            goto L_0x0387
        L_0x0154:
            r5 = 1
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x038d }
            return r0
        L_0x015d:
            r6 = 47
            goto L_0x0387
        L_0x0161:
            r0 = 3
            r1.getMin = r0     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.setExitListener r0 = (o.setExitListener) r0     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x038d }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r6 = r1.isInside     // Catch:{ all -> 0x038d }
            java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = r0.completeRegistration(r5, r6)     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
        L_0x0182:
            r1.setMax(r8)     // Catch:{ all -> 0x038d }
            goto L_0x014d
        L_0x0186:
            o.AppLog$Builder r0 = new o.AppLog$Builder     // Catch:{ all -> 0x038d }
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x038d }
            o.setEventName r5 = (o.setEventName) r5     // Catch:{ all -> 0x038d }
            r0.<init>(r5)     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x019b:
            r6 = 150(0x96, float:2.1E-43)
            goto L_0x0387
        L_0x019f:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x038d }
            boolean r0 = r0.success     // Catch:{ all -> 0x038d }
            r1.getMin = r0     // Catch:{ all -> 0x038d }
        L_0x01b0:
            r1.setMax(r10)     // Catch:{ all -> 0x038d }
            goto L_0x014d
        L_0x01b4:
            r1.setMax(r15)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 != 0) goto L_0x0386
            goto L_0x0387
        L_0x01bd:
            r6 = 26
            goto L_0x0387
        L_0x01c1:
            r6 = 92
            goto L_0x0387
        L_0x01c5:
            r1.setMax(r15)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 != 0) goto L_0x0386
            r6 = 24
            goto L_0x0387
        L_0x01d0:
            r6 = 56
            goto L_0x0387
        L_0x01d4:
            r6 = 90
            goto L_0x0387
        L_0x01d8:
            r5 = 1
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x038d }
            throw r0     // Catch:{ all -> 0x038d }
        L_0x01e1:
            r6 = 33
            goto L_0x0387
        L_0x01e5:
            r6 = 58
            goto L_0x0387
        L_0x01e9:
            r1.setMax(r9)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 == r14) goto L_0x01f9
            r5 = 91
            if (r0 == r5) goto L_0x01f5
            goto L_0x01f9
        L_0x01f5:
            r6 = 59
            goto L_0x0387
        L_0x01f9:
            r6 = 48
            goto L_0x0387
        L_0x01fd:
            r1.setMax(r9)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 == 0) goto L_0x01f5
            r5 = 1
            if (r0 == r5) goto L_0x01f9
            goto L_0x01f5
        L_0x0208:
            r6 = 37
            goto L_0x0387
        L_0x020c:
            r1.setMax(r9)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 == r12) goto L_0x021e
            r5 = 90
            if (r0 == r5) goto L_0x0218
            goto L_0x021e
        L_0x0218:
            r0 = 66
            r6 = 66
            goto L_0x0387
        L_0x021e:
            r6 = 1
            goto L_0x0387
        L_0x0221:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            int r0 = super.hashCode()     // Catch:{ all -> 0x038d }
            r1.getMin = r0     // Catch:{ all -> 0x038d }
            goto L_0x01b0
        L_0x0234:
            r1.setMax(r9)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            r5 = 9
            if (r0 == r5) goto L_0x0248
            r5 = 17
            if (r0 == r5) goto L_0x0242
            goto L_0x0248
        L_0x0242:
            r0 = 38
            r6 = 38
            goto L_0x0387
        L_0x0248:
            r0 = 30
            r6 = 30
            goto L_0x0387
        L_0x024e:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x038d }
            o.setExitListener r0 = r0.createDeepLinkData()     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x0263:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x038d }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x0276:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x038d }
            java.lang.String r0 = r0.getReferralCode()     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x028b:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x038d }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x029e:
            r6 = 8
            goto L_0x0387
        L_0x02a2:
            r6 = 34
            goto L_0x0387
        L_0x02a6:
            r1.setMax(r9)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            r6 = 1
            if (r0 == 0) goto L_0x02b5
            if (r0 == r6) goto L_0x02b1
            goto L_0x02b5
        L_0x02b1:
            r0 = 13
            r13 = 13
        L_0x02b5:
            r6 = r13
            goto L_0x0387
        L_0x02b8:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x02cb:
            r6 = 124(0x7c, float:1.74E-43)
            goto L_0x0387
        L_0x02cf:
            r6 = 101(0x65, float:1.42E-43)
            goto L_0x0387
        L_0x02d3:
            int r0 = getMin     // Catch:{ all -> 0x038d }
            r1.getMin = r0     // Catch:{ all -> 0x038d }
            goto L_0x01b0
        L_0x02d9:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x037c }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r6)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            setMax = r0     // Catch:{ all -> 0x038d }
            goto L_0x014d
        L_0x02e8:
            r1.setMax(r4)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 != 0) goto L_0x0386
            r0 = 87
            r6 = 87
            goto L_0x0387
        L_0x02f5:
            r6 = 6
            goto L_0x0387
        L_0x02f8:
            r6 = 88
            goto L_0x0387
        L_0x02fc:
            r1.getMin = r14     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x038d }
            o.RedDotDrawable r5 = (o.RedDotDrawable) r5     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = r0.map(r5)     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x0317:
            r1.getMin = r14     // Catch:{ all -> 0x038d }
            r1.setMax(r5)     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x038d }
            r1.setMax(r7)     // Catch:{ all -> 0x038d }
            java.lang.Object r5 = r1.isInside     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$4 r5 = (o.TitleBarRightButtonView.AnonymousClass4) r5     // Catch:{ all -> 0x038d }
            o.TitleBarRightButtonView$1 r0 = r0.onErrorResumeNext(r5)     // Catch:{ all -> 0x038d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x038d }
            goto L_0x0182
        L_0x0332:
            r6 = 68
            goto L_0x0387
        L_0x0335:
            r1.setMax(r4)     // Catch:{ all -> 0x038d }
            int r0 = r1.setMin     // Catch:{ all -> 0x038d }
            if (r0 != 0) goto L_0x0386
            r0 = 123(0x7b, float:1.72E-43)
            r6 = 123(0x7b, float:1.72E-43)
            goto L_0x0387
        L_0x0341:
            r6 = 28
            goto L_0x0387
        L_0x0344:
            r6 = 44
            goto L_0x0387
        L_0x0347:
            int r0 = setMax     // Catch:{ all -> 0x038d }
            r1.getMin = r0     // Catch:{ all -> 0x038d }
            goto L_0x01b0
        L_0x034d:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x037c }
            r1.setMax(r5)     // Catch:{ all -> 0x037c }
            r1.setMax(r6)     // Catch:{ all -> 0x037c }
            int r0 = r1.setMin     // Catch:{ all -> 0x037c }
            getMin = r0     // Catch:{ all -> 0x037c }
            goto L_0x0386
        L_0x035b:
            r7 = 1
            r1.setMax(r15)     // Catch:{ all -> 0x037c }
            int r0 = r1.setMin     // Catch:{ all -> 0x037c }
            if (r0 != 0) goto L_0x0386
            r0 = 149(0x95, float:2.09E-43)
            r6 = 149(0x95, float:2.09E-43)
            goto L_0x0387
        L_0x0368:
            r7 = 1
            r6 = 35
            goto L_0x0387
        L_0x036c:
            r6 = 99
            goto L_0x0387
        L_0x036f:
            r7 = 1
            r1.setMax(r15)     // Catch:{ all -> 0x037c }
            int r0 = r1.setMin     // Catch:{ all -> 0x037c }
            if (r0 != 0) goto L_0x0386
            r0 = 174(0xae, float:2.44E-43)
            r6 = 174(0xae, float:2.44E-43)
            goto L_0x0387
        L_0x037c:
            r0 = move-exception
            goto L_0x038f
        L_0x037e:
            r7 = 1
            r6 = 175(0xaf, float:2.45E-43)
            goto L_0x0387
        L_0x0382:
            r7 = 1
            r6 = 94
            goto L_0x0387
        L_0x0386:
            r6 = r11
        L_0x0387:
            r7 = 72
            r10 = 58
            goto L_0x012f
        L_0x038d:
            r0 = move-exception
            r7 = 1
        L_0x038f:
            r5 = 43
            if (r11 < r14) goto L_0x03a2
            r6 = 6
            if (r11 > r6) goto L_0x03a2
            r5 = 46
            r5 = 124(0x7c, float:1.74E-43)
            r6 = 99
            r8 = 46
        L_0x039e:
            r10 = 72
            goto L_0x0542
        L_0x03a2:
            r6 = 15
            if (r11 < r6) goto L_0x03b1
            if (r11 > r13) goto L_0x03b1
            r5 = 32
            r5 = 124(0x7c, float:1.74E-43)
            r6 = 99
            r8 = 32
            goto L_0x039e
        L_0x03b1:
            byte[] r6 = setMin
            r8 = 72
            byte r10 = r6[r8]
            byte r8 = (byte) r10
            r10 = 15376(0x3c10, float:2.1546E-41)
            short r10 = (short) r10
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r13]
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x03db
            r6 = 21
            if (r11 < r6) goto L_0x03db
            if (r11 > r15) goto L_0x03db
        L_0x03d4:
            r5 = 124(0x7c, float:1.74E-43)
            r6 = 99
        L_0x03d8:
            r8 = 176(0xb0, float:2.47E-43)
            goto L_0x039e
        L_0x03db:
            r6 = 39
            if (r11 < r6) goto L_0x03ea
            if (r11 > r5) goto L_0x03ea
            r5 = 25
            r5 = 124(0x7c, float:1.74E-43)
            r6 = 99
            r8 = 25
            goto L_0x039e
        L_0x03ea:
            byte[] r6 = setMin
            r8 = 72
            byte r14 = r6[r8]
            byte r8 = (byte) r14
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r15 = 55
            byte r6 = r6[r15]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0417
            r6 = 51
            if (r11 < r6) goto L_0x0417
            r6 = 56
            if (r11 > r6) goto L_0x0417
        L_0x0410:
            r5 = 124(0x7c, float:1.74E-43)
            r6 = 99
        L_0x0414:
            r8 = 43
            goto L_0x039e
        L_0x0417:
            byte[] r6 = setMin
            r8 = 72
            byte r14 = r6[r8]
            byte r8 = (byte) r14
            r14 = r8 | 976(0x3d0, float:1.368E-42)
            short r14 = (short) r14
            byte r6 = r6[r12]
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x043b
            r6 = 60
            if (r11 < r6) goto L_0x043b
            r6 = 61
            if (r11 > r6) goto L_0x043b
            goto L_0x03d4
        L_0x043b:
            byte[] r6 = setMin
            r8 = 72
            byte r14 = r6[r8]
            byte r8 = (byte) r14
            byte r6 = r6[r13]
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x045c
            r6 = 94
            if (r11 < r6) goto L_0x045c
            r6 = 95
            if (r11 > r6) goto L_0x045c
            goto L_0x0410
        L_0x045c:
            byte[] r6 = setMin
            r8 = 72
            byte r14 = r6[r8]
            byte r8 = (byte) r14
            r14 = r8 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            r15 = 1197(0x4ad, float:1.677E-42)
            byte r6 = r6[r15]
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0484
            r6 = 96
            if (r11 < r6) goto L_0x0484
            r6 = 99
            if (r11 > r6) goto L_0x0484
        L_0x0481:
            r5 = 124(0x7c, float:1.74E-43)
            goto L_0x0414
        L_0x0484:
            byte[] r6 = setMin
            r8 = 72
            byte r14 = r6[r8]
            byte r8 = (byte) r14
            r14 = r8 | 976(0x3d0, float:1.368E-42)
            short r14 = (short) r14
            byte r6 = r6[r12]
            short r6 = (short) r6
            java.lang.String r6 = length(r8, r14, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x04ab
            r6 = 97
            if (r11 < r6) goto L_0x04ab
            r6 = 99
            if (r11 > r6) goto L_0x04ad
            r5 = 124(0x7c, float:1.74E-43)
            goto L_0x03d8
        L_0x04ab:
            r6 = 99
        L_0x04ad:
            byte[] r8 = setMin
            r12 = 72
            byte r14 = r8[r12]
            byte r12 = (byte) r14
            byte r8 = r8[r13]
            short r8 = (short) r8
            java.lang.String r8 = length(r12, r10, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x04ce
            r8 = 101(0x65, float:1.42E-43)
            if (r11 < r8) goto L_0x04ce
            r8 = 124(0x7c, float:1.74E-43)
            if (r11 > r8) goto L_0x04ce
            goto L_0x0481
        L_0x04ce:
            byte[] r8 = setMin
            r10 = 72
            byte r12 = r8[r10]
            byte r10 = (byte) r12
            r12 = 1451(0x5ab, float:2.033E-42)
            short r12 = (short) r12
            byte r8 = r8[r13]
            short r8 = (short) r8
            java.lang.String r8 = length(r10, r12, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x04f2
            r8 = 119(0x77, float:1.67E-43)
            if (r11 < r8) goto L_0x04f2
            r8 = 124(0x7c, float:1.74E-43)
            if (r11 > r8) goto L_0x04f2
            goto L_0x0481
        L_0x04f2:
            byte[] r5 = setMin
            r8 = 72
            byte r10 = r5[r8]
            byte r8 = (byte) r10
            r10 = r8 | 5841(0x16d1, float:8.185E-42)
            short r10 = (short) r10
            r12 = 1197(0x4ad, float:1.677E-42)
            byte r5 = r5[r12]
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r10, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0519
            r5 = 124(0x7c, float:1.74E-43)
            if (r11 < r5) goto L_0x051b
            r8 = 125(0x7d, float:1.75E-43)
            if (r11 > r8) goto L_0x051b
            goto L_0x03d8
        L_0x0519:
            r5 = 124(0x7c, float:1.74E-43)
        L_0x051b:
            byte[] r8 = setMin
            r10 = 72
            byte r12 = r8[r10]
            byte r12 = (byte) r12
            r13 = r12 | 2097(0x831, float:2.939E-42)
            short r13 = (short) r13
            r14 = 9575(0x2567, float:1.3417E-41)
            byte r8 = r8[r14]
            short r8 = (short) r8
            java.lang.String r8 = length(r12, r13, r8)
            java.lang.Class r8 = java.lang.Class.forName(r8)
            boolean r8 = r8.isInstance(r0)
            if (r8 == 0) goto L_0x054c
            r8 = 144(0x90, float:2.02E-43)
            if (r11 < r8) goto L_0x054c
            r8 = 145(0x91, float:2.03E-43)
            if (r11 > r8) goto L_0x054c
            r8 = 176(0xb0, float:2.47E-43)
        L_0x0542:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r6 = r8
            goto L_0x0387
        L_0x054c:
            throw r0
        L_0x054d:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0555
            throw r1
        L_0x0555:
            goto L_0x0557
        L_0x0556:
            throw r0
        L_0x0557:
            goto L_0x0556
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$13(o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:115:0x0296, code lost:
        r7 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:0x0155, code lost:
        r7 = 95;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x017a, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x01ce, code lost:
        r7 = 115;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$thenRegister$14(o.setEventName r20) throws java.lang.Exception {
        /*
            r19 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r19
            r0 = r20
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = r0 | 6310(0x18a6, float:8.842E-42)
            short r3 = (short) r3
            r4 = 497(0x1f1, float:6.96E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x041e }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x041e }
            byte[] r3 = setMin     // Catch:{ all -> 0x041e }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x041e }
            byte r3 = (byte) r3     // Catch:{ all -> 0x041e }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x041e }
            byte[] r10 = setMin     // Catch:{ all -> 0x041e }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x041e }
            short r10 = (short) r10     // Catch:{ all -> 0x041e }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x041e }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x041e }
            byte[] r10 = setMin     // Catch:{ all -> 0x041e }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x041e }
            byte r10 = (byte) r10     // Catch:{ all -> 0x041e }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x041e }
            byte[] r13 = setMin     // Catch:{ all -> 0x041e }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x041e }
            short r13 = (short) r13     // Catch:{ all -> 0x041e }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x041e }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x041e }
            byte[] r13 = setMin     // Catch:{ all -> 0x041e }
            byte r13 = r13[r8]     // Catch:{ all -> 0x041e }
            byte r13 = (byte) r13     // Catch:{ all -> 0x041e }
            byte[] r15 = setMin     // Catch:{ all -> 0x041e }
            byte r15 = r15[r11]     // Catch:{ all -> 0x041e }
            short r15 = (short) r15     // Catch:{ all -> 0x041e }
            java.lang.String r13 = length(r13, r9, r15)     // Catch:{ all -> 0x041e }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x041e }
            r12[r7] = r13     // Catch:{ all -> 0x041e }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x041e }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x041e }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x041e }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            if (r5 >= r10) goto L_0x0129
            r10 = r0[r5]
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ all -> 0x0120 }
            r12[r7] = r10     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0120 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0120 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0120 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x0120 }
            short r15 = (short) r15     // Catch:{ all -> 0x0120 }
            java.lang.String r10 = length(r10, r13, r15)     // Catch:{ all -> 0x0120 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            byte r15 = r15[r6]     // Catch:{ all -> 0x0120 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0120 }
            r14 = r15 | 1470(0x5be, float:2.06E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            r17 = 52
            byte r6 = r16[r17]     // Catch:{ all -> 0x0120 }
            short r6 = (short) r6     // Catch:{ all -> 0x0120 }
            java.lang.String r6 = length(r15, r14, r6)     // Catch:{ all -> 0x0120 }
            java.lang.Class[] r14 = new java.lang.Class[r4]     // Catch:{ all -> 0x0120 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0120 }
            byte r15 = r15[r8]     // Catch:{ all -> 0x0120 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0120 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0120 }
            byte r4 = r16[r11]     // Catch:{ all -> 0x0120 }
            short r4 = (short) r4     // Catch:{ all -> 0x0120 }
            java.lang.String r4 = length(r15, r9, r4)     // Catch:{ all -> 0x0120 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0120 }
            r14[r7] = r4     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r14)     // Catch:{ all -> 0x0120 }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r12)     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0117 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0117 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0117 }
            short r12 = (short) r12     // Catch:{ all -> 0x0117 }
            java.lang.String r10 = length(r10, r13, r12)     // Catch:{ all -> 0x0117 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0117 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0117 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0117 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0117 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0117 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0117 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0117 }
            short r14 = (short) r14     // Catch:{ all -> 0x0117 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0117 }
            java.lang.reflect.Method r10 = r10.getMethod(r12, r6)     // Catch:{ all -> 0x0117 }
            java.lang.Object r4 = r10.invoke(r4, r6)     // Catch:{ all -> 0x0117 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0117 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0117 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            r14 = 113(0x71, float:1.58E-43)
            goto L_0x0083
        L_0x0117:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011f
            throw r1
        L_0x011f:
            throw r0
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r4 = 6
            r6 = 33
        L_0x012c:
            int r9 = r7 + 1
            r10 = 76
            r11 = 35
            r0 = r3[r7]     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x0299 }
            r7 = 10
            r12 = 95
            r13 = 23
            r14 = 18
            r15 = 34
            switch(r0) {
                case -38: goto L_0x0286;
                case -37: goto L_0x0282;
                case -36: goto L_0x027e;
                case -35: goto L_0x0271;
                case -34: goto L_0x026d;
                case -33: goto L_0x0257;
                case -32: goto L_0x0254;
                case -31: goto L_0x0251;
                case -30: goto L_0x024d;
                case -29: goto L_0x0239;
                case -28: goto L_0x0221;
                case -27: goto L_0x021d;
                case -26: goto L_0x0219;
                case -25: goto L_0x0215;
                case -24: goto L_0x0206;
                case -23: goto L_0x01f3;
                case -22: goto L_0x01e9;
                case -21: goto L_0x01e6;
                case -20: goto L_0x01e3;
                case -19: goto L_0x01df;
                case -18: goto L_0x01d2;
                case -17: goto L_0x01ce;
                case -16: goto L_0x01ca;
                case -15: goto L_0x01c6;
                case -14: goto L_0x01c2;
                case -13: goto L_0x01b3;
                case -12: goto L_0x01a1;
                case -11: goto L_0x01a0;
                case -10: goto L_0x019d;
                case -9: goto L_0x019a;
                case -8: goto L_0x018e;
                case -7: goto L_0x017e;
                case -6: goto L_0x0176;
                case -5: goto L_0x016d;
                case -4: goto L_0x016a;
                case -3: goto L_0x0158;
                case -2: goto L_0x014b;
                case -1: goto L_0x0148;
                default: goto L_0x0145;
            }     // Catch:{ all -> 0x0299 }
        L_0x0145:
            r7 = 1
            goto L_0x0296
        L_0x0148:
            r7 = 101(0x65, float:1.42E-43)
            goto L_0x012c
        L_0x014b:
            r1.setMax(r15)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            r7 = 7
            if (r0 == r7) goto L_0x01ce
            r7 = 63
        L_0x0155:
            r7 = 95
            goto L_0x012c
        L_0x0158:
            r1.setMax(r15)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 == 0) goto L_0x0165
            r7 = 1
            r0 = 45
            r7 = 45
            goto L_0x012c
        L_0x0165:
            r0 = 105(0x69, float:1.47E-43)
            r7 = 105(0x69, float:1.47E-43)
            goto L_0x012c
        L_0x016a:
            r7 = 112(0x70, float:1.57E-43)
            goto L_0x012c
        L_0x016d:
            r7 = 1
            r1.setMax(r7)     // Catch:{ all -> 0x024b }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0299 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0299 }
            throw r0     // Catch:{ all -> 0x0299 }
        L_0x0176:
            int r0 = getMin     // Catch:{ all -> 0x0299 }
            r1.getMin = r0     // Catch:{ all -> 0x0299 }
        L_0x017a:
            r1.setMax(r7)     // Catch:{ all -> 0x0299 }
            goto L_0x0145
        L_0x017e:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x024b }
            r1.setMax(r14)     // Catch:{ all -> 0x0299 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            setMax = r0     // Catch:{ all -> 0x0299 }
            goto L_0x0145
        L_0x018e:
            r1.setMax(r6)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 != 0) goto L_0x0296
            r0 = 32
            r7 = 32
            goto L_0x012c
        L_0x019a:
            r7 = 116(0x74, float:1.63E-43)
            goto L_0x012c
        L_0x019d:
            r7 = 42
            goto L_0x012c
        L_0x01a0:
            return
        L_0x01a1:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x0299 }
            r1.setMax(r14)     // Catch:{ all -> 0x0299 }
            r1.setMax(r13)     // Catch:{ all -> 0x0299 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0299 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0299 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0299 }
            r1.getMin = r0     // Catch:{ all -> 0x0299 }
            goto L_0x017a
        L_0x01b3:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 != 0) goto L_0x0296
            r0 = 41
            r7 = 41
            goto L_0x012c
        L_0x01c2:
            r7 = 110(0x6e, float:1.54E-43)
            goto L_0x012c
        L_0x01c6:
            r7 = 113(0x71, float:1.58E-43)
            goto L_0x012c
        L_0x01ca:
            r7 = 152(0x98, float:2.13E-43)
            goto L_0x012c
        L_0x01ce:
            r7 = 115(0x73, float:1.61E-43)
            goto L_0x012c
        L_0x01d2:
            r1.setMax(r6)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 != 0) goto L_0x0296
            r0 = 75
            r7 = 75
            goto L_0x012c
        L_0x01df:
            r7 = 33
            goto L_0x012c
        L_0x01e3:
            r7 = 3
            goto L_0x012c
        L_0x01e6:
            r7 = 2
            goto L_0x012c
        L_0x01e9:
            r1.setMax(r15)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            r15 = 1
            if (r0 == 0) goto L_0x01ce
            goto L_0x0155
        L_0x01f3:
            r15 = 1
            r1.getMin = r15     // Catch:{ all -> 0x0299 }
            r1.setMax(r14)     // Catch:{ all -> 0x0299 }
            r1.setMax(r13)     // Catch:{ all -> 0x0299 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0299 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0299 }
            r1.getMin = r0     // Catch:{ all -> 0x0299 }
            goto L_0x017a
        L_0x0206:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 != 0) goto L_0x0296
            r0 = 92
            r7 = 92
            goto L_0x012c
        L_0x0215:
            r7 = 93
            goto L_0x012c
        L_0x0219:
            r7 = 119(0x77, float:1.67E-43)
            goto L_0x012c
        L_0x021d:
            r7 = 83
            goto L_0x012c
        L_0x0221:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x024b }
            r1.setMax(r14)     // Catch:{ all -> 0x0299 }
            r1.setMax(r13)     // Catch:{ all -> 0x0299 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0299 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0299 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x0299 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0299 }
            r0 = 24
            r1.setMax(r0)     // Catch:{ all -> 0x0299 }
            goto L_0x0145
        L_0x0239:
            r7 = 1
            r1.getMin = r7     // Catch:{ all -> 0x024b }
            r1.setMax(r14)     // Catch:{ all -> 0x0299 }
            r1.setMax(r13)     // Catch:{ all -> 0x0299 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0299 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x0299 }
            r0.clear()     // Catch:{ all -> 0x0299 }
            goto L_0x0145
        L_0x024b:
            r0 = move-exception
            goto L_0x029b
        L_0x024d:
            r7 = 121(0x79, float:1.7E-43)
            goto L_0x012c
        L_0x0251:
            r7 = 6
            goto L_0x012c
        L_0x0254:
            r7 = 1
            goto L_0x012c
        L_0x0257:
            r1.setMax(r15)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            r7 = 77
            if (r0 == r7) goto L_0x0269
            r7 = 86
            if (r0 == r7) goto L_0x0265
            goto L_0x0269
        L_0x0265:
            r7 = 76
            goto L_0x012c
        L_0x0269:
            r7 = 35
            goto L_0x012c
        L_0x026d:
            r7 = 49
            goto L_0x012c
        L_0x0271:
            r1.setMax(r6)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            if (r0 != 0) goto L_0x0296
            r0 = 151(0x97, float:2.12E-43)
            r7 = 151(0x97, float:2.12E-43)
            goto L_0x012c
        L_0x027e:
            r7 = 99
            goto L_0x012c
        L_0x0282:
            r7 = 81
            goto L_0x012c
        L_0x0286:
            r1.setMax(r15)     // Catch:{ all -> 0x0299 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0299 }
            r7 = 1
            if (r0 == 0) goto L_0x0291
            r0 = 85
            goto L_0x0293
        L_0x0291:
            r0 = 37
        L_0x0293:
            r7 = r0
            goto L_0x012c
        L_0x0296:
            r7 = r9
            goto L_0x012c
        L_0x0299:
            r0 = move-exception
            r7 = 1
        L_0x029b:
            byte[] r12 = setMin
            byte r13 = r12[r8]
            byte r13 = (byte) r13
            r14 = r13 | 4944(0x1350, float:6.928E-42)
            short r14 = (short) r14
            r15 = 13
            byte r12 = r12[r15]
            int r12 = -r12
            short r12 = (short) r12
            java.lang.String r12 = length(r13, r14, r12)
            java.lang.Class r12 = java.lang.Class.forName(r12)
            boolean r12 = r12.isInstance(r0)
            r13 = 5
            if (r12 == 0) goto L_0x02be
            if (r9 < r4) goto L_0x02be
            if (r9 > r6) goto L_0x02be
            goto L_0x0415
        L_0x02be:
            byte[] r12 = setMin
            byte r14 = r12[r8]
            byte r14 = (byte) r14
            r4 = r14 | 976(0x3d0, float:1.368E-42)
            short r4 = (short) r4
            r17 = 54
            byte r12 = r12[r17]
            short r12 = (short) r12
            java.lang.String r4 = length(r14, r4, r12)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x02e7
            r4 = 27
            if (r9 < r4) goto L_0x02e7
            r4 = 28
            if (r9 > r4) goto L_0x02e7
        L_0x02e1:
            r4 = 118(0x76, float:1.65E-43)
            r13 = 118(0x76, float:1.65E-43)
            goto L_0x0415
        L_0x02e7:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            r12 = 15410(0x3c32, float:2.1594E-41)
            short r12 = (short) r12
            r14 = r12 & 239(0xef, float:3.35E-43)
            short r14 = (short) r14
            java.lang.String r4 = length(r4, r12, r14)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0309
            r4 = 38
            if (r9 < r4) goto L_0x0309
            r4 = 39
            if (r9 > r4) goto L_0x0309
            goto L_0x02e1
        L_0x0309:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 5841(0x16d1, float:8.185E-42)
            short r6 = (short) r6
            r18 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r18]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x032c
            r4 = 49
            if (r9 < r4) goto L_0x032e
            if (r9 > r10) goto L_0x032e
            goto L_0x0415
        L_0x032c:
            r4 = 49
        L_0x032e:
            byte[] r5 = setMin
            byte r6 = r5[r8]
            byte r6 = (byte) r6
            r4 = r6 | 4944(0x1350, float:6.928E-42)
            short r4 = (short) r4
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r4 = length(r6, r4, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0350
            r4 = 71
            if (r9 < r4) goto L_0x0350
            if (r9 > r10) goto L_0x0350
            goto L_0x0415
        L_0x0350:
            r4 = 77
            if (r9 < r4) goto L_0x035e
            r4 = 81
            if (r9 > r4) goto L_0x035e
            r4 = 84
            r13 = 84
            goto L_0x0415
        L_0x035e:
            r4 = 87
            if (r9 < r4) goto L_0x036c
            r4 = 93
            if (r9 > r4) goto L_0x036c
            r4 = 44
            r13 = 44
            goto L_0x0415
        L_0x036c:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 4944(0x1350, float:6.928E-42)
            short r6 = (short) r6
            byte r4 = r4[r15]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0390
            r4 = 86
            if (r9 < r4) goto L_0x0390
            r4 = 87
            if (r9 > r4) goto L_0x0390
            goto L_0x0415
        L_0x0390:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 2097(0x831, float:2.939E-42)
            short r6 = (short) r6
            r10 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r10]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03b4
            r4 = 96
            if (r9 < r4) goto L_0x03b4
            r4 = 99
            if (r9 > r4) goto L_0x03b4
            goto L_0x0415
        L_0x03b4:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 5841(0x16d1, float:8.185E-42)
            short r6 = (short) r6
            r10 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r10]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03d8
            r4 = 97
            if (r9 < r4) goto L_0x03d8
            r4 = 98
            if (r9 > r4) goto L_0x03d8
            goto L_0x0415
        L_0x03d8:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 976(0x3d0, float:1.368E-42)
            short r6 = (short) r6
            byte r4 = r4[r17]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03fa
            r4 = 121(0x79, float:1.7E-43)
            if (r9 < r4) goto L_0x03fa
            r4 = 152(0x98, float:2.13E-43)
            if (r9 > r4) goto L_0x03fa
            goto L_0x0415
        L_0x03fa:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            java.lang.String r4 = length(r4, r12, r14)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x041d
            r4 = 147(0x93, float:2.06E-43)
            if (r9 < r4) goto L_0x041d
            r4 = 148(0x94, float:2.07E-43)
            if (r9 > r4) goto L_0x041d
        L_0x0415:
            r1.IsOverlapping = r0
            r1.setMax(r11)
            r7 = r13
            goto L_0x0129
        L_0x041d:
            throw r0
        L_0x041e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0426
            throw r1
        L_0x0426:
            goto L_0x0428
        L_0x0427:
            throw r0
        L_0x0428:
            goto L_0x0427
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$14(o.setEventName):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:135:0x03c5, code lost:
        if (r5 <= 103) goto L_0x042f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x0152, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x0194, code lost:
        r1.setMax(10);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ void lambda$thenRegister$15(o.setEventName r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r19
            r1.<init>(r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 12216(0x2fb8, float:1.7118E-41)
            short r2 = (short) r2
            r3 = 430(0x1ae, float:6.03E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0439 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0439 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0439 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0439 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0439 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0439 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0439 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0439 }
            short r9 = (short) r9     // Catch:{ all -> 0x0439 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0439 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0439 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0439 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0439 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0439 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0439 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0439 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0439 }
            short r12 = (short) r12     // Catch:{ all -> 0x0439 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0439 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0439 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0439 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0439 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0439 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0439 }
            byte r14 = r14[r10]     // Catch:{ all -> 0x0439 }
            short r14 = (short) r14     // Catch:{ all -> 0x0439 }
            java.lang.String r12 = length(r12, r8, r14)     // Catch:{ all -> 0x0439 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0439 }
            r11[r6] = r12     // Catch:{ all -> 0x0439 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0439 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0439 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0439 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0081:
            int r9 = r0.length
            r11 = 11
            if (r4 >= r9) goto L_0x0127
            r9 = r0[r4]
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ all -> 0x011e }
            r12[r6] = r9     // Catch:{ all -> 0x011e }
            byte[] r9 = setMin     // Catch:{ all -> 0x011e }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011e }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011e }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x011e }
            short r15 = (short) r15     // Catch:{ all -> 0x011e }
            java.lang.String r9 = length(r9, r14, r15)     // Catch:{ all -> 0x011e }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            byte r15 = r15[r5]     // Catch:{ all -> 0x011e }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011e }
            r5 = r15 | 1470(0x5be, float:2.06E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            r17 = 52
            byte r13 = r16[r17]     // Catch:{ all -> 0x011e }
            short r13 = (short) r13     // Catch:{ all -> 0x011e }
            java.lang.String r5 = length(r15, r5, r13)     // Catch:{ all -> 0x011e }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011e }
            byte[] r15 = setMin     // Catch:{ all -> 0x011e }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011e }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011e }
            byte[] r16 = setMin     // Catch:{ all -> 0x011e }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011e }
            short r3 = (short) r3     // Catch:{ all -> 0x011e }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011e }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011e }
            r13[r6] = r3     // Catch:{ all -> 0x011e }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011e }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r12)     // Catch:{ all -> 0x011e }
            byte[] r9 = setMin     // Catch:{ all -> 0x0115 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0115 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r13 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0115 }
            short r12 = (short) r12     // Catch:{ all -> 0x0115 }
            java.lang.String r9 = length(r9, r14, r12)     // Catch:{ all -> 0x0115 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0115 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0115 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0115 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0115 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0115 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0115 }
            byte r11 = r14[r11]     // Catch:{ all -> 0x0115 }
            short r11 = (short) r11     // Catch:{ all -> 0x0115 }
            java.lang.String r11 = length(r12, r13, r11)     // Catch:{ all -> 0x0115 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0115 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0115 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0115 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0115 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            r13 = 113(0x71, float:1.58E-43)
            goto L_0x0081
        L_0x0115:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011d
            throw r1
        L_0x011d:
            throw r0
        L_0x011e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0126
            throw r1
        L_0x0126:
            throw r0
        L_0x0127:
            r4 = 66
        L_0x0129:
            int r5 = r6 + 1
            r8 = 10
            r9 = 9
            r0 = r2[r6]     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x02b7 }
            r6 = 34
            r12 = 2
            r13 = 22
            r14 = 24
            r15 = 18
            r3 = 23
            switch(r0) {
                case -36: goto L_0x02a7;
                case -35: goto L_0x02a3;
                case -34: goto L_0x028e;
                case -33: goto L_0x0277;
                case -32: goto L_0x0273;
                case -31: goto L_0x025c;
                case -30: goto L_0x0254;
                case -29: goto L_0x023e;
                case -28: goto L_0x022b;
                case -27: goto L_0x0222;
                case -26: goto L_0x021e;
                case -25: goto L_0x021d;
                case -24: goto L_0x0219;
                case -23: goto L_0x0216;
                case -22: goto L_0x0212;
                case -21: goto L_0x0203;
                case -20: goto L_0x01ff;
                case -19: goto L_0x01fb;
                case -18: goto L_0x01ee;
                case -17: goto L_0x01dd;
                case -16: goto L_0x01d8;
                case -15: goto L_0x01d4;
                case -14: goto L_0x01d0;
                case -13: goto L_0x01c1;
                case -12: goto L_0x01b0;
                case -11: goto L_0x01ab;
                case -10: goto L_0x01a7;
                case -9: goto L_0x01a5;
                case -8: goto L_0x0199;
                case -7: goto L_0x0183;
                case -6: goto L_0x0180;
                case -5: goto L_0x0169;
                case -4: goto L_0x0157;
                case -3: goto L_0x014b;
                case -2: goto L_0x0148;
                case -1: goto L_0x0145;
                default: goto L_0x0143;
            }     // Catch:{ all -> 0x02b7 }
        L_0x0143:
            goto L_0x02b4
        L_0x0145:
            r6 = 113(0x71, float:1.58E-43)
            goto L_0x0129
        L_0x0148:
            r6 = 104(0x68, float:1.46E-43)
            goto L_0x0129
        L_0x014b:
            com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo r0 = new com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo     // Catch:{ all -> 0x02b7 }
            r0.<init>()     // Catch:{ all -> 0x02b7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02b7 }
        L_0x0152:
            r1.setMax(r14)     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x0157:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x02b7 }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x02b7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x0152
        L_0x0169:
            r1.getMin = r12     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo r0 = (com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo) r0     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r3 = r1.isInside     // Catch:{ all -> 0x02b7 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ all -> 0x02b7 }
            r0.userID = r3     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x0180:
            r6 = 37
            goto L_0x0129
        L_0x0183:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x02b7 }
            boolean r0 = r0.success     // Catch:{ all -> 0x02b7 }
            r1.getMin = r0     // Catch:{ all -> 0x02b7 }
        L_0x0194:
            r1.setMax(r8)     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x0199:
            r1.setMax(r13)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 != 0) goto L_0x02b4
            r0 = 15
            r6 = 15
            goto L_0x0129
        L_0x01a5:
            r6 = 3
            goto L_0x0129
        L_0x01a7:
            r6 = 83
            goto L_0x0129
        L_0x01ab:
            int r0 = getMin     // Catch:{ all -> 0x02b7 }
            r1.getMin = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x0194
        L_0x01b0:
            r3 = 1
            r1.getMin = r3     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            setMax = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x01c1:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 != 0) goto L_0x02b4
            r0 = 36
            r6 = 36
            goto L_0x0129
        L_0x01d0:
            r6 = 90
            goto L_0x0129
        L_0x01d4:
            r6 = 84
            goto L_0x0129
        L_0x01d8:
            int r0 = setMax     // Catch:{ all -> 0x02b7 }
            r1.getMin = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x0194
        L_0x01dd:
            r3 = 1
            r1.getMin = r3     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            getMin = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x01ee:
            r1.setMax(r13)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 != 0) goto L_0x02b4
            r0 = 62
            r6 = 62
            goto L_0x0129
        L_0x01fb:
            r6 = 88
            goto L_0x0129
        L_0x01ff:
            r6 = 118(0x76, float:1.65E-43)
            goto L_0x0129
        L_0x0203:
            r0 = 33
            r1.setMax(r0)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 != 0) goto L_0x02b4
            r0 = 82
            r6 = 82
            goto L_0x0129
        L_0x0212:
            r6 = 86
            goto L_0x0129
        L_0x0216:
            r6 = 1
            goto L_0x0129
        L_0x0219:
            r6 = 16
            goto L_0x0129
        L_0x021d:
            return
        L_0x021e:
            r6 = 103(0x67, float:1.44E-43)
            goto L_0x0129
        L_0x0222:
            r3 = 1
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x02b7 }
            throw r0     // Catch:{ all -> 0x02b7 }
        L_0x022b:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x02b7 }
            java.lang.String r0 = r0.sessionId     // Catch:{ all -> 0x02b7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x0152
        L_0x023e:
            r1.getMin = r12     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo r0 = (com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo) r0     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r3 = r1.isInside     // Catch:{ all -> 0x02b7 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ all -> 0x02b7 }
            r0.sessionID = r3     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x0254:
            com.alipay.iap.android.common.product.delegate.UserInfoManager r0 = com.alipay.iap.android.common.product.delegate.UserInfoManager.instance()     // Catch:{ all -> 0x02b7 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x02b7 }
            goto L_0x0152
        L_0x025c:
            r1.getMin = r12     // Catch:{ all -> 0x02b7 }
            r1.setMax(r15)     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02b7 }
            com.alipay.iap.android.common.product.delegate.UserInfoManager r0 = (com.alipay.iap.android.common.product.delegate.UserInfoManager) r0     // Catch:{ all -> 0x02b7 }
            r1.setMax(r3)     // Catch:{ all -> 0x02b7 }
            java.lang.Object r3 = r1.isInside     // Catch:{ all -> 0x02b7 }
            com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo r3 = (com.alipay.iap.android.common.product.delegate.IAPLoginUserInfo) r3     // Catch:{ all -> 0x02b7 }
            r0.loginNotify(r3)     // Catch:{ all -> 0x02b7 }
            goto L_0x02b4
        L_0x0273:
            r6 = 63
            goto L_0x0129
        L_0x0277:
            r1.setMax(r6)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            r3 = 31
            if (r0 == r3) goto L_0x0288
            r3 = 97
            r0 = 92
            r6 = 92
            goto L_0x0129
        L_0x0288:
            r0 = 105(0x69, float:1.47E-43)
            r6 = 105(0x69, float:1.47E-43)
            goto L_0x0129
        L_0x028e:
            r1.setMax(r6)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 == 0) goto L_0x029f
            r3 = 1
            if (r0 == r3) goto L_0x0299
            goto L_0x029f
        L_0x0299:
            r0 = 121(0x79, float:1.7E-43)
            r6 = 121(0x79, float:1.7E-43)
            goto L_0x0129
        L_0x029f:
            r6 = 9
            goto L_0x0129
        L_0x02a3:
            r6 = 66
            goto L_0x0129
        L_0x02a7:
            r1.setMax(r13)     // Catch:{ all -> 0x02b7 }
            int r0 = r1.setMin     // Catch:{ all -> 0x02b7 }
            if (r0 != 0) goto L_0x02b4
            r0 = 125(0x7d, float:1.75E-43)
            r6 = 125(0x7d, float:1.75E-43)
            goto L_0x0129
        L_0x02b4:
            r6 = r5
            goto L_0x0129
        L_0x02b7:
            r0 = move-exception
            byte[] r3 = setMin
            byte r6 = r3[r7]
            byte r6 = (byte) r6
            r12 = r6 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            r13 = 54
            byte r3 = r3[r13]
            short r3 = (short) r3
            java.lang.String r3 = length(r6, r12, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            r6 = 112(0x70, float:1.57E-43)
            r12 = 120(0x78, float:1.68E-43)
            r13 = 91
            if (r3 == 0) goto L_0x02e4
            r3 = 6
            if (r5 < r3) goto L_0x02e4
            if (r5 > r9) goto L_0x02e4
        L_0x02de:
            r6 = 120(0x78, float:1.68E-43)
        L_0x02e0:
            r17 = 1
            goto L_0x042f
        L_0x02e4:
            byte[] r3 = setMin
            byte r14 = r3[r7]
            byte r14 = (byte) r14
            r15 = 1451(0x5ab, float:2.033E-42)
            short r15 = (short) r15
            r16 = 13952(0x3680, float:1.9551E-41)
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r14, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0305
            r3 = 7
            if (r5 < r3) goto L_0x0305
            if (r5 > r9) goto L_0x0305
            goto L_0x02de
        L_0x0305:
            if (r5 < r11) goto L_0x0310
            r3 = 16
            if (r5 > r3) goto L_0x0310
            r3 = 117(0x75, float:1.64E-43)
            r6 = 117(0x75, float:1.64E-43)
            goto L_0x02e0
        L_0x0310:
            byte[] r3 = setMin
            byte r9 = r3[r7]
            byte r9 = (byte) r9
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r18 = 55
            byte r3 = r3[r18]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r9, r14, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0333
            if (r5 < r8) goto L_0x0333
            if (r5 > r11) goto L_0x0333
        L_0x0330:
            r6 = 91
            goto L_0x02e0
        L_0x0333:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            r9 = 14230(0x3796, float:1.994E-41)
            short r9 = (short) r9
            byte r3 = r3[r16]
            r17 = 1
            int r3 = r3 + -1
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r9, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0359
            r3 = 37
            if (r5 < r3) goto L_0x0359
            r3 = 38
            if (r5 > r3) goto L_0x0359
            goto L_0x0330
        L_0x0359:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            byte r3 = r3[r16]
            r17 = 1
            int r3 = r3 + -1
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r9, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x037d
            r3 = 57
            if (r5 < r3) goto L_0x037d
            if (r5 > r10) goto L_0x037d
        L_0x0379:
            r6 = 91
            goto L_0x042f
        L_0x037d:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x039a
            if (r5 < r4) goto L_0x039a
            r3 = 67
            if (r5 > r3) goto L_0x039a
            goto L_0x0379
        L_0x039a:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            r9 = 9099(0x238b, float:1.275E-41)
            short r9 = (short) r9
            r15 = 4829(0x12dd, float:6.767E-42)
            byte r3 = r3[r15]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r9, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x03bf
            r3 = 77
            if (r5 < r3) goto L_0x03bf
            r3 = 78
            if (r5 > r3) goto L_0x03bf
            goto L_0x0379
        L_0x03bf:
            r3 = 99
            if (r5 < r3) goto L_0x03c8
            r3 = 103(0x67, float:1.44E-43)
            if (r5 > r3) goto L_0x03ca
            goto L_0x042f
        L_0x03c8:
            r3 = 103(0x67, float:1.44E-43)
        L_0x03ca:
            byte[] r8 = setMin
            byte r8 = r8[r7]
            byte r8 = (byte) r8
            r15 = 15410(0x3c32, float:2.1594E-41)
            short r15 = (short) r15
            r3 = r15 & 239(0xef, float:3.35E-43)
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x03ee
            r3 = 106(0x6a, float:1.49E-43)
            if (r5 < r3) goto L_0x03ee
            r3 = 107(0x6b, float:1.5E-43)
            if (r5 > r3) goto L_0x03ee
        L_0x03eb:
            r6 = 120(0x78, float:1.68E-43)
            goto L_0x042f
        L_0x03ee:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            r15 = 4829(0x12dd, float:6.767E-42)
            byte r3 = r3[r15]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r9, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x040e
            r3 = 107(0x6b, float:1.5E-43)
            if (r5 < r3) goto L_0x040e
            if (r5 > r6) goto L_0x040e
            goto L_0x03eb
        L_0x040e:
            byte[] r3 = setMin
            byte r8 = r3[r7]
            byte r8 = (byte) r8
            r9 = 55
            byte r3 = r3[r9]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r8, r14, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0438
            r3 = 108(0x6c, float:1.51E-43)
            if (r5 < r3) goto L_0x0438
            if (r5 > r6) goto L_0x0438
            goto L_0x0379
        L_0x042f:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x0129
        L_0x0438:
            throw r0
        L_0x0439:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0441
            throw r1
        L_0x0441:
            goto L_0x0443
        L_0x0442:
            throw r0
        L_0x0443:
            goto L_0x0442
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$15(o.setEventName):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x0164, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:76:0x021b, code lost:
        r0 = r8;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ java.lang.Boolean lambda$thenRegister$16(o.setEventName r20) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r20
            r1.<init>(r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 9796(0x2644, float:1.3727E-41)
            short r2 = (short) r2
            r3 = 139(0x8b, float:1.95E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x02fa }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x02fa }
            byte[] r2 = setMin     // Catch:{ all -> 0x02fa }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x02fa }
            byte r2 = (byte) r2     // Catch:{ all -> 0x02fa }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x02fa }
            byte[] r9 = setMin     // Catch:{ all -> 0x02fa }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x02fa }
            short r9 = (short) r9     // Catch:{ all -> 0x02fa }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x02fa }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x02fa }
            byte[] r9 = setMin     // Catch:{ all -> 0x02fa }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x02fa }
            byte r9 = (byte) r9     // Catch:{ all -> 0x02fa }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x02fa }
            byte[] r12 = setMin     // Catch:{ all -> 0x02fa }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x02fa }
            short r12 = (short) r12     // Catch:{ all -> 0x02fa }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x02fa }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x02fa }
            byte[] r12 = setMin     // Catch:{ all -> 0x02fa }
            byte r12 = r12[r7]     // Catch:{ all -> 0x02fa }
            byte r12 = (byte) r12     // Catch:{ all -> 0x02fa }
            byte[] r13 = setMin     // Catch:{ all -> 0x02fa }
            byte r13 = r13[r10]     // Catch:{ all -> 0x02fa }
            short r13 = (short) r13     // Catch:{ all -> 0x02fa }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x02fa }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x02fa }
            r11[r6] = r12     // Catch:{ all -> 0x02fa }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x02fa }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x02fa }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02fa }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0081:
            int r9 = r0.length
            r11 = 4832(0x12e0, float:6.771E-42)
            r12 = 0
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r13 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r13[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r11]     // Catch:{ all -> 0x011c }
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r14, r15)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r5]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            r5 = r15 | 1470(0x5be, float:2.06E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x011c }
            short r11 = (short) r11     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r15, r5, r11)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r11[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r11)     // Catch:{ all -> 0x011c }
            java.lang.Object r3 = r3.invoke(r12, r13)     // Catch:{ all -> 0x011c }
            byte[] r5 = setMin     // Catch:{ all -> 0x0113 }
            byte r5 = r5[r7]     // Catch:{ all -> 0x0113 }
            byte r5 = (byte) r5     // Catch:{ all -> 0x0113 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            r11 = 4832(0x12e0, float:6.771E-42)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0113 }
            short r9 = (short) r9     // Catch:{ all -> 0x0113 }
            java.lang.String r5 = length(r5, r14, r9)     // Catch:{ all -> 0x0113 }
            java.lang.Class r5 = java.lang.Class.forName(r5)     // Catch:{ all -> 0x0113 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            r11 = 102(0x66, float:1.43E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            r11 = 1464(0x5b8, float:2.052E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r11, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r5 = r5.getMethod(r9, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r5.invoke(r3, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0081
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 39
            r4 = 28
            r5 = 9
            r0 = 0
        L_0x012c:
            int r8 = r0 + 1
            r9 = 10
            r10 = 34
            r0 = r2[r0]     // Catch:{ all -> 0x021e }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x021e }
            r11 = 19
            r13 = 18
            switch(r0) {
                case -14: goto L_0x0217;
                case -13: goto L_0x0202;
                case -12: goto L_0x01f9;
                case -11: goto L_0x01f5;
                case -10: goto L_0x01f2;
                case -9: goto L_0x01e5;
                case -8: goto L_0x01d6;
                case -7: goto L_0x01d1;
                case -6: goto L_0x01ce;
                case -5: goto L_0x0168;
                case -4: goto L_0x0151;
                case -3: goto L_0x0148;
                case -2: goto L_0x0145;
                case -1: goto L_0x0142;
                default: goto L_0x013f;
            }
        L_0x013f:
            r11 = 1
            goto L_0x021b
        L_0x0142:
            r0 = 41
            goto L_0x012c
        L_0x0145:
            r0 = 39
            goto L_0x012c
        L_0x0148:
            r11 = 1
            r1.setMax(r11)     // Catch:{ all -> 0x0215 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x021e }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x021e }
            return r0
        L_0x0151:
            r11 = 1
            r1.getMin = r11     // Catch:{ all -> 0x0215 }
            r1.setMax(r13)     // Catch:{ all -> 0x021e }
            r0 = 23
            r1.setMax(r0)     // Catch:{ all -> 0x021e }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x021e }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x021e }
            boolean r0 = r0.success     // Catch:{ all -> 0x021e }
            r1.getMin = r0     // Catch:{ all -> 0x021e }
        L_0x0164:
            r1.setMax(r9)     // Catch:{ all -> 0x021e }
            goto L_0x013f
        L_0x0168:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x021e }
            r1.setMax(r13)     // Catch:{ all -> 0x021e }
            r1.setMax(r11)     // Catch:{ all -> 0x021e }
            int r0 = r1.setMin     // Catch:{ all -> 0x021e }
            if (r0 == 0) goto L_0x0177
            r0 = 1
            goto L_0x0178
        L_0x0177:
            r0 = 0
        L_0x0178:
            r11 = 1
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ all -> 0x01c5 }
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)     // Catch:{ all -> 0x01c5 }
            r13[r6] = r0     // Catch:{ all -> 0x01c5 }
            byte[] r0 = setMin     // Catch:{ all -> 0x01c5 }
            byte r0 = r0[r7]     // Catch:{ all -> 0x01c5 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x01c5 }
            r11 = 3032(0xbd8, float:4.249E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x01c5 }
            byte[] r14 = setMin     // Catch:{ all -> 0x01c5 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x01c5 }
            short r14 = (short) r14     // Catch:{ all -> 0x01c5 }
            java.lang.String r0 = length(r0, r11, r14)     // Catch:{ all -> 0x01c5 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x01c5 }
            byte[] r11 = setMin     // Catch:{ all -> 0x01c5 }
            r14 = 49
            byte r11 = r11[r14]     // Catch:{ all -> 0x01c5 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x01c5 }
            r14 = r11 | 1470(0x5be, float:2.06E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x01c5 }
            byte[] r16 = setMin     // Catch:{ all -> 0x01c5 }
            r18 = 52
            byte r15 = r16[r18]     // Catch:{ all -> 0x01c5 }
            short r15 = (short) r15     // Catch:{ all -> 0x01c5 }
            java.lang.String r11 = length(r11, r14, r15)     // Catch:{ all -> 0x01c5 }
            r14 = 1
            java.lang.Class[] r15 = new java.lang.Class[r14]     // Catch:{ all -> 0x01c5 }
            java.lang.Class r14 = java.lang.Boolean.TYPE     // Catch:{ all -> 0x01c5 }
            r15[r6] = r14     // Catch:{ all -> 0x01c5 }
            java.lang.reflect.Method r0 = r0.getMethod(r11, r15)     // Catch:{ all -> 0x01c5 }
            java.lang.Object r0 = r0.invoke(r12, r13)     // Catch:{ all -> 0x01c5 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x021e }
            r0 = 24
            r1.setMax(r0)     // Catch:{ all -> 0x021e }
            goto L_0x013f
        L_0x01c5:
            r0 = move-exception
            java.lang.Throwable r11 = r0.getCause()     // Catch:{ all -> 0x021e }
            if (r11 == 0) goto L_0x01cd
            throw r11     // Catch:{ all -> 0x021e }
        L_0x01cd:
            throw r0     // Catch:{ all -> 0x021e }
        L_0x01ce:
            r0 = 3
            goto L_0x012c
        L_0x01d1:
            int r0 = setMax     // Catch:{ all -> 0x021e }
            r1.getMin = r0     // Catch:{ all -> 0x021e }
            goto L_0x0164
        L_0x01d6:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x021e }
            r1.setMax(r13)     // Catch:{ all -> 0x021e }
            r1.setMax(r11)     // Catch:{ all -> 0x021e }
            int r0 = r1.setMin     // Catch:{ all -> 0x021e }
            getMin = r0     // Catch:{ all -> 0x021e }
            goto L_0x013f
        L_0x01e5:
            r0 = 22
            r1.setMax(r0)     // Catch:{ all -> 0x021e }
            int r0 = r1.setMin     // Catch:{ all -> 0x021e }
            if (r0 != 0) goto L_0x021b
            r0 = 27
            goto L_0x012c
        L_0x01f2:
            r0 = 1
            goto L_0x012c
        L_0x01f5:
            r0 = 28
            goto L_0x012c
        L_0x01f9:
            r11 = 1
            r1.setMax(r11)     // Catch:{ all -> 0x0215 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0215 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0215 }
            throw r0     // Catch:{ all -> 0x0215 }
        L_0x0202:
            r11 = 1
            r1.setMax(r10)     // Catch:{ all -> 0x0215 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0215 }
            r8 = 45
            if (r0 == r8) goto L_0x0212
            r8 = 74
            r0 = 32
            goto L_0x012c
        L_0x0212:
            r0 = 5
            goto L_0x012c
        L_0x0215:
            r0 = move-exception
            goto L_0x0220
        L_0x0217:
            r0 = 9
            goto L_0x012c
        L_0x021b:
            r0 = r8
            goto L_0x012c
        L_0x021e:
            r0 = move-exception
            r11 = 1
        L_0x0220:
            byte[] r13 = setMin
            byte r14 = r13[r7]
            byte r14 = (byte) r14
            r15 = r14 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r16 = 1197(0x4ad, float:1.677E-42)
            byte r13 = r13[r16]
            short r13 = (short) r13
            java.lang.String r13 = length(r14, r15, r13)
            java.lang.Class r13 = java.lang.Class.forName(r13)
            boolean r13 = r13.isInstance(r0)
            r14 = 7
            r15 = 31
            r6 = 35
            r18 = 30
            if (r13 == 0) goto L_0x024b
            r13 = 6
            if (r8 < r13) goto L_0x024b
            if (r8 > r14) goto L_0x024b
        L_0x0247:
            r15 = 30
            goto L_0x02ef
        L_0x024b:
            byte[] r13 = setMin
            byte r11 = r13[r7]
            byte r11 = (byte) r11
            r12 = r11 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            r19 = 54
            byte r13 = r13[r19]
            short r13 = (short) r13
            java.lang.String r11 = length(r11, r12, r13)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x026b
            if (r8 < r14) goto L_0x026b
            if (r8 > r5) goto L_0x026b
            goto L_0x0247
        L_0x026b:
            byte[] r11 = setMin
            byte r11 = r11[r7]
            byte r11 = (byte) r11
            r12 = 15410(0x3c32, float:2.1594E-41)
            short r12 = (short) r12
            r13 = r12 & 239(0xef, float:3.35E-43)
            short r13 = (short) r13
            java.lang.String r11 = length(r11, r12, r13)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0289
            if (r8 < r5) goto L_0x0289
            if (r8 > r9) goto L_0x0289
            goto L_0x0247
        L_0x0289:
            byte[] r9 = setMin
            byte r11 = r9[r7]
            byte r11 = (byte) r11
            r12 = r11 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            byte r9 = r9[r16]
            short r9 = (short) r9
            java.lang.String r9 = length(r11, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02a9
            r9 = 23
            if (r8 < r9) goto L_0x02a9
            if (r8 > r4) goto L_0x02a9
            goto L_0x02ef
        L_0x02a9:
            if (r8 < r6) goto L_0x02b2
            if (r8 > r3) goto L_0x02b2
            r8 = 40
            r15 = 40
            goto L_0x02ef
        L_0x02b2:
            byte[] r9 = setMin
            byte r11 = r9[r7]
            byte r11 = (byte) r11
            r12 = r11 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            byte r9 = r9[r19]
            short r9 = (short) r9
            java.lang.String r9 = length(r11, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02d2
            r9 = 33
            if (r8 < r9) goto L_0x02d2
            if (r8 > r10) goto L_0x02d2
            goto L_0x02ef
        L_0x02d2:
            byte[] r9 = setMin
            byte r11 = r9[r7]
            byte r11 = (byte) r11
            r12 = r11 | 5841(0x16d1, float:8.185E-42)
            short r12 = (short) r12
            byte r9 = r9[r16]
            short r9 = (short) r9
            java.lang.String r9 = length(r11, r12, r9)
            java.lang.Class r9 = java.lang.Class.forName(r9)
            boolean r9 = r9.isInstance(r0)
            if (r9 == 0) goto L_0x02f9
            if (r8 < r10) goto L_0x02f9
            if (r8 > r6) goto L_0x02f9
        L_0x02ef:
            r1.IsOverlapping = r0
            r1.setMax(r6)
            r0 = r15
            r6 = 0
            r12 = 0
            goto L_0x012c
        L_0x02f9:
            throw r0
        L_0x02fa:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0302
            throw r1
        L_0x0302:
            goto L_0x0304
        L_0x0303:
            throw r0
        L_0x0304:
            goto L_0x0303
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$16(o.setEventName):java.lang.Boolean");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x04ac, code lost:
        if (r11 <= 112) goto L_0x03ba;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$17(java.lang.String r23, java.lang.String r24, java.lang.String r25, java.lang.String r26, java.lang.String r27, java.lang.String r28, o.GriverPerformanceStages r29) throws java.lang.Exception {
        /*
            r22 = this;
            o.getGroupId r10 = new o.getGroupId
            r1 = r10
            r2 = r22
            r3 = r23
            r4 = r24
            r5 = r25
            r6 = r26
            r7 = r27
            r8 = r28
            r9 = r29
            r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9)
            int r0 = getMax
            r1 = r0 & 493(0x1ed, float:6.91E-43)
            byte r1 = (byte) r1
            r2 = 5825(0x16c1, float:8.163E-42)
            short r2 = (short) r2
            r0 = r0 | 384(0x180, float:5.38E-43)
            short r0 = (short) r0
            java.lang.String r0 = length(r1, r2, r0)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x04e1 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x04e1 }
            byte[] r1 = setMin     // Catch:{ all -> 0x04e1 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x04e1 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x04e1 }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x04e1 }
            byte[] r8 = setMin     // Catch:{ all -> 0x04e1 }
            r9 = 58
            byte r8 = r8[r9]     // Catch:{ all -> 0x04e1 }
            short r8 = (short) r8     // Catch:{ all -> 0x04e1 }
            java.lang.String r1 = length(r1, r7, r8)     // Catch:{ all -> 0x04e1 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x04e1 }
            byte[] r8 = setMin     // Catch:{ all -> 0x04e1 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r8 = r8[r11]     // Catch:{ all -> 0x04e1 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x04e1 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x04e1 }
            byte[] r12 = setMin     // Catch:{ all -> 0x04e1 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x04e1 }
            short r12 = (short) r12     // Catch:{ all -> 0x04e1 }
            java.lang.String r8 = length(r8, r11, r12)     // Catch:{ all -> 0x04e1 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x04e1 }
            byte[] r12 = setMin     // Catch:{ all -> 0x04e1 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x04e1 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x04e1 }
            byte[] r13 = setMin     // Catch:{ all -> 0x04e1 }
            byte r13 = r13[r9]     // Catch:{ all -> 0x04e1 }
            short r13 = (short) r13     // Catch:{ all -> 0x04e1 }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x04e1 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x04e1 }
            r11[r5] = r12     // Catch:{ all -> 0x04e1 }
            java.lang.reflect.Method r1 = r1.getMethod(r8, r11)     // Catch:{ all -> 0x04e1 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x04e1 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x04e1 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x0090:
            int r8 = r0.length
            if (r3 >= r8) goto L_0x0133
            r8 = r0[r3]
            java.lang.Object[] r11 = new java.lang.Object[r2]     // Catch:{ all -> 0x012a }
            r11[r5] = r8     // Catch:{ all -> 0x012a }
            byte[] r8 = setMin     // Catch:{ all -> 0x012a }
            byte r8 = r8[r6]     // Catch:{ all -> 0x012a }
            byte r8 = (byte) r8     // Catch:{ all -> 0x012a }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x012a }
            byte[] r13 = setMin     // Catch:{ all -> 0x012a }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x012a }
            short r13 = (short) r13     // Catch:{ all -> 0x012a }
            java.lang.String r8 = length(r8, r12, r13)     // Catch:{ all -> 0x012a }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x012a }
            byte[] r13 = setMin     // Catch:{ all -> 0x012a }
            byte r13 = r13[r4]     // Catch:{ all -> 0x012a }
            byte r13 = (byte) r13     // Catch:{ all -> 0x012a }
            r14 = r13 | 1470(0x5be, float:2.06E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x012a }
            byte[] r15 = setMin     // Catch:{ all -> 0x012a }
            r16 = 52
            byte r15 = r15[r16]     // Catch:{ all -> 0x012a }
            short r15 = (short) r15     // Catch:{ all -> 0x012a }
            java.lang.String r13 = length(r13, r14, r15)     // Catch:{ all -> 0x012a }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x012a }
            byte[] r15 = setMin     // Catch:{ all -> 0x012a }
            byte r15 = r15[r6]     // Catch:{ all -> 0x012a }
            byte r15 = (byte) r15     // Catch:{ all -> 0x012a }
            byte[] r16 = setMin     // Catch:{ all -> 0x012a }
            byte r4 = r16[r9]     // Catch:{ all -> 0x012a }
            short r4 = (short) r4     // Catch:{ all -> 0x012a }
            java.lang.String r4 = length(r15, r7, r4)     // Catch:{ all -> 0x012a }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x012a }
            r14[r5] = r4     // Catch:{ all -> 0x012a }
            java.lang.reflect.Method r4 = r8.getMethod(r13, r14)     // Catch:{ all -> 0x012a }
            r8 = 0
            java.lang.Object r4 = r4.invoke(r8, r11)     // Catch:{ all -> 0x012a }
            byte[] r11 = setMin     // Catch:{ all -> 0x0121 }
            byte r11 = r11[r6]     // Catch:{ all -> 0x0121 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0121 }
            short r13 = (short) r13     // Catch:{ all -> 0x0121 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0121 }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x0121 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0121 }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0121 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0121 }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x0121 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0121 }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x0121 }
            short r14 = (short) r14     // Catch:{ all -> 0x0121 }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x0121 }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r8)     // Catch:{ all -> 0x0121 }
            java.lang.Object r4 = r11.invoke(r4, r8)     // Catch:{ all -> 0x0121 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0121 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0121 }
            r1[r3] = r4
            int r3 = r3 + 1
            r4 = 49
            goto L_0x0090
        L_0x0121:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0129
            throw r1
        L_0x0129:
            throw r0
        L_0x012a:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0132
            throw r1
        L_0x0132:
            throw r0
        L_0x0133:
            r3 = 53
            r4 = 17
            r7 = 82
            r9 = 2
        L_0x013a:
            int r11 = r5 + 1
            r0 = r1[r5]     // Catch:{ all -> 0x036a }
            int r0 = r10.setMax(r0)     // Catch:{ all -> 0x036a }
            r5 = 22
            r12 = 18
            r13 = 24
            r14 = 23
            switch(r0) {
                case -38: goto L_0x0363;
                case -37: goto L_0x0325;
                case -36: goto L_0x0321;
                case -35: goto L_0x02d3;
                case -34: goto L_0x02cf;
                case -33: goto L_0x02cb;
                case -32: goto L_0x02b6;
                case -31: goto L_0x02b2;
                case -30: goto L_0x02ae;
                case -29: goto L_0x02a1;
                case -28: goto L_0x029e;
                case -27: goto L_0x0298;
                case -26: goto L_0x0292;
                case -25: goto L_0x0277;
                case -24: goto L_0x0262;
                case -23: goto L_0x025e;
                case -22: goto L_0x0249;
                case -21: goto L_0x0234;
                case -20: goto L_0x022c;
                case -19: goto L_0x0228;
                case -18: goto L_0x0213;
                case -17: goto L_0x01ff;
                case -16: goto L_0x01e5;
                case -15: goto L_0x01dd;
                case -14: goto L_0x01da;
                case -13: goto L_0x01cd;
                case -12: goto L_0x01c9;
                case -11: goto L_0x01af;
                case -10: goto L_0x01ac;
                case -9: goto L_0x0199;
                case -8: goto L_0x0182;
                case -7: goto L_0x017f;
                case -6: goto L_0x017c;
                case -5: goto L_0x0170;
                case -4: goto L_0x0160;
                case -3: goto L_0x0155;
                case -2: goto L_0x0152;
                case -1: goto L_0x014f;
                default: goto L_0x014d;
            }     // Catch:{ all -> 0x036a }
        L_0x014d:
            goto L_0x0367
        L_0x014f:
            r5 = 112(0x70, float:1.57E-43)
            goto L_0x013a
        L_0x0152:
            r5 = 51
            goto L_0x013a
        L_0x0155:
            int r0 = setMax     // Catch:{ all -> 0x036a }
            r10.getMin = r0     // Catch:{ all -> 0x036a }
            r0 = 10
            r10.setMax(r0)     // Catch:{ all -> 0x036a }
            goto L_0x0367
        L_0x0160:
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r0 = 19
            r10.setMax(r0)     // Catch:{ all -> 0x036a }
            int r0 = r10.setMin     // Catch:{ all -> 0x036a }
            getMin = r0     // Catch:{ all -> 0x036a }
            goto L_0x0367
        L_0x0170:
            r10.setMax(r5)     // Catch:{ all -> 0x036a }
            int r0 = r10.setMin     // Catch:{ all -> 0x036a }
            if (r0 != 0) goto L_0x0367
            r0 = 16
            r5 = 16
            goto L_0x013a
        L_0x017c:
            r5 = 80
            goto L_0x013a
        L_0x017f:
            r5 = 27
            goto L_0x013a
        L_0x0182:
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x036a }
            o.access$2400 r0 = r0.createSecurityData()     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
        L_0x0194:
            r10.setMax(r13)     // Catch:{ all -> 0x036a }
            goto L_0x0367
        L_0x0199:
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.access$2400 r0 = (o.access$2400) r0     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = r0.loginKey()     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x01ac:
            r5 = 115(0x73, float:1.61E-43)
            goto L_0x013a
        L_0x01af:
            r10.getMin = r9     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.RedDotDrawable r5 = (o.RedDotDrawable) r5     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = r0.map(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x01c9:
            r5 = 29
            goto L_0x013a
        L_0x01cd:
            r10.setMax(r5)     // Catch:{ all -> 0x036a }
            int r0 = r10.setMin     // Catch:{ all -> 0x036a }
            if (r0 != 0) goto L_0x0367
            r0 = 50
            r5 = 50
            goto L_0x013a
        L_0x01da:
            r5 = 1
            goto L_0x013a
        L_0x01dd:
            r10.setMax(r2)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x036a }
            return r0
        L_0x01e5:
            r10.getMin = r9     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.RedDotDrawable r5 = (o.RedDotDrawable) r5     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = r0.flatMap(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x01ff:
            o.setApiName r0 = new o.setApiName     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0213:
            o.getThis r0 = new o.getThis     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0228:
            r5 = 71
            goto L_0x013a
        L_0x022c:
            r10.setMax(r2)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x036a }
            throw r0     // Catch:{ all -> 0x036a }
        L_0x0234:
            o.setErrCode r0 = new o.setErrCode     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0249:
            o.AppLog r0 = new o.AppLog     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x025e:
            r5 = 53
            goto L_0x013a
        L_0x0262:
            o.setDesc r0 = new o.setDesc     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0277:
            r10.getMin = r9     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.RedDotManager r5 = (o.RedDotManager) r5     // Catch:{ all -> 0x036a }
            o.TitleBarRightButtonView$1 r0 = r0.doOnNext(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0292:
            o.AppLogConfigProxy r0 = o.AppLogConfigProxy.getMax     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0298:
            o.getIgnoreAPIList r0 = o.getIgnoreAPIList.setMin     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x029e:
            r5 = 2
            goto L_0x013a
        L_0x02a1:
            r10.setMax(r5)     // Catch:{ all -> 0x036a }
            int r0 = r10.setMin     // Catch:{ all -> 0x036a }
            if (r0 != 0) goto L_0x0367
            r0 = 103(0x67, float:1.44E-43)
            r5 = 103(0x67, float:1.44E-43)
            goto L_0x013a
        L_0x02ae:
            r5 = 123(0x7b, float:1.72E-43)
            goto L_0x013a
        L_0x02b2:
            r5 = 17
            goto L_0x013a
        L_0x02b6:
            o.unZip r0 = new o.unZip     // Catch:{ all -> 0x036a }
            r10.getMin = r2     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r0.<init>(r5)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x02cb:
            r5 = 124(0x7c, float:1.74E-43)
            goto L_0x013a
        L_0x02cf:
            r5 = 82
            goto L_0x013a
        L_0x02d3:
            o.ApiLog$1 r0 = new o.ApiLog$1     // Catch:{ all -> 0x036a }
            r5 = 7
            r10.getMin = r5     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r15 = r5
            o.lock r15 = (o.lock) r15     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r16 = r5
            java.lang.String r16 = (java.lang.String) r16     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r17 = r5
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r18 = r5
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r19 = r5
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r20 = r5
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            r21 = r5
            o.GriverPerformanceStages r21 = (o.GriverPerformanceStages) r21     // Catch:{ all -> 0x036a }
            r14 = r0
            r14.<init>(r15, r16, r17, r18, r19, r20, r21)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0321:
            r5 = 104(0x68, float:1.46E-43)
            goto L_0x013a
        L_0x0325:
            o.AppLog$1 r0 = new o.AppLog$1     // Catch:{ all -> 0x036a }
            r5 = 5
            r10.getMin = r5     // Catch:{ all -> 0x036a }
            r10.setMax(r12)     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x036a }
            o.lock r5 = (o.lock) r5     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r12 = r10.isInside     // Catch:{ all -> 0x036a }
            java.lang.String r12 = (java.lang.String) r12     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r15 = r10.isInside     // Catch:{ all -> 0x036a }
            java.lang.String r15 = (java.lang.String) r15     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r8 = r10.isInside     // Catch:{ all -> 0x036a }
            java.lang.String r8 = (java.lang.String) r8     // Catch:{ all -> 0x036a }
            r10.setMax(r14)     // Catch:{ all -> 0x036a }
            java.lang.Object r14 = r10.isInside     // Catch:{ all -> 0x036a }
            java.lang.String r14 = (java.lang.String) r14     // Catch:{ all -> 0x036a }
            r23 = r0
            r24 = r5
            r25 = r12
            r26 = r15
            r27 = r8
            r28 = r14
            r23.<init>(r24, r25, r26, r27, r28)     // Catch:{ all -> 0x036a }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x036a }
            goto L_0x0194
        L_0x0363:
            r5 = 62
            goto L_0x013a
        L_0x0367:
            r5 = r11
            goto L_0x013a
        L_0x036a:
            r0 = move-exception
            byte[] r5 = setMin
            byte r8 = r5[r6]
            byte r8 = (byte) r8
            r12 = 14230(0x3796, float:1.994E-41)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r5 = r5[r13]
            int r5 = r5 - r2
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r12, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            r8 = 61
            r12 = 81
            if (r5 == 0) goto L_0x0395
            if (r11 < r9) goto L_0x0395
            if (r11 > r4) goto L_0x0395
        L_0x038f:
            r2 = 104(0x68, float:1.46E-43)
            r5 = 61
            goto L_0x04d6
        L_0x0395:
            byte[] r5 = setMin
            byte r14 = r5[r6]
            byte r14 = (byte) r14
            r15 = r14 | 2097(0x831, float:2.939E-42)
            short r15 = (short) r15
            r16 = 9575(0x2567, float:1.3417E-41)
            byte r5 = r5[r16]
            short r5 = (short) r5
            java.lang.String r5 = length(r14, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            r14 = 13
            if (r5 == 0) goto L_0x03be
            r5 = 12
            if (r11 < r5) goto L_0x03be
            if (r11 > r14) goto L_0x03be
        L_0x03b8:
            r2 = 104(0x68, float:1.46E-43)
        L_0x03ba:
            r5 = 81
            goto L_0x04d6
        L_0x03be:
            byte[] r5 = setMin
            byte r15 = r5[r6]
            byte r15 = (byte) r15
            r2 = r15 | 4944(0x1350, float:6.928E-42)
            short r2 = (short) r2
            byte r5 = r5[r14]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r2 = length(r15, r2, r5)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x03e1
            r2 = 19
            if (r11 < r2) goto L_0x03e1
            r2 = 20
            if (r11 > r2) goto L_0x03e1
            goto L_0x038f
        L_0x03e1:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r15 = r5 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r17 = 1197(0x4ad, float:1.677E-42)
            byte r2 = r2[r17]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r15, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0405
            r2 = 29
            if (r11 < r2) goto L_0x0405
            r2 = 30
            if (r11 > r2) goto L_0x0405
            goto L_0x038f
        L_0x0405:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r8 = r5 | 2097(0x831, float:2.939E-42)
            short r8 = (short) r8
            byte r2 = r2[r16]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r8, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0427
            r2 = 46
            if (r11 < r2) goto L_0x0427
            r2 = 47
            if (r11 > r2) goto L_0x0427
            goto L_0x03b8
        L_0x0427:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r8 = r5 | 2097(0x831, float:2.939E-42)
            short r8 = (short) r8
            byte r2 = r2[r16]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r8, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0448
            if (r11 < r3) goto L_0x0448
            r2 = 54
            if (r11 > r2) goto L_0x0448
            goto L_0x03b8
        L_0x0448:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r8 = 1451(0x5ab, float:2.033E-42)
            short r8 = (short) r8
            byte r2 = r2[r13]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r8, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0469
            if (r11 < r7) goto L_0x0469
            r2 = 104(0x68, float:1.46E-43)
            if (r11 > r2) goto L_0x0469
        L_0x0467:
            goto L_0x03ba
        L_0x0469:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r8 = r5 | 4944(0x1350, float:6.928E-42)
            short r8 = (short) r8
            byte r2 = r2[r14]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r8, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x048c
            r2 = 99
            if (r11 < r2) goto L_0x048c
            r2 = 104(0x68, float:1.46E-43)
            if (r11 > r2) goto L_0x048c
            goto L_0x0467
        L_0x048c:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r8 = r5 | 4944(0x1350, float:6.928E-42)
            short r8 = (short) r8
            byte r2 = r2[r14]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r8, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04af
            r2 = 104(0x68, float:1.46E-43)
            if (r11 < r2) goto L_0x04b1
            r5 = 112(0x70, float:1.57E-43)
            if (r11 > r5) goto L_0x04b1
            goto L_0x0467
        L_0x04af:
            r2 = 104(0x68, float:1.46E-43)
        L_0x04b1:
            byte[] r5 = setMin
            byte r8 = r5[r6]
            byte r8 = (byte) r8
            r13 = 9099(0x238b, float:1.275E-41)
            short r13 = (short) r13
            r14 = 4829(0x12dd, float:6.767E-42)
            byte r5 = r5[r14]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r13, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x04e0
            r5 = 107(0x6b, float:1.5E-43)
            if (r11 < r5) goto L_0x04e0
            r5 = 108(0x6c, float:1.51E-43)
            if (r11 > r5) goto L_0x04e0
            goto L_0x0467
        L_0x04d6:
            r10.IsOverlapping = r0
            r0 = 35
            r10.setMax(r0)
            r2 = 1
            goto L_0x013a
        L_0x04e0:
            throw r0
        L_0x04e1:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x04e9
            throw r1
        L_0x04e9:
            goto L_0x04eb
        L_0x04ea:
            throw r0
        L_0x04eb:
            goto L_0x04ea
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$17(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, o.GriverPerformanceStages):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x017e, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x01f9, code lost:
        r1.setMax(24);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$5(java.lang.String r26, java.lang.String r27, java.lang.String r28, java.lang.String r29, java.lang.String r30, o.GriverPerformanceStages r31, java.lang.String r32) throws java.lang.Exception {
        /*
            r25 = this;
            o.getGroupId r10 = new o.getGroupId
            r1 = r10
            r2 = r25
            r3 = r26
            r4 = r27
            r5 = r28
            r6 = r29
            r7 = r30
            r8 = r31
            r9 = r32
            r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 10395(0x289b, float:1.4566E-41)
            short r1 = (short) r1
            r2 = 596(0x254, float:8.35E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x04f2 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x04f2 }
            byte[] r1 = setMin     // Catch:{ all -> 0x04f2 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x04f2 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x04f2 }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x04f2 }
            byte[] r8 = setMin     // Catch:{ all -> 0x04f2 }
            r9 = 58
            byte r8 = r8[r9]     // Catch:{ all -> 0x04f2 }
            short r8 = (short) r8     // Catch:{ all -> 0x04f2 }
            java.lang.String r1 = length(r1, r7, r8)     // Catch:{ all -> 0x04f2 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x04f2 }
            byte[] r8 = setMin     // Catch:{ all -> 0x04f2 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r8 = r8[r11]     // Catch:{ all -> 0x04f2 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x04f2 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x04f2 }
            byte[] r12 = setMin     // Catch:{ all -> 0x04f2 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x04f2 }
            short r12 = (short) r12     // Catch:{ all -> 0x04f2 }
            java.lang.String r8 = length(r8, r11, r12)     // Catch:{ all -> 0x04f2 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x04f2 }
            byte[] r12 = setMin     // Catch:{ all -> 0x04f2 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x04f2 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x04f2 }
            byte[] r13 = setMin     // Catch:{ all -> 0x04f2 }
            byte r13 = r13[r9]     // Catch:{ all -> 0x04f2 }
            short r13 = (short) r13     // Catch:{ all -> 0x04f2 }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x04f2 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x04f2 }
            r11[r5] = r12     // Catch:{ all -> 0x04f2 }
            java.lang.reflect.Method r1 = r1.getMethod(r8, r11)     // Catch:{ all -> 0x04f2 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x04f2 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x04f2 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x0090:
            int r8 = r0.length
            r11 = 102(0x66, float:1.43E-43)
            if (r3 >= r8) goto L_0x0134
            r8 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x012b }
            r12[r5] = r8     // Catch:{ all -> 0x012b }
            byte[] r8 = setMin     // Catch:{ all -> 0x012b }
            byte r8 = r8[r6]     // Catch:{ all -> 0x012b }
            byte r8 = (byte) r8     // Catch:{ all -> 0x012b }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x012b }
            byte[] r14 = setMin     // Catch:{ all -> 0x012b }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x012b }
            short r14 = (short) r14     // Catch:{ all -> 0x012b }
            java.lang.String r8 = length(r8, r13, r14)     // Catch:{ all -> 0x012b }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x012b }
            byte[] r14 = setMin     // Catch:{ all -> 0x012b }
            byte r14 = r14[r4]     // Catch:{ all -> 0x012b }
            byte r14 = (byte) r14     // Catch:{ all -> 0x012b }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x012b }
            byte[] r16 = setMin     // Catch:{ all -> 0x012b }
            r17 = 52
            byte r4 = r16[r17]     // Catch:{ all -> 0x012b }
            short r4 = (short) r4     // Catch:{ all -> 0x012b }
            java.lang.String r4 = length(r14, r15, r4)     // Catch:{ all -> 0x012b }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x012b }
            byte[] r15 = setMin     // Catch:{ all -> 0x012b }
            byte r15 = r15[r6]     // Catch:{ all -> 0x012b }
            byte r15 = (byte) r15     // Catch:{ all -> 0x012b }
            byte[] r16 = setMin     // Catch:{ all -> 0x012b }
            byte r2 = r16[r9]     // Catch:{ all -> 0x012b }
            short r2 = (short) r2     // Catch:{ all -> 0x012b }
            java.lang.String r2 = length(r15, r7, r2)     // Catch:{ all -> 0x012b }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x012b }
            r14[r5] = r2     // Catch:{ all -> 0x012b }
            java.lang.reflect.Method r2 = r8.getMethod(r4, r14)     // Catch:{ all -> 0x012b }
            r4 = 0
            java.lang.Object r2 = r2.invoke(r4, r12)     // Catch:{ all -> 0x012b }
            byte[] r8 = setMin     // Catch:{ all -> 0x0122 }
            byte r8 = r8[r6]     // Catch:{ all -> 0x0122 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0122 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0122 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0122 }
            short r12 = (short) r12     // Catch:{ all -> 0x0122 }
            java.lang.String r8 = length(r8, r13, r12)     // Catch:{ all -> 0x0122 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0122 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0122 }
            byte r11 = r12[r11]     // Catch:{ all -> 0x0122 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0122 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0122 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0122 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0122 }
            short r13 = (short) r13     // Catch:{ all -> 0x0122 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0122 }
            java.lang.reflect.Method r8 = r8.getMethod(r11, r4)     // Catch:{ all -> 0x0122 }
            java.lang.Object r2 = r8.invoke(r2, r4)     // Catch:{ all -> 0x0122 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x0122 }
            int r2 = r2.intValue()     // Catch:{ all -> 0x0122 }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            goto L_0x0090
        L_0x0122:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012a
            throw r1
        L_0x012a:
            throw r0
        L_0x012b:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0133
            throw r1
        L_0x0133:
            throw r0
        L_0x0134:
            r2 = 15
            r3 = 151(0x97, float:2.12E-43)
            r4 = 7
        L_0x0139:
            int r7 = r5 + 1
            r8 = 133(0x85, float:1.86E-43)
            r9 = 10
            r0 = r1[r5]     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMax(r0)     // Catch:{ all -> 0x0365 }
            r5 = 34
            r12 = 22
            r13 = 24
            r14 = 18
            r15 = 23
            switch(r0) {
                case -42: goto L_0x035e;
                case -41: goto L_0x0351;
                case -40: goto L_0x0339;
                case -39: goto L_0x0335;
                case -38: goto L_0x0331;
                case -37: goto L_0x032d;
                case -36: goto L_0x031e;
                case -35: goto L_0x030e;
                case -34: goto L_0x0308;
                case -33: goto L_0x0304;
                case -32: goto L_0x0301;
                case -31: goto L_0x02fd;
                case -30: goto L_0x029d;
                case -29: goto L_0x0299;
                case -28: goto L_0x0295;
                case -27: goto L_0x0288;
                case -26: goto L_0x0284;
                case -25: goto L_0x0271;
                case -24: goto L_0x026e;
                case -23: goto L_0x025a;
                case -22: goto L_0x0246;
                case -21: goto L_0x0232;
                case -20: goto L_0x0229;
                case -19: goto L_0x0225;
                case -18: goto L_0x0203;
                case -17: goto L_0x01fe;
                case -16: goto L_0x01e6;
                case -15: goto L_0x01e2;
                case -14: goto L_0x01de;
                case -13: goto L_0x01da;
                case -12: goto L_0x01d6;
                case -11: goto L_0x01c9;
                case -10: goto L_0x01b4;
                case -9: goto L_0x01b1;
                case -8: goto L_0x01ae;
                case -7: goto L_0x01a2;
                case -6: goto L_0x0191;
                case -5: goto L_0x018c;
                case -4: goto L_0x0183;
                case -3: goto L_0x016d;
                case -2: goto L_0x0157;
                case -1: goto L_0x0154;
                default: goto L_0x0152;
            }     // Catch:{ all -> 0x0365 }
        L_0x0152:
            goto L_0x0362
        L_0x0154:
            r5 = 135(0x87, float:1.89E-43)
            goto L_0x0139
        L_0x0157:
            r10.setMax(r5)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 == r9) goto L_0x0168
            r5 = 36
            if (r0 == r5) goto L_0x0163
            goto L_0x0168
        L_0x0163:
            r0 = 45
            r5 = 45
            goto L_0x0139
        L_0x0168:
            r0 = 141(0x8d, float:1.98E-43)
            r5 = 141(0x8d, float:1.98E-43)
            goto L_0x0139
        L_0x016d:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0365 }
            r10.getMin = r0     // Catch:{ all -> 0x0365 }
        L_0x017e:
            r10.setMax(r9)     // Catch:{ all -> 0x0365 }
            goto L_0x0362
        L_0x0183:
            r5 = 1
            r10.setMax(r5)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0365 }
            return r0
        L_0x018c:
            int r0 = setMax     // Catch:{ all -> 0x0365 }
            r10.getMin = r0     // Catch:{ all -> 0x0365 }
            goto L_0x017e
        L_0x0191:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r0 = 19
            r10.setMax(r0)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            getMin = r0     // Catch:{ all -> 0x0365 }
            goto L_0x0362
        L_0x01a2:
            r10.setMax(r12)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 != 0) goto L_0x0362
            r0 = 14
            r5 = 14
            goto L_0x0139
        L_0x01ae:
            r5 = 41
            goto L_0x0139
        L_0x01b1:
            r5 = 105(0x69, float:1.47E-43)
            goto L_0x0139
        L_0x01b4:
            r10.setMax(r5)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            r5 = 74
            if (r0 == r5) goto L_0x01c3
            r5 = 93
            r0 = 2
            r5 = 2
            goto L_0x0139
        L_0x01c3:
            r0 = 128(0x80, float:1.794E-43)
            r5 = 128(0x80, float:1.794E-43)
            goto L_0x0139
        L_0x01c9:
            r10.setMax(r12)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 != 0) goto L_0x0362
            r0 = 40
            r5 = 40
            goto L_0x0139
        L_0x01d6:
            r5 = 139(0x8b, float:1.95E-43)
            goto L_0x0139
        L_0x01da:
            r5 = 102(0x66, float:1.43E-43)
            goto L_0x0139
        L_0x01de:
            r5 = 138(0x8a, float:1.93E-43)
            goto L_0x0139
        L_0x01e2:
            r5 = 15
            goto L_0x0139
        L_0x01e6:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0365 }
            o.ConnectionLog$1 r0 = r0.createRegistrationData()     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
        L_0x01f9:
            r10.setMax(r13)     // Catch:{ all -> 0x0365 }
            goto L_0x0362
        L_0x01fe:
            java.lang.String r0 = "register"
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x0203:
            r0 = 3
            r10.getMin = r0     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r5 = r10.isInside     // Catch:{ all -> 0x0365 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r12 = r10.isInside     // Catch:{ all -> 0x0365 }
            java.lang.String r12 = (java.lang.String) r12     // Catch:{ all -> 0x0365 }
            java.lang.String r0 = r0.getPhoneNumber(r5, r12)     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x0225:
            r5 = 63
            goto L_0x0139
        L_0x0229:
            r5 = 1
            r10.setMax(r5)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0365 }
            throw r0     // Catch:{ all -> 0x0365 }
        L_0x0232:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x0365 }
            java.lang.String r0 = r0.getVerifyMethod()     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x0246:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.GriverPerformanceStages r0 = (o.GriverPerformanceStages) r0     // Catch:{ all -> 0x0365 }
            o.onUpdateResult r0 = r0.getIndoSubdivisions()     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x025a:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.onUpdateResult r0 = (o.onUpdateResult) r0     // Catch:{ all -> 0x0365 }
            java.lang.String r0 = r0.getCityName()     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x026e:
            r5 = 7
            goto L_0x0139
        L_0x0271:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0365 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x0284:
            r5 = 151(0x97, float:2.12E-43)
            goto L_0x0139
        L_0x0288:
            r10.setMax(r12)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 != 0) goto L_0x0362
            r0 = 93
            r5 = 93
            goto L_0x0139
        L_0x0295:
            r5 = 104(0x68, float:1.46E-43)
            goto L_0x0139
        L_0x0299:
            r5 = 57
            goto L_0x0139
        L_0x029d:
            r0 = 9
            r10.getMin = r0     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r16 = r0
            o.ConnectionLog$1 r16 = (o.ConnectionLog.AnonymousClass1) r16     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r17 = r0
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r18 = r0
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r23 = r0
            java.lang.String r23 = (java.lang.String) r23     // Catch:{ all -> 0x0365 }
            r10.setMax(r15)     // Catch:{ all -> 0x0365 }
            java.lang.Object r0 = r10.isInside     // Catch:{ all -> 0x0365 }
            r24 = r0
            java.lang.String r24 = (java.lang.String) r24     // Catch:{ all -> 0x0365 }
            o.TitleBarRightButtonView$1 r0 = r16.register(r17, r18, r19, r20, r21, r22, r23, r24)     // Catch:{ all -> 0x0365 }
            r10.IsOverlapping = r0     // Catch:{ all -> 0x0365 }
            goto L_0x01f9
        L_0x02fd:
            r5 = 108(0x6c, float:1.51E-43)
            goto L_0x0139
        L_0x0301:
            r5 = 1
            goto L_0x0139
        L_0x0304:
            r5 = 52
            goto L_0x0139
        L_0x0308:
            int r0 = getMin     // Catch:{ all -> 0x0365 }
            r10.getMin = r0     // Catch:{ all -> 0x0365 }
            goto L_0x017e
        L_0x030e:
            r5 = 1
            r10.getMin = r5     // Catch:{ all -> 0x0365 }
            r10.setMax(r14)     // Catch:{ all -> 0x0365 }
            r0 = 19
            r10.setMax(r0)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            setMax = r0     // Catch:{ all -> 0x0365 }
            goto L_0x0362
        L_0x031e:
            r0 = 33
            r10.setMax(r0)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 != 0) goto L_0x0362
            r0 = 127(0x7f, float:1.78E-43)
            r5 = 127(0x7f, float:1.78E-43)
            goto L_0x0139
        L_0x032d:
            r5 = 43
            goto L_0x0139
        L_0x0331:
            r5 = 130(0x82, float:1.82E-43)
            goto L_0x0139
        L_0x0335:
            r5 = 16
            goto L_0x0139
        L_0x0339:
            r10.setMax(r5)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            r5 = 68
            if (r0 == r5) goto L_0x034d
            r5 = 82
            if (r0 == r5) goto L_0x0347
            goto L_0x034d
        L_0x0347:
            r0 = 97
            r5 = 97
            goto L_0x0139
        L_0x034d:
            r5 = 133(0x85, float:1.86E-43)
            goto L_0x0139
        L_0x0351:
            r10.setMax(r12)     // Catch:{ all -> 0x0365 }
            int r0 = r10.setMin     // Catch:{ all -> 0x0365 }
            if (r0 != 0) goto L_0x0362
            r0 = 174(0xae, float:2.44E-43)
            r5 = 174(0xae, float:2.44E-43)
            goto L_0x0139
        L_0x035e:
            r5 = 107(0x6b, float:1.5E-43)
            goto L_0x0139
        L_0x0362:
            r5 = r7
            goto L_0x0139
        L_0x0365:
            r0 = move-exception
            r5 = 3
            r12 = 132(0x84, float:1.85E-43)
            r13 = 94
            if (r7 < r5) goto L_0x0375
            if (r7 > r4) goto L_0x0375
            r5 = 96
        L_0x0371:
            r17 = 1
            goto L_0x04e8
        L_0x0375:
            byte[] r5 = setMin
            byte r14 = r5[r6]
            byte r14 = (byte) r14
            r15 = r14 | 976(0x3d0, float:1.368E-42)
            short r15 = (short) r15
            r16 = 54
            byte r5 = r5[r16]
            short r5 = (short) r5
            java.lang.String r5 = length(r14, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0397
            if (r7 < r4) goto L_0x0397
            if (r7 > r2) goto L_0x0397
        L_0x0394:
            r5 = 132(0x84, float:1.85E-43)
            goto L_0x0371
        L_0x0397:
            byte[] r5 = setMin
            byte r14 = r5[r6]
            byte r14 = (byte) r14
            r15 = r14 | 5841(0x16d1, float:8.185E-42)
            short r15 = (short) r15
            r17 = 1197(0x4ad, float:1.677E-42)
            byte r5 = r5[r17]
            short r5 = (short) r5
            java.lang.String r5 = length(r14, r15, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x03b7
            if (r7 < r9) goto L_0x03b7
            if (r7 > r2) goto L_0x03b7
            goto L_0x0394
        L_0x03b7:
            byte[] r5 = setMin
            byte r9 = r5[r6]
            byte r9 = (byte) r9
            r14 = r9 | 976(0x3d0, float:1.368E-42)
            short r14 = (short) r14
            byte r5 = r5[r16]
            short r5 = (short) r5
            java.lang.String r5 = length(r9, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x03db
            r5 = 16
            if (r7 < r5) goto L_0x03db
            r5 = 17
            if (r7 > r5) goto L_0x03db
        L_0x03d8:
            r5 = 94
            goto L_0x0371
        L_0x03db:
            byte[] r5 = setMin
            byte r9 = r5[r6]
            byte r9 = (byte) r9
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r15 = 55
            byte r5 = r5[r15]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r9, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0400
            r5 = 48
            if (r7 < r5) goto L_0x0400
            r5 = 51
            if (r7 > r5) goto L_0x0400
        L_0x03ff:
            goto L_0x03d8
        L_0x0400:
            byte[] r5 = setMin
            byte r9 = r5[r6]
            byte r9 = (byte) r9
            r14 = 14230(0x3796, float:1.994E-41)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r5 = r5[r15]
            r17 = 1
            int r5 = r5 + -1
            short r5 = (short) r5
            java.lang.String r5 = length(r9, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0426
            r5 = 63
            if (r7 < r5) goto L_0x0426
            if (r7 > r13) goto L_0x0426
            goto L_0x03ff
        L_0x0426:
            byte[] r5 = setMin
            byte r9 = r5[r6]
            byte r9 = (byte) r9
            byte r5 = r5[r15]
            r17 = 1
            int r5 = r5 + -1
            short r5 = (short) r5
            java.lang.String r5 = length(r9, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x044c
            r5 = 88
            if (r7 < r5) goto L_0x044c
            r5 = 89
            if (r7 > r5) goto L_0x044c
        L_0x0448:
            r5 = 94
            goto L_0x04e8
        L_0x044c:
            r5 = 98
            if (r7 < r5) goto L_0x0456
            if (r7 > r11) goto L_0x0456
            r5 = 95
            goto L_0x04e8
        L_0x0456:
            byte[] r5 = setMin
            byte r9 = r5[r6]
            byte r9 = (byte) r9
            r14 = 9099(0x238b, float:1.275E-41)
            short r14 = (short) r14
            r18 = 4829(0x12dd, float:6.767E-42)
            byte r5 = r5[r18]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r5 = length(r9, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0479
            if (r7 < r8) goto L_0x0479
            r5 = 134(0x86, float:1.88E-43)
            if (r7 > r5) goto L_0x0479
            goto L_0x0448
        L_0x0479:
            r5 = 146(0x92, float:2.05E-43)
            if (r7 < r5) goto L_0x0482
            if (r7 > r3) goto L_0x0482
            r5 = 51
            goto L_0x04e8
        L_0x0482:
            byte[] r5 = setMin
            byte r8 = r5[r6]
            byte r8 = (byte) r8
            r9 = r8 | 976(0x3d0, float:1.368E-42)
            short r9 = (short) r9
            byte r5 = r5[r16]
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r9, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x04a4
            r5 = 144(0x90, float:2.02E-43)
            if (r7 < r5) goto L_0x04a4
            r5 = 145(0x91, float:2.03E-43)
            if (r7 > r5) goto L_0x04a4
            goto L_0x0448
        L_0x04a4:
            byte[] r5 = setMin
            byte r5 = r5[r6]
            byte r5 = (byte) r5
            r8 = 15410(0x3c32, float:2.1594E-41)
            short r8 = (short) r8
            r9 = r8 & 239(0xef, float:3.35E-43)
            short r9 = (short) r9
            java.lang.String r5 = length(r5, r8, r9)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x04c6
            if (r7 < r3) goto L_0x04c6
            r5 = 152(0x98, float:2.13E-43)
            if (r7 > r5) goto L_0x04c6
        L_0x04c3:
            r5 = 132(0x84, float:1.85E-43)
            goto L_0x04e8
        L_0x04c6:
            byte[] r5 = setMin
            byte r8 = r5[r6]
            byte r8 = (byte) r8
            r9 = 15376(0x3c10, float:2.1546E-41)
            short r9 = (short) r9
            byte r5 = r5[r15]
            short r5 = (short) r5
            java.lang.String r5 = length(r8, r9, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x04f1
            r5 = 170(0xaa, float:2.38E-43)
            if (r7 < r5) goto L_0x04f1
            r5 = 171(0xab, float:2.4E-43)
            if (r7 > r5) goto L_0x04f1
            goto L_0x04c3
        L_0x04e8:
            r10.IsOverlapping = r0
            r0 = 35
            r10.setMax(r0)
            goto L_0x0139
        L_0x04f1:
            throw r0
        L_0x04f2:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x04fa
            throw r1
        L_0x04fa:
            goto L_0x04fc
        L_0x04fb:
            throw r0
        L_0x04fc:
            goto L_0x04fb
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$5(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, o.GriverPerformanceStages, java.lang.String):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$6(java.lang.String r21, java.lang.String r22, java.lang.String r23, java.lang.String r24, o.setEventName r25) throws java.lang.Exception {
        /*
            r20 = this;
            o.getGroupId r8 = new o.getGroupId
            r1 = r8
            r2 = r20
            r3 = r21
            r4 = r22
            r5 = r23
            r6 = r24
            r7 = r25
            r1.<init>(r2, r3, r4, r5, r6, r7)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 4515(0x11a3, float:6.327E-42)
            short r1 = (short) r1
            r2 = 268(0x10c, float:3.76E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x02cb }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x02cb }
            byte[] r1 = setMin     // Catch:{ all -> 0x02cb }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x02cb }
            byte r1 = (byte) r1     // Catch:{ all -> 0x02cb }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x02cb }
            byte[] r9 = setMin     // Catch:{ all -> 0x02cb }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x02cb }
            short r9 = (short) r9     // Catch:{ all -> 0x02cb }
            java.lang.String r1 = length(r1, r7, r9)     // Catch:{ all -> 0x02cb }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x02cb }
            byte[] r9 = setMin     // Catch:{ all -> 0x02cb }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x02cb }
            byte r9 = (byte) r9     // Catch:{ all -> 0x02cb }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x02cb }
            byte[] r12 = setMin     // Catch:{ all -> 0x02cb }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x02cb }
            short r12 = (short) r12     // Catch:{ all -> 0x02cb }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x02cb }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x02cb }
            byte[] r12 = setMin     // Catch:{ all -> 0x02cb }
            byte r12 = r12[r6]     // Catch:{ all -> 0x02cb }
            byte r12 = (byte) r12     // Catch:{ all -> 0x02cb }
            byte[] r13 = setMin     // Catch:{ all -> 0x02cb }
            byte r13 = r13[r10]     // Catch:{ all -> 0x02cb }
            short r13 = (short) r13     // Catch:{ all -> 0x02cb }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x02cb }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x02cb }
            r11[r5] = r12     // Catch:{ all -> 0x02cb }
            java.lang.reflect.Method r1 = r1.getMethod(r9, r11)     // Catch:{ all -> 0x02cb }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x02cb }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x02cb }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008c:
            int r9 = r0.length
            r11 = 52
            if (r3 >= r9) goto L_0x012e
            r9 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x0125 }
            r12[r5] = r9     // Catch:{ all -> 0x0125 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0125 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x0125 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0125 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0125 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0125 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0125 }
            short r14 = (short) r14     // Catch:{ all -> 0x0125 }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x0125 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0125 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0125 }
            byte r14 = r14[r4]     // Catch:{ all -> 0x0125 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0125 }
            r4 = r14 | 1470(0x5be, float:2.06E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0125 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0125 }
            byte r11 = r16[r11]     // Catch:{ all -> 0x0125 }
            short r11 = (short) r11     // Catch:{ all -> 0x0125 }
            java.lang.String r4 = length(r14, r4, r11)     // Catch:{ all -> 0x0125 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0125 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0125 }
            byte r14 = r14[r6]     // Catch:{ all -> 0x0125 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0125 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0125 }
            byte r2 = r16[r10]     // Catch:{ all -> 0x0125 }
            short r2 = (short) r2     // Catch:{ all -> 0x0125 }
            java.lang.String r2 = length(r14, r7, r2)     // Catch:{ all -> 0x0125 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0125 }
            r11[r5] = r2     // Catch:{ all -> 0x0125 }
            java.lang.reflect.Method r2 = r9.getMethod(r4, r11)     // Catch:{ all -> 0x0125 }
            r4 = 0
            java.lang.Object r2 = r2.invoke(r4, r12)     // Catch:{ all -> 0x0125 }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r6]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            byte[] r11 = setMin     // Catch:{ all -> 0x011c }
            byte r11 = r11[r15]     // Catch:{ all -> 0x011c }
            short r11 = (short) r11     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r13, r11)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r11 = setMin     // Catch:{ all -> 0x011c }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x011c }
            byte r11 = (byte) r11     // Catch:{ all -> 0x011c }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r4)     // Catch:{ all -> 0x011c }
            java.lang.Object r2 = r9.invoke(r2, r4)     // Catch:{ all -> 0x011c }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x011c }
            int r2 = r2.intValue()     // Catch:{ all -> 0x011c }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            goto L_0x008c
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012d
            throw r1
        L_0x012d:
            throw r0
        L_0x012e:
            r2 = 25
            r3 = 30
            r4 = 60
        L_0x0134:
            r7 = 34
        L_0x0136:
            int r9 = r5 + 1
            r10 = 19
            r12 = 33
            r0 = r1[r5]     // Catch:{ all -> 0x021f }
            int r0 = r8.setMax(r0)     // Catch:{ all -> 0x021f }
            r5 = 24
            r13 = 18
            switch(r0) {
                case -18: goto L_0x0218;
                case -17: goto L_0x0214;
                case -16: goto L_0x0207;
                case -15: goto L_0x0204;
                case -14: goto L_0x01ed;
                case -13: goto L_0x01e9;
                case -12: goto L_0x01a3;
                case -11: goto L_0x01a0;
                case -10: goto L_0x0197;
                case -9: goto L_0x0182;
                case -8: goto L_0x0179;
                case -7: goto L_0x0176;
                case -6: goto L_0x0173;
                case -5: goto L_0x0170;
                case -4: goto L_0x0168;
                case -3: goto L_0x0159;
                case -2: goto L_0x014e;
                case -1: goto L_0x014b;
                default: goto L_0x0149;
            }     // Catch:{ all -> 0x021f }
        L_0x0149:
            goto L_0x021c
        L_0x014b:
            r5 = 57
            goto L_0x0136
        L_0x014e:
            int r0 = getMin     // Catch:{ all -> 0x021f }
            r8.getMin = r0     // Catch:{ all -> 0x021f }
            r0 = 10
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            goto L_0x021c
        L_0x0159:
            r5 = 1
            r8.getMin = r5     // Catch:{ all -> 0x021f }
            r8.setMax(r13)     // Catch:{ all -> 0x021f }
            r8.setMax(r10)     // Catch:{ all -> 0x021f }
            int r0 = r8.setMin     // Catch:{ all -> 0x021f }
            setMax = r0     // Catch:{ all -> 0x021f }
            goto L_0x021c
        L_0x0168:
            r8.setMax(r12)     // Catch:{ all -> 0x021f }
            int r0 = r8.setMin     // Catch:{ all -> 0x021f }
            if (r0 != 0) goto L_0x021c
            goto L_0x0136
        L_0x0170:
            r5 = 38
            goto L_0x0136
        L_0x0173:
            r5 = 25
            goto L_0x0136
        L_0x0176:
            r5 = 30
            goto L_0x0136
        L_0x0179:
            r5 = 1
            r8.setMax(r5)     // Catch:{ all -> 0x021f }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x021f }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x021f }
            return r0
        L_0x0182:
            r8.setMax(r7)     // Catch:{ all -> 0x021f }
            int r0 = r8.setMin     // Catch:{ all -> 0x021f }
            r5 = 67
            r9 = 40
            if (r0 == r5) goto L_0x0192
            r5 = 79
            r5 = 40
            goto L_0x0136
        L_0x0192:
            r0 = 47
            r5 = 47
            goto L_0x0136
        L_0x0197:
            r5 = 1
            r8.setMax(r5)     // Catch:{ all -> 0x021f }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x021f }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x021f }
            throw r0     // Catch:{ all -> 0x021f }
        L_0x01a0:
            r5 = 56
            goto L_0x0136
        L_0x01a3:
            r0 = 6
            r8.getMin = r0     // Catch:{ all -> 0x021f }
            r8.setMax(r13)     // Catch:{ all -> 0x021f }
            r0 = 23
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r13 = r8.isInside     // Catch:{ all -> 0x021f }
            r14 = r13
            o.lock r14 = (o.lock) r14     // Catch:{ all -> 0x021f }
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r13 = r8.isInside     // Catch:{ all -> 0x021f }
            r15 = r13
            o.setEventName r15 = (o.setEventName) r15     // Catch:{ all -> 0x021f }
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r13 = r8.isInside     // Catch:{ all -> 0x021f }
            r16 = r13
            java.lang.String r16 = (java.lang.String) r16     // Catch:{ all -> 0x021f }
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r13 = r8.isInside     // Catch:{ all -> 0x021f }
            r17 = r13
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x021f }
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r13 = r8.isInside     // Catch:{ all -> 0x021f }
            r18 = r13
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x021f }
            r8.setMax(r0)     // Catch:{ all -> 0x021f }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x021f }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x021f }
            o.TitleBarRightButtonView$4 r0 = r14.saveAccount(r15, r16, r17, r18, r19)     // Catch:{ all -> 0x021f }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x021f }
            r8.setMax(r5)     // Catch:{ all -> 0x021f }
            goto L_0x021c
        L_0x01e9:
            r5 = 60
            goto L_0x0136
        L_0x01ed:
            r8.setMax(r7)     // Catch:{ all -> 0x021f }
            int r0 = r8.setMin     // Catch:{ all -> 0x021f }
            r5 = 63
            r9 = 27
            if (r0 == r5) goto L_0x01fe
            r5 = 84
            r5 = 27
            goto L_0x0136
        L_0x01fe:
            r0 = 45
            r5 = 45
            goto L_0x0136
        L_0x0204:
            r5 = 1
            goto L_0x0136
        L_0x0207:
            r8.setMax(r12)     // Catch:{ all -> 0x021f }
            int r0 = r8.setMin     // Catch:{ all -> 0x021f }
            if (r0 != 0) goto L_0x021c
            r0 = 80
            r5 = 80
            goto L_0x0136
        L_0x0214:
            r5 = 34
            goto L_0x0136
        L_0x0218:
            r5 = 36
            goto L_0x0136
        L_0x021c:
            r5 = r9
            goto L_0x0136
        L_0x021f:
            r0 = move-exception
            byte[] r5 = setMin
            byte r13 = r5[r6]
            byte r13 = (byte) r13
            r14 = 14230(0x3796, float:1.994E-41)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r5 = r5[r15]
            r7 = 1
            int r5 = r5 - r7
            short r5 = (short) r5
            java.lang.String r5 = length(r13, r14, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            r13 = 31
            r14 = 55
            if (r5 == 0) goto L_0x0249
            if (r9 < r7) goto L_0x0249
            if (r9 > r2) goto L_0x0249
        L_0x0245:
            r5 = 33
            goto L_0x02bf
        L_0x0249:
            byte[] r5 = setMin
            byte r2 = r5[r6]
            byte r2 = (byte) r2
            r7 = 1451(0x5ab, float:2.033E-42)
            short r7 = (short) r7
            byte r5 = r5[r15]
            short r5 = (short) r5
            java.lang.String r2 = length(r2, r7, r5)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x026b
            if (r9 < r10) goto L_0x026b
            r2 = 20
            if (r9 > r2) goto L_0x026b
        L_0x0268:
            r5 = 31
            goto L_0x02bf
        L_0x026b:
            r2 = 28
            if (r9 < r2) goto L_0x0276
            if (r9 > r3) goto L_0x0276
            r2 = 32
            r5 = 32
            goto L_0x02bf
        L_0x0276:
            if (r9 < r11) goto L_0x027d
            if (r9 > r14) goto L_0x027d
            r5 = 55
            goto L_0x02bf
        L_0x027d:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r7 = 15376(0x3c10, float:2.1546E-41)
            short r7 = (short) r7
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r7, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x029d
            if (r9 < r4) goto L_0x029d
            r2 = 81
            if (r9 > r2) goto L_0x029d
            goto L_0x0268
        L_0x029d:
            byte[] r2 = setMin
            byte r2 = r2[r6]
            byte r2 = (byte) r2
            r5 = 15410(0x3c32, float:2.1594E-41)
            short r5 = (short) r5
            r7 = r5 & 239(0xef, float:3.35E-43)
            short r7 = (short) r7
            java.lang.String r2 = length(r2, r5, r7)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x02ca
            r2 = 75
            if (r9 < r2) goto L_0x02ca
            r2 = 76
            if (r9 > r2) goto L_0x02ca
            goto L_0x0245
        L_0x02bf:
            r8.IsOverlapping = r0
            r0 = 35
            r8.setMax(r0)
            r2 = 25
            goto L_0x0134
        L_0x02ca:
            throw r0
        L_0x02cb:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x02d3
            throw r1
        L_0x02d3:
            goto L_0x02d5
        L_0x02d4:
            throw r0
        L_0x02d5:
            goto L_0x02d4
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$6(java.lang.String, java.lang.String, java.lang.String, java.lang.String, o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$thenRegister$7(o.setEventName r18, java.lang.Long r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 4724(0x1274, float:6.62E-42)
            short r2 = (short) r2
            r3 = 209(0xd1, float:2.93E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0261 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0261 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0261 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0261 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0261 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0261 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0261 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0261 }
            short r9 = (short) r9     // Catch:{ all -> 0x0261 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0261 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0261 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0261 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0261 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0261 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0261 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0261 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0261 }
            short r12 = (short) r12     // Catch:{ all -> 0x0261 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0261 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0261 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0261 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0261 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0261 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0261 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0261 }
            short r13 = (short) r13     // Catch:{ all -> 0x0261 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0261 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0261 }
            r11[r6] = r12     // Catch:{ all -> 0x0261 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0261 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0261 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0261 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r11[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r5]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            r15 = r13 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r5 = r16[r17]     // Catch:{ all -> 0x011c }
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r13, r15, r5)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r13 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r15 = setMin     // Catch:{ all -> 0x011c }
            byte r15 = r15[r7]     // Catch:{ all -> 0x011c }
            byte r15 = (byte) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r15, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r13[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r13)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r11)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r14]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r12, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r3 = 8
            r4 = 26
            r5 = 6
            r8 = 34
        L_0x012c:
            int r9 = r6 + 1
            r11 = 2
            r12 = 22
            r0 = r2[r6]     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x01c2 }
            r6 = 10
            r13 = 18
            switch(r0) {
                case -16: goto L_0x01bb;
                case -15: goto L_0x01b7;
                case -14: goto L_0x01ac;
                case -13: goto L_0x01aa;
                case -12: goto L_0x01a7;
                case -11: goto L_0x019e;
                case -10: goto L_0x018e;
                case -9: goto L_0x018b;
                case -8: goto L_0x0188;
                case -7: goto L_0x017c;
                case -6: goto L_0x016c;
                case -5: goto L_0x0167;
                case -4: goto L_0x0164;
                case -3: goto L_0x015b;
                case -2: goto L_0x0143;
                case -1: goto L_0x0140;
                default: goto L_0x013e;
            }     // Catch:{ all -> 0x01c2 }
        L_0x013e:
            goto L_0x01bf
        L_0x0140:
            r6 = 60
            goto L_0x012c
        L_0x0143:
            r14 = 1
            r1.getMin = r14     // Catch:{ all -> 0x01c2 }
            r1.setMax(r13)     // Catch:{ all -> 0x01c2 }
            r0 = 23
            r1.setMax(r0)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c2 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x01c2 }
            r1.getMin = r0     // Catch:{ all -> 0x01c2 }
        L_0x0156:
            r1.setMax(r6)     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x015b:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c2 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x01c2 }
            return r0
        L_0x0164:
            r6 = 8
            goto L_0x012c
        L_0x0167:
            int r0 = setMax     // Catch:{ all -> 0x01c2 }
            r1.getMin = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x0156
        L_0x016c:
            r6 = 1
            r1.getMin = r6     // Catch:{ all -> 0x01c2 }
            r1.setMax(r13)     // Catch:{ all -> 0x01c2 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c2 }
            getMin = r0     // Catch:{ all -> 0x01c2 }
            goto L_0x01bf
        L_0x017c:
            r1.setMax(r12)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c2 }
            if (r0 != 0) goto L_0x01bf
            r0 = 25
            r6 = 25
            goto L_0x012c
        L_0x0188:
            r6 = 30
            goto L_0x012c
        L_0x018b:
            r6 = 64
            goto L_0x012c
        L_0x018e:
            r1.setMax(r8)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c2 }
            r6 = 28
            if (r0 == r11) goto L_0x012c
            r9 = 96
            if (r0 == r9) goto L_0x019c
            goto L_0x012c
        L_0x019c:
            r6 = 1
            goto L_0x012c
        L_0x019e:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x01c2 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x01c2 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x01c2 }
            throw r0     // Catch:{ all -> 0x01c2 }
        L_0x01a7:
            r6 = 26
            goto L_0x012c
        L_0x01aa:
            r6 = 6
            goto L_0x012c
        L_0x01ac:
            r1.setMax(r12)     // Catch:{ all -> 0x01c2 }
            int r0 = r1.setMin     // Catch:{ all -> 0x01c2 }
            if (r0 != 0) goto L_0x01bf
            r6 = 58
            goto L_0x012c
        L_0x01b7:
            r6 = 33
            goto L_0x012c
        L_0x01bb:
            r6 = 34
            goto L_0x012c
        L_0x01bf:
            r6 = r9
            goto L_0x012c
        L_0x01c2:
            r0 = move-exception
            r6 = 27
            r13 = 59
            if (r9 < r11) goto L_0x01d1
            if (r9 > r5) goto L_0x01d1
            r6 = 32
        L_0x01cd:
            r16 = 1
            goto L_0x0257
        L_0x01d1:
            byte[] r11 = setMin
            byte r14 = r11[r7]
            byte r14 = (byte) r14
            r15 = 1451(0x5ab, float:2.033E-42)
            short r15 = (short) r15
            r16 = 13952(0x3680, float:1.9551E-41)
            byte r11 = r11[r16]
            short r11 = (short) r11
            java.lang.String r11 = length(r14, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x01f3
            if (r9 < r3) goto L_0x01f3
            if (r9 > r4) goto L_0x01f3
        L_0x01f0:
            r6 = 59
            goto L_0x01cd
        L_0x01f3:
            byte[] r11 = setMin
            byte r14 = r11[r7]
            byte r14 = (byte) r14
            r15 = 9099(0x238b, float:1.275E-41)
            short r15 = (short) r15
            r17 = 4829(0x12dd, float:6.767E-42)
            byte r11 = r11[r17]
            int r11 = -r11
            short r11 = (short) r11
            java.lang.String r11 = length(r14, r15, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0216
            r11 = 21
            if (r9 < r11) goto L_0x0216
            if (r9 > r12) goto L_0x0216
            goto L_0x01cd
        L_0x0216:
            byte[] r11 = setMin
            byte r12 = r11[r7]
            byte r12 = (byte) r12
            r14 = r12 | 976(0x3d0, float:1.368E-42)
            short r14 = (short) r14
            r15 = 54
            byte r11 = r11[r15]
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r14, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0236
            if (r9 < r8) goto L_0x0236
            if (r9 > r13) goto L_0x0236
            goto L_0x01f0
        L_0x0236:
            byte[] r11 = setMin
            byte r12 = r11[r7]
            byte r12 = (byte) r12
            r14 = 14230(0x3796, float:1.994E-41)
            short r14 = (short) r14
            byte r11 = r11[r16]
            r16 = 1
            int r11 = r11 + -1
            short r11 = (short) r11
            java.lang.String r11 = length(r12, r14, r11)
            java.lang.Class r11 = java.lang.Class.forName(r11)
            boolean r11 = r11.isInstance(r0)
            if (r11 == 0) goto L_0x0260
            if (r9 < r15) goto L_0x0260
            if (r9 > r13) goto L_0x0260
        L_0x0257:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012c
        L_0x0260:
            throw r0
        L_0x0261:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0269
            throw r1
        L_0x0269:
            goto L_0x026b
        L_0x026a:
            throw r0
        L_0x026b:
            goto L_0x026a
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$7(o.setEventName, java.lang.Long):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static /* synthetic */ o.setEventName lambda$thenRegister$8(o.setEventName r18, java.lang.Long r19) throws java.lang.Exception {
        /*
            o.getGroupId r1 = new o.getGroupId
            r0 = r18
            r2 = r19
            r1.<init>(r0, r2)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r2 = 12708(0x31a4, float:1.7808E-41)
            short r2 = (short) r2
            r3 = 207(0xcf, float:2.9E-43)
            short r3 = (short) r3
            java.lang.String r0 = length(r0, r2, r3)
            int r2 = getMax
            r2 = r2 & 494(0x1ee, float:6.92E-43)
            byte r2 = (byte) r2
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            byte[] r4 = setMin
            r5 = 49
            byte r4 = r4[r5]
            short r4 = (short) r4
            java.lang.String r2 = length(r2, r3, r4)
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ all -> 0x0236 }
            r6 = 0
            r4[r6] = r2     // Catch:{ all -> 0x0236 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0236 }
            r7 = 72
            byte r2 = r2[r7]     // Catch:{ all -> 0x0236 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0236 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0236 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0236 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0236 }
            short r9 = (short) r9     // Catch:{ all -> 0x0236 }
            java.lang.String r2 = length(r2, r8, r9)     // Catch:{ all -> 0x0236 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0236 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0236 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0236 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0236 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0236 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0236 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0236 }
            short r12 = (short) r12     // Catch:{ all -> 0x0236 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0236 }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x0236 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0236 }
            byte r12 = r12[r7]     // Catch:{ all -> 0x0236 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0236 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0236 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x0236 }
            short r13 = (short) r13     // Catch:{ all -> 0x0236 }
            java.lang.String r12 = length(r12, r8, r13)     // Catch:{ all -> 0x0236 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0236 }
            r11[r6] = r12     // Catch:{ all -> 0x0236 }
            java.lang.reflect.Method r2 = r2.getMethod(r9, r11)     // Catch:{ all -> 0x0236 }
            java.lang.Object r0 = r2.invoke(r0, r4)     // Catch:{ all -> 0x0236 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0236 }
            int r2 = r0.length
            int[] r2 = new int[r2]
            r4 = 0
        L_0x0083:
            int r9 = r0.length
            if (r4 >= r9) goto L_0x0125
            r9 = r0[r4]
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ all -> 0x011c }
            r12[r6] = r9     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x011c }
            byte r9 = r9[r7]     // Catch:{ all -> 0x011c }
            byte r9 = (byte) r9     // Catch:{ all -> 0x011c }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x011c }
            short r14 = (short) r14     // Catch:{ all -> 0x011c }
            java.lang.String r9 = length(r9, r13, r14)     // Catch:{ all -> 0x011c }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r5]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            r5 = r14 | 1470(0x5be, float:2.06E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            r17 = 52
            byte r11 = r16[r17]     // Catch:{ all -> 0x011c }
            short r11 = (short) r11     // Catch:{ all -> 0x011c }
            java.lang.String r5 = length(r14, r5, r11)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r11 = new java.lang.Class[r3]     // Catch:{ all -> 0x011c }
            byte[] r14 = setMin     // Catch:{ all -> 0x011c }
            byte r14 = r14[r7]     // Catch:{ all -> 0x011c }
            byte r14 = (byte) r14     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r3 = r16[r10]     // Catch:{ all -> 0x011c }
            short r3 = (short) r3     // Catch:{ all -> 0x011c }
            java.lang.String r3 = length(r14, r8, r3)     // Catch:{ all -> 0x011c }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x011c }
            r11[r6] = r3     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r3 = r9.getMethod(r5, r11)     // Catch:{ all -> 0x011c }
            r5 = 0
            java.lang.Object r3 = r3.invoke(r5, r12)     // Catch:{ all -> 0x011c }
            byte[] r9 = setMin     // Catch:{ all -> 0x0113 }
            byte r9 = r9[r7]     // Catch:{ all -> 0x0113 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            byte r11 = r11[r15]     // Catch:{ all -> 0x0113 }
            short r11 = (short) r11     // Catch:{ all -> 0x0113 }
            java.lang.String r9 = length(r9, r13, r11)     // Catch:{ all -> 0x0113 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0113 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r11 = r11[r12]     // Catch:{ all -> 0x0113 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0113 }
            java.lang.reflect.Method r9 = r9.getMethod(r11, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Object r3 = r9.invoke(r3, r5)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ all -> 0x0113 }
            int r3 = r3.intValue()     // Catch:{ all -> 0x0113 }
            r2[r4] = r3
            int r4 = r4 + 1
            r3 = 1
            r5 = 49
            goto L_0x0083
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r14 = 11
            r3 = 41
            r4 = 13
        L_0x012b:
            int r5 = r6 + 1
            r0 = r2[r6]     // Catch:{ all -> 0x019b }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x019b }
            r6 = 22
            switch(r0) {
                case -13: goto L_0x0195;
                case -12: goto L_0x0186;
                case -11: goto L_0x0182;
                case -10: goto L_0x0175;
                case -9: goto L_0x0163;
                case -8: goto L_0x0159;
                case -7: goto L_0x0156;
                case -6: goto L_0x014d;
                case -5: goto L_0x0144;
                case -4: goto L_0x0142;
                case -3: goto L_0x013f;
                case -2: goto L_0x013c;
                case -1: goto L_0x013a;
                default: goto L_0x0138;
            }     // Catch:{ all -> 0x019b }
        L_0x0138:
            r8 = 1
            goto L_0x0199
        L_0x013a:
            r6 = 3
            goto L_0x012b
        L_0x013c:
            r6 = 13
            goto L_0x012b
        L_0x013f:
            r6 = 41
            goto L_0x012b
        L_0x0142:
            r6 = 1
            goto L_0x012b
        L_0x0144:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x019b }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x019b }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x019b }
            return r0
        L_0x014d:
            r6 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x019b }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x019b }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x019b }
            throw r0     // Catch:{ all -> 0x019b }
        L_0x0156:
            r6 = 9
            goto L_0x012b
        L_0x0159:
            int r0 = setMax     // Catch:{ all -> 0x019b }
            r1.getMin = r0     // Catch:{ all -> 0x019b }
            r0 = 10
            r1.setMax(r0)     // Catch:{ all -> 0x019b }
            goto L_0x0138
        L_0x0163:
            r8 = 1
            r1.getMin = r8     // Catch:{ all -> 0x0193 }
            r0 = 18
            r1.setMax(r0)     // Catch:{ all -> 0x0193 }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x0193 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0193 }
            getMin = r0     // Catch:{ all -> 0x0193 }
            goto L_0x0199
        L_0x0175:
            r8 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x0193 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0193 }
            if (r0 != 0) goto L_0x0199
            r0 = 39
            r6 = 39
            goto L_0x012b
        L_0x0182:
            r8 = 1
            r6 = 12
            goto L_0x012b
        L_0x0186:
            r8 = 1
            r1.setMax(r6)     // Catch:{ all -> 0x0193 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0193 }
            if (r0 != 0) goto L_0x0199
            r0 = 64
            r6 = 64
            goto L_0x012b
        L_0x0193:
            r0 = move-exception
            goto L_0x019d
        L_0x0195:
            r8 = 1
            r6 = 8
            goto L_0x012b
        L_0x0199:
            r6 = r5
            goto L_0x012b
        L_0x019b:
            r0 = move-exception
            r8 = 1
        L_0x019d:
            byte[] r6 = setMin
            byte r9 = r6[r7]
            byte r9 = (byte) r9
            r10 = r9 | 2097(0x831, float:2.939E-42)
            short r10 = (short) r10
            r11 = 9575(0x2567, float:1.3417E-41)
            byte r6 = r6[r11]
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            r9 = 40
            if (r6 == 0) goto L_0x01c3
            if (r5 < r4) goto L_0x01c3
            r6 = 14
            if (r5 > r6) goto L_0x01c3
        L_0x01c0:
            r6 = 11
            goto L_0x022c
        L_0x01c3:
            byte[] r6 = setMin
            byte r10 = r6[r7]
            byte r10 = (byte) r10
            r11 = 1451(0x5ab, float:2.033E-42)
            short r11 = (short) r11
            r12 = 13952(0x3680, float:1.9551E-41)
            byte r6 = r6[r12]
            short r6 = (short) r6
            java.lang.String r6 = length(r10, r11, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x01e7
            r6 = 34
            if (r5 < r6) goto L_0x01e7
            if (r5 > r9) goto L_0x01e7
            r6 = 40
            goto L_0x022c
        L_0x01e7:
            byte[] r6 = setMin
            byte r9 = r6[r7]
            byte r9 = (byte) r9
            r10 = 963(0x3c3, float:1.35E-42)
            short r10 = (short) r10
            r11 = 55
            byte r6 = r6[r11]
            int r6 = -r6
            short r6 = (short) r6
            java.lang.String r6 = length(r9, r10, r6)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x020a
            if (r5 < r3) goto L_0x020a
            r6 = 42
            if (r5 > r6) goto L_0x020a
            goto L_0x01c0
        L_0x020a:
            byte[] r6 = setMin
            byte r6 = r6[r7]
            byte r6 = (byte) r6
            r9 = 15410(0x3c32, float:2.1594E-41)
            short r9 = (short) r9
            r10 = r9 & 239(0xef, float:3.35E-43)
            short r10 = (short) r10
            java.lang.String r6 = length(r6, r9, r10)
            java.lang.Class r6 = java.lang.Class.forName(r6)
            boolean r6 = r6.isInstance(r0)
            if (r6 == 0) goto L_0x0235
            r6 = 60
            if (r5 < r6) goto L_0x0235
            r6 = 61
            if (r5 > r6) goto L_0x0235
            goto L_0x01c0
        L_0x022c:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            goto L_0x012b
        L_0x0235:
            throw r0
        L_0x0236:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x023e
            throw r1
        L_0x023e:
            goto L_0x0240
        L_0x023f:
            throw r0
        L_0x0240:
            goto L_0x023f
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$8(o.setEventName, java.lang.Long):o.setEventName");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x02cc, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:203:0x04bd, code lost:
        if (r14 <= 75) goto L_0x0496;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:223:0x052e, code lost:
        if (r14 <= 83) goto L_0x0509;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:236:0x0574, code lost:
        if (r14 <= 98) goto L_0x05ec;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:69:0x0219, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:189:0x046c A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:202:0x04bb  */
    /* JADX WARNING: Removed duplicated region for block: B:204:0x04c0  */
    /* JADX WARNING: Removed duplicated region for block: B:220:0x0528  */
    /* JADX WARNING: Removed duplicated region for block: B:224:0x0531  */
    /* JADX WARNING: Removed duplicated region for block: B:233:0x056e  */
    /* JADX WARNING: Removed duplicated region for block: B:237:0x0578  */
    /* JADX WARNING: Removed duplicated region for block: B:248:0x05a7  */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x05ac  */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x01bf A[Catch:{ all -> 0x01b4, all -> 0x01c1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x01c0 A[Catch:{ all -> 0x01b4, all -> 0x01c1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x022d A[Catch:{ all -> 0x021e, all -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x022e A[Catch:{ all -> 0x021e, all -> 0x0457 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ o.TitleBarRightButtonView.AnonymousClass4 lambda$thenRegister$9(o.setEventName r26) throws java.lang.Exception {
        /*
            r25 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r25
            r0 = r26
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 9652(0x25b4, float:1.3525E-41)
            short r3 = (short) r3
            r4 = 553(0x229, float:7.75E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r4 = getMax
            r4 = r4 & 494(0x1ee, float:6.92E-43)
            byte r4 = (byte) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r4, r3, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x05f8 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x05f8 }
            byte[] r3 = setMin     // Catch:{ all -> 0x05f8 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x05f8 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x05f8 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x05f8 }
            byte[] r10 = setMin     // Catch:{ all -> 0x05f8 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x05f8 }
            short r10 = (short) r10     // Catch:{ all -> 0x05f8 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x05f8 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x05f8 }
            byte[] r10 = setMin     // Catch:{ all -> 0x05f8 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x05f8 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x05f8 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x05f8 }
            byte[] r13 = setMin     // Catch:{ all -> 0x05f8 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x05f8 }
            short r13 = (short) r13     // Catch:{ all -> 0x05f8 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x05f8 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x05f8 }
            byte[] r13 = setMin     // Catch:{ all -> 0x05f8 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x05f8 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x05f8 }
            byte[] r14 = setMin     // Catch:{ all -> 0x05f8 }
            byte r14 = r14[r11]     // Catch:{ all -> 0x05f8 }
            short r14 = (short) r14     // Catch:{ all -> 0x05f8 }
            java.lang.String r13 = length(r13, r9, r14)     // Catch:{ all -> 0x05f8 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x05f8 }
            r12[r7] = r13     // Catch:{ all -> 0x05f8 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x05f8 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x05f8 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x05f8 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0080:
            int r10 = r0.length
            r12 = 4832(0x12e0, float:6.771E-42)
            if (r5 >= r10) goto L_0x0125
            r10 = r0[r5]
            java.lang.Object[] r14 = new java.lang.Object[r4]     // Catch:{ all -> 0x011c }
            r14[r7] = r10     // Catch:{ all -> 0x011c }
            byte[] r10 = setMin     // Catch:{ all -> 0x011c }
            byte r10 = r10[r8]     // Catch:{ all -> 0x011c }
            byte r10 = (byte) r10     // Catch:{ all -> 0x011c }
            r15 = 14246(0x37a6, float:1.9963E-41)
            short r15 = (short) r15     // Catch:{ all -> 0x011c }
            byte[] r16 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r16[r12]     // Catch:{ all -> 0x011c }
            short r13 = (short) r13     // Catch:{ all -> 0x011c }
            java.lang.String r10 = length(r10, r15, r13)     // Catch:{ all -> 0x011c }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r6]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            r6 = r13 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x011c }
            byte[] r17 = setMin     // Catch:{ all -> 0x011c }
            r18 = 52
            byte r12 = r17[r18]     // Catch:{ all -> 0x011c }
            short r12 = (short) r12     // Catch:{ all -> 0x011c }
            java.lang.String r6 = length(r13, r6, r12)     // Catch:{ all -> 0x011c }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x011c }
            byte[] r13 = setMin     // Catch:{ all -> 0x011c }
            byte r13 = r13[r8]     // Catch:{ all -> 0x011c }
            byte r13 = (byte) r13     // Catch:{ all -> 0x011c }
            byte[] r17 = setMin     // Catch:{ all -> 0x011c }
            byte r4 = r17[r11]     // Catch:{ all -> 0x011c }
            short r4 = (short) r4     // Catch:{ all -> 0x011c }
            java.lang.String r4 = length(r13, r9, r4)     // Catch:{ all -> 0x011c }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x011c }
            r12[r7] = r4     // Catch:{ all -> 0x011c }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x011c }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r14)     // Catch:{ all -> 0x011c }
            byte[] r6 = setMin     // Catch:{ all -> 0x0113 }
            byte r6 = r6[r8]     // Catch:{ all -> 0x0113 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x0113 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0113 }
            short r10 = (short) r10     // Catch:{ all -> 0x0113 }
            java.lang.String r6 = length(r6, r15, r10)     // Catch:{ all -> 0x0113 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0113 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0113 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0113 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0113 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0113 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0113 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0113 }
            short r13 = (short) r13     // Catch:{ all -> 0x0113 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0113 }
            r12 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r10, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Object r4 = r6.invoke(r4, r12)     // Catch:{ all -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0113 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            goto L_0x0080
        L_0x0113:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x011b
            throw r1
        L_0x011b:
            throw r0
        L_0x011c:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0124
            throw r1
        L_0x0124:
            throw r0
        L_0x0125:
            r9 = 19
            r10 = 2
            r12 = 24
            r13 = 23
            r0 = 0
        L_0x012d:
            int r14 = r0 + 1
            r15 = 18
            r0 = r3[r0]     // Catch:{ all -> 0x045f }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x045f }
            r4 = 10
            r6 = 33
            r5 = 34
            switch(r0) {
                case -44: goto L_0x0441;
                case -43: goto L_0x043a;
                case -42: goto L_0x0433;
                case -41: goto L_0x0418;
                case -40: goto L_0x0410;
                case -39: goto L_0x0408;
                case -38: goto L_0x03f7;
                case -37: goto L_0x03df;
                case -36: goto L_0x03d7;
                case -35: goto L_0x03c5;
                case -34: goto L_0x03ac;
                case -33: goto L_0x03a3;
                case -32: goto L_0x039b;
                case -31: goto L_0x038b;
                case -30: goto L_0x0382;
                case -29: goto L_0x037b;
                case -28: goto L_0x036b;
                case -27: goto L_0x0350;
                case -26: goto L_0x0348;
                case -25: goto L_0x033f;
                case -24: goto L_0x0337;
                case -23: goto L_0x032f;
                case -22: goto L_0x031d;
                case -21: goto L_0x0307;
                case -20: goto L_0x02fa;
                case -19: goto L_0x02f3;
                case -18: goto L_0x02e3;
                case -17: goto L_0x02d0;
                case -16: goto L_0x02c3;
                case -15: goto L_0x02bb;
                case -14: goto L_0x02b2;
                case -13: goto L_0x0292;
                case -12: goto L_0x0278;
                case -11: goto L_0x026a;
                case -10: goto L_0x025c;
                case -9: goto L_0x0254;
                case -8: goto L_0x0235;
                case -7: goto L_0x01c4;
                case -6: goto L_0x016e;
                case -5: goto L_0x0154;
                case -4: goto L_0x0151;
                case -3: goto L_0x014e;
                case -2: goto L_0x014b;
                case -1: goto L_0x0148;
                default: goto L_0x0140;
            }
        L_0x0140:
            r4 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            goto L_0x045a
        L_0x0148:
            r0 = 156(0x9c, float:2.19E-43)
            goto L_0x012d
        L_0x014b:
            r0 = 141(0x8d, float:1.98E-43)
            goto L_0x012d
        L_0x014e:
            r0 = 77
            goto L_0x012d
        L_0x0151:
            r0 = 81
            goto L_0x012d
        L_0x0154:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x016b }
            r1.setMax(r15)     // Catch:{ all -> 0x045f }
            r1.setMax(r13)     // Catch:{ all -> 0x045f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x045f }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x045f }
            o.setDrawDivider r0 = r0.createAccountData()     // Catch:{ all -> 0x045f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x045f }
            r1.setMax(r12)     // Catch:{ all -> 0x045f }
            goto L_0x0140
        L_0x016b:
            r0 = move-exception
            goto L_0x0461
        L_0x016e:
            byte[] r0 = setMin     // Catch:{ all -> 0x01b6 }
            byte r0 = r0[r8]     // Catch:{ all -> 0x01b6 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x01b6 }
            r4 = 14261(0x37b5, float:1.9984E-41)
            short r4 = (short) r4     // Catch:{ all -> 0x01b6 }
            byte[] r5 = setMin     // Catch:{ all -> 0x01b6 }
            byte r5 = r5[r11]     // Catch:{ all -> 0x01b6 }
            short r5 = (short) r5     // Catch:{ all -> 0x01b6 }
            java.lang.String r0 = length(r0, r4, r5)     // Catch:{ all -> 0x01b6 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x01b6 }
            byte[] r4 = setMin     // Catch:{ all -> 0x01b6 }
            r5 = 56
            byte r4 = r4[r5]     // Catch:{ all -> 0x01b6 }
            byte r4 = (byte) r4     // Catch:{ all -> 0x01b6 }
            r5 = 814(0x32e, float:1.14E-42)
            short r5 = (short) r5     // Catch:{ all -> 0x01b6 }
            byte[] r6 = setMin     // Catch:{ all -> 0x01b6 }
            r19 = 4832(0x12e0, float:6.771E-42)
            byte r6 = r6[r19]     // Catch:{ all -> 0x01b4 }
            short r6 = (short) r6     // Catch:{ all -> 0x01b4 }
            java.lang.String r4 = length(r4, r5, r6)     // Catch:{ all -> 0x01b4 }
            r5 = 0
            java.lang.reflect.Method r0 = r0.getMethod(r4, r5)     // Catch:{ all -> 0x01b4 }
            java.lang.Object r0 = r0.invoke(r5, r5)     // Catch:{ all -> 0x01b4 }
            java.lang.Long r0 = (java.lang.Long) r0     // Catch:{ all -> 0x01b4 }
            long r4 = r0.longValue()     // Catch:{ all -> 0x01b4 }
            r1.length = r4     // Catch:{ all -> 0x01c1 }
            r0 = 354(0x162, float:4.96E-43)
            r1.setMax(r0)     // Catch:{ all -> 0x01c1 }
            r4 = 1
            r11 = 0
            r16 = 49
            goto L_0x045a
        L_0x01b4:
            r0 = move-exception
            goto L_0x01b9
        L_0x01b6:
            r0 = move-exception
            r19 = 4832(0x12e0, float:6.771E-42)
        L_0x01b9:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x01c1 }
            if (r4 == 0) goto L_0x01c0
            throw r4     // Catch:{ all -> 0x01c1 }
        L_0x01c0:
            throw r0     // Catch:{ all -> 0x01c1 }
        L_0x01c1:
            r0 = move-exception
            r4 = 1
            goto L_0x0230
        L_0x01c4:
            r4 = 1
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r4     // Catch:{ all -> 0x022f }
            r1.setMax(r15)     // Catch:{ all -> 0x022f }
            r0 = 355(0x163, float:4.97E-43)
            r1.setMax(r0)     // Catch:{ all -> 0x022f }
            long r5 = r1.getMax     // Catch:{ all -> 0x022f }
            java.lang.Object[] r0 = new java.lang.Object[r4]     // Catch:{ all -> 0x0223 }
            java.lang.Long r4 = java.lang.Long.valueOf(r5)     // Catch:{ all -> 0x0223 }
            r0[r7] = r4     // Catch:{ all -> 0x0223 }
            byte[] r4 = setMin     // Catch:{ all -> 0x0223 }
            byte r4 = r4[r8]     // Catch:{ all -> 0x0223 }
            byte r4 = (byte) r4     // Catch:{ all -> 0x0223 }
            r5 = 12721(0x31b1, float:1.7826E-41)
            short r5 = (short) r5     // Catch:{ all -> 0x0223 }
            byte[] r6 = setMin     // Catch:{ all -> 0x0223 }
            r22 = 102(0x66, float:1.43E-43)
            byte r6 = r6[r22]     // Catch:{ all -> 0x0223 }
            short r6 = (short) r6     // Catch:{ all -> 0x0223 }
            java.lang.String r4 = length(r4, r5, r6)     // Catch:{ all -> 0x0223 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0223 }
            byte[] r5 = setMin     // Catch:{ all -> 0x0223 }
            r16 = 49
            byte r5 = r5[r16]     // Catch:{ all -> 0x0220 }
            byte r5 = (byte) r5     // Catch:{ all -> 0x0220 }
            r6 = r5 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0220 }
            byte[] r22 = setMin     // Catch:{ all -> 0x0220 }
            r23 = 52
            byte r11 = r22[r23]     // Catch:{ all -> 0x0220 }
            short r11 = (short) r11     // Catch:{ all -> 0x0220 }
            java.lang.String r5 = length(r5, r6, r11)     // Catch:{ all -> 0x0220 }
            r6 = 1
            java.lang.Class[] r11 = new java.lang.Class[r6]     // Catch:{ all -> 0x0220 }
            java.lang.Class r6 = java.lang.Long.TYPE     // Catch:{ all -> 0x0220 }
            r11[r7] = r6     // Catch:{ all -> 0x0220 }
            java.lang.reflect.Method r4 = r4.getMethod(r5, r11)     // Catch:{ all -> 0x0220 }
            r11 = 0
            java.lang.Object r0 = r4.invoke(r11, r0)     // Catch:{ all -> 0x021e }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0457 }
        L_0x0219:
            r1.setMax(r12)     // Catch:{ all -> 0x0457 }
            goto L_0x0304
        L_0x021e:
            r0 = move-exception
            goto L_0x0227
        L_0x0220:
            r0 = move-exception
            r11 = 0
            goto L_0x0227
        L_0x0223:
            r0 = move-exception
            r11 = 0
            r16 = 49
        L_0x0227:
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x0457 }
            if (r4 == 0) goto L_0x022e
            throw r4     // Catch:{ all -> 0x0457 }
        L_0x022e:
            throw r0     // Catch:{ all -> 0x0457 }
        L_0x022f:
            r0 = move-exception
        L_0x0230:
            r11 = 0
            r16 = 49
            goto L_0x0466
        L_0x0235:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r10     // Catch:{ all -> 0x0457 }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.setDrawDivider r0 = (o.setDrawDivider) r0     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0457 }
            java.lang.Long r4 = (java.lang.Long) r4     // Catch:{ all -> 0x0457 }
            o.TitleBarRightButtonView$1 r0 = r0.setLastActiveTimestamp(r4)     // Catch:{ all -> 0x0457 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0219
        L_0x0254:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 19
            goto L_0x045b
        L_0x025c:
            r4 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r4)     // Catch:{ all -> 0x031a }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0457 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0457 }
            throw r0     // Catch:{ all -> 0x0457 }
        L_0x026a:
            r4 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r4)     // Catch:{ all -> 0x031a }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0457 }
            return r0
        L_0x0278:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            o.AppLogContext r0 = new o.AppLogContext     // Catch:{ all -> 0x0457 }
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x031a }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.setEventName r4 = (o.setEventName) r4     // Catch:{ all -> 0x0457 }
            r0.<init>(r4)     // Catch:{ all -> 0x0457 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0219
        L_0x0292:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r10     // Catch:{ all -> 0x0457 }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x0457 }
            o.TitleBarRightButtonView$1 r0 = r0.map(r4)     // Catch:{ all -> 0x0457 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0219
        L_0x02b2:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 44
            goto L_0x045b
        L_0x02bb:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 7
            goto L_0x045b
        L_0x02c3:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            int r0 = getMin     // Catch:{ all -> 0x0457 }
            r1.getMin = r0     // Catch:{ all -> 0x0457 }
        L_0x02cc:
            r1.setMax(r4)     // Catch:{ all -> 0x0457 }
            goto L_0x0304
        L_0x02d0:
            r4 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r4     // Catch:{ all -> 0x031a }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r9)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            setMax = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0304
        L_0x02e3:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 41
            goto L_0x045b
        L_0x02f3:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 1
            goto L_0x045b
        L_0x02fa:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            int r0 = setMax     // Catch:{ all -> 0x0457 }
            r1.getMin = r0     // Catch:{ all -> 0x0457 }
            goto L_0x02cc
        L_0x0304:
            r4 = 1
            goto L_0x045a
        L_0x0307:
            r4 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r4     // Catch:{ all -> 0x031a }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r9)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            getMin = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0304
        L_0x031a:
            r0 = move-exception
            goto L_0x0466
        L_0x031d:
            r0 = 22
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r0)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 74
            goto L_0x045b
        L_0x032f:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 5
            goto L_0x045b
        L_0x0337:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 3
            goto L_0x045b
        L_0x033f:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 123(0x7b, float:1.72E-43)
            goto L_0x045b
        L_0x0348:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 97
            goto L_0x045b
        L_0x0350:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r5)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            r4 = 11
            if (r0 == r4) goto L_0x0367
            r4 = 66
            if (r0 == r4) goto L_0x0363
            goto L_0x0367
        L_0x0363:
            r0 = 42
            goto L_0x045b
        L_0x0367:
            r0 = 120(0x78, float:1.68E-43)
            goto L_0x045b
        L_0x036b:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 94
            goto L_0x045b
        L_0x037b:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 2
            goto L_0x045b
        L_0x0382:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 161(0xa1, float:2.26E-43)
            goto L_0x045b
        L_0x038b:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r6)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 119(0x77, float:1.67E-43)
            goto L_0x045b
        L_0x039b:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 75
            goto L_0x045b
        L_0x03a3:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 154(0x9a, float:2.16E-43)
            goto L_0x045b
        L_0x03ac:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r5)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 == r13) goto L_0x03c1
            r4 = 90
            if (r0 == r4) goto L_0x03bd
            goto L_0x03c1
        L_0x03bd:
            r0 = 124(0x7c, float:1.74E-43)
            goto L_0x045b
        L_0x03c1:
            r0 = 14
            goto L_0x045b
        L_0x03c5:
            r0 = 22
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r0)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 140(0x8c, float:1.96E-43)
            goto L_0x045b
        L_0x03d7:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 23
            goto L_0x045b
        L_0x03df:
            r5 = 1
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.getMin = r5     // Catch:{ all -> 0x0457 }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0457 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0457 }
            r1.getMin = r0     // Catch:{ all -> 0x0457 }
            goto L_0x02cc
        L_0x03f7:
            r0 = 22
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r0)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            if (r0 != 0) goto L_0x045a
            r0 = 145(0x91, float:2.03E-43)
            goto L_0x045b
        L_0x0408:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 95
            goto L_0x045b
        L_0x0410:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 162(0xa2, float:2.27E-43)
            goto L_0x045b
        L_0x0418:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            o.getPageSource r0 = new o.getPageSource     // Catch:{ all -> 0x0457 }
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x031a }
            r1.setMax(r15)     // Catch:{ all -> 0x0457 }
            r1.setMax(r13)     // Catch:{ all -> 0x0457 }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x0457 }
            o.setEventName r4 = (o.setEventName) r4     // Catch:{ all -> 0x0457 }
            r0.<init>(r4)     // Catch:{ all -> 0x0457 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0457 }
            goto L_0x0219
        L_0x0433:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 82
            goto L_0x045b
        L_0x043a:
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r0 = 24
            goto L_0x045b
        L_0x0441:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
            r1.setMax(r5)     // Catch:{ all -> 0x0457 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0457 }
            r4 = 1
            if (r0 == 0) goto L_0x0454
            if (r0 == r4) goto L_0x0451
            goto L_0x0454
        L_0x0451:
            r0 = 126(0x7e, float:1.77E-43)
            goto L_0x045b
        L_0x0454:
            r0 = 146(0x92, float:2.05E-43)
            goto L_0x045b
        L_0x0457:
            r0 = move-exception
            r4 = 1
            goto L_0x0466
        L_0x045a:
            r0 = r14
        L_0x045b:
            r11 = 58
            goto L_0x012d
        L_0x045f:
            r0 = move-exception
            r4 = 1
        L_0x0461:
            r11 = 0
            r16 = 49
            r19 = 4832(0x12e0, float:6.771E-42)
        L_0x0466:
            r5 = 15
            r6 = 13
            if (r14 < r5) goto L_0x0476
            if (r14 > r15) goto L_0x0476
            r5 = 80
            r5 = 97
            r15 = 80
            goto L_0x05ec
        L_0x0476:
            byte[] r5 = setMin
            byte r4 = r5[r8]
            byte r4 = (byte) r4
            r7 = r4 | 4944(0x1350, float:6.928E-42)
            short r7 = (short) r7
            byte r5 = r5[r6]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r4 = length(r4, r7, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x049c
            if (r14 < r12) goto L_0x049c
            r4 = 25
            if (r14 > r4) goto L_0x049c
        L_0x0496:
            r5 = 97
        L_0x0498:
            r15 = 13
            goto L_0x05ec
        L_0x049c:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r7 = 1451(0x5ab, float:2.033E-42)
            short r7 = (short) r7
            r22 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r22]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04c0
            r4 = 44
            if (r14 < r4) goto L_0x04c0
            r4 = 75
            if (r14 > r4) goto L_0x04c2
            goto L_0x0496
        L_0x04c0:
            r4 = 75
        L_0x04c2:
            byte[] r5 = setMin
            byte r4 = r5[r8]
            byte r4 = (byte) r4
            r6 = r4 | 2097(0x831, float:2.939E-42)
            short r6 = (short) r6
            r24 = 9575(0x2567, float:1.3417E-41)
            byte r5 = r5[r24]
            short r5 = (short) r5
            java.lang.String r4 = length(r4, r6, r5)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04e6
            r4 = 69
            if (r14 < r4) goto L_0x04e6
            r4 = 70
            if (r14 > r4) goto L_0x04e6
            goto L_0x0496
        L_0x04e6:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 2097(0x831, float:2.939E-42)
            short r6 = (short) r6
            r24 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r24]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x050d
            r4 = 77
            if (r14 < r4) goto L_0x050d
            r4 = 78
            if (r14 > r4) goto L_0x050d
        L_0x0509:
            r5 = 97
            goto L_0x05ec
        L_0x050d:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 5841(0x16d1, float:8.185E-42)
            short r6 = (short) r6
            r24 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r24]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0531
            r4 = 82
            if (r14 < r4) goto L_0x0533
            r5 = 83
            if (r14 > r5) goto L_0x0533
            goto L_0x0509
        L_0x0531:
            r4 = 82
        L_0x0533:
            byte[] r5 = setMin
            byte r6 = r5[r8]
            byte r6 = (byte) r6
            byte r5 = r5[r22]
            short r5 = (short) r5
            java.lang.String r5 = length(r6, r7, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0553
            r5 = 90
            if (r14 < r5) goto L_0x0553
            r5 = 91
            if (r14 > r5) goto L_0x0553
            goto L_0x0496
        L_0x0553:
            byte[] r5 = setMin
            byte r6 = r5[r8]
            byte r6 = (byte) r6
            r7 = r6 | 976(0x3d0, float:1.368E-42)
            short r7 = (short) r7
            r21 = 54
            byte r5 = r5[r21]
            short r5 = (short) r5
            java.lang.String r5 = length(r6, r7, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x0578
            r5 = 97
            if (r14 < r5) goto L_0x057a
            r6 = 98
            if (r14 > r6) goto L_0x057a
            goto L_0x05ec
        L_0x0578:
            r5 = 97
        L_0x057a:
            byte[] r6 = setMin
            byte r7 = r6[r8]
            byte r7 = (byte) r7
            r4 = r7 | 5841(0x16d1, float:8.185E-42)
            short r4 = (short) r4
            r20 = 1197(0x4ad, float:1.677E-42)
            byte r6 = r6[r20]
            short r6 = (short) r6
            java.lang.String r4 = length(r7, r4, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x059f
            r4 = 114(0x72, float:1.6E-43)
            if (r14 < r4) goto L_0x059f
            r4 = 120(0x78, float:1.68E-43)
            if (r14 > r4) goto L_0x059f
            goto L_0x0498
        L_0x059f:
            r4 = 121(0x79, float:1.7E-43)
            if (r14 < r4) goto L_0x05ac
            r4 = 123(0x7b, float:1.72E-43)
            if (r14 > r4) goto L_0x05ac
            r4 = 79
            r15 = 79
            goto L_0x05ec
        L_0x05ac:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            r7 = 15376(0x3c10, float:2.1546E-41)
            short r7 = (short) r7
            byte r4 = r4[r22]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x05ce
            r4 = 126(0x7e, float:1.77E-43)
            if (r14 < r4) goto L_0x05ce
            r4 = 127(0x7f, float:1.78E-43)
            if (r14 > r4) goto L_0x05ce
            goto L_0x05ec
        L_0x05ce:
            byte[] r4 = setMin
            byte r6 = r4[r8]
            byte r6 = (byte) r6
            byte r4 = r4[r22]
            short r4 = (short) r4
            java.lang.String r4 = length(r6, r7, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x05f7
            r4 = 136(0x88, float:1.9E-43)
            if (r14 < r4) goto L_0x05f7
            r4 = 137(0x89, float:1.92E-43)
            if (r14 > r4) goto L_0x05f7
        L_0x05ec:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r0 = r15
            r7 = 0
            goto L_0x045b
        L_0x05f7:
            throw r0
        L_0x05f8:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0600
            throw r1
        L_0x0600:
            goto L_0x0602
        L_0x0601:
            throw r0
        L_0x0602:
            goto L_0x0601
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.lambda$thenRegister$9(o.setEventName):o.TitleBarRightButtonView$4");
    }

    /* JADX WARNING: Removed duplicated region for block: B:8:0x0021  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static java.lang.String length(short r8, short r9, short r10) {
        /*
            byte[] r0 = setMin
            int r8 = 118 - r8
            int r10 = r10 + 1
            int r9 = 15413 - r9
            byte[] r1 = new byte[r10]
            r2 = 0
            if (r0 != 0) goto L_0x0013
            r8 = r9
            r3 = r1
            r4 = 0
            r1 = r0
            r0 = r10
            goto L_0x002d
        L_0x0013:
            r3 = 0
        L_0x0014:
            int r4 = r3 + 1
            byte r5 = (byte) r8
            r1[r3] = r5
            if (r4 != r10) goto L_0x0021
            java.lang.String r8 = new java.lang.String
            r8.<init>(r1, r2)
            return r8
        L_0x0021:
            int r9 = r9 + 1
            byte r3 = r0[r9]
            r6 = r9
            r9 = r8
            r8 = r6
            r7 = r0
            r0 = r10
            r10 = r3
            r3 = r1
            r1 = r7
        L_0x002d:
            int r10 = -r10
            int r9 = r9 + r10
            r10 = r0
            r0 = r1
            r1 = r3
            r3 = r4
            r6 = r9
            r9 = r8
            r8 = r6
            goto L_0x0014
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.length(short, short, short):java.lang.String");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:154:0x0484, code lost:
        if (r11 <= 130) goto L_0x03bb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x0155, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x0197, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x01db, code lost:
        if (r1.setMin != 57) goto L_0x01dd;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x01dd, code lost:
        r5 = com.google.android.exoplayer2.extractor.ts.TsExtractor.TS_STREAM_TYPE_HDMV_DTS;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:0x01e1, code lost:
        r5 = 30;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.TitleBarRightButtonView.AnonymousClass4<o.setEventName> saveAccount(o.setEventName r24, java.lang.String r25, java.lang.String r26, java.lang.String r27, java.lang.String r28) {
        /*
            r23 = this;
            o.getGroupId r8 = new o.getGroupId
            r1 = r8
            r2 = r23
            r3 = r24
            r4 = r25
            r5 = r26
            r6 = r27
            r7 = r28
            r1.<init>(r2, r3, r4, r5, r6, r7)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 7444(0x1d14, float:1.0431E-41)
            short r1 = (short) r1
            r2 = 542(0x21e, float:7.6E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x051e }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x051e }
            byte[] r1 = setMin     // Catch:{ all -> 0x051e }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x051e }
            byte r1 = (byte) r1     // Catch:{ all -> 0x051e }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x051e }
            byte[] r9 = setMin     // Catch:{ all -> 0x051e }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x051e }
            short r9 = (short) r9     // Catch:{ all -> 0x051e }
            java.lang.String r1 = length(r1, r7, r9)     // Catch:{ all -> 0x051e }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x051e }
            byte[] r9 = setMin     // Catch:{ all -> 0x051e }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x051e }
            byte r9 = (byte) r9     // Catch:{ all -> 0x051e }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x051e }
            byte[] r12 = setMin     // Catch:{ all -> 0x051e }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x051e }
            short r12 = (short) r12     // Catch:{ all -> 0x051e }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x051e }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x051e }
            byte[] r12 = setMin     // Catch:{ all -> 0x051e }
            byte r12 = r12[r6]     // Catch:{ all -> 0x051e }
            byte r12 = (byte) r12     // Catch:{ all -> 0x051e }
            byte[] r13 = setMin     // Catch:{ all -> 0x051e }
            byte r13 = r13[r10]     // Catch:{ all -> 0x051e }
            short r13 = (short) r13     // Catch:{ all -> 0x051e }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x051e }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x051e }
            r11[r5] = r12     // Catch:{ all -> 0x051e }
            java.lang.reflect.Method r1 = r1.getMethod(r9, r11)     // Catch:{ all -> 0x051e }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x051e }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x051e }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008c:
            int r9 = r0.length
            if (r3 >= r9) goto L_0x012f
            r9 = r0[r3]
            java.lang.Object[] r11 = new java.lang.Object[r2]     // Catch:{ all -> 0x0126 }
            r11[r5] = r9     // Catch:{ all -> 0x0126 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0126 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x0126 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0126 }
            r12 = 14246(0x37a6, float:1.9963E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0126 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0126 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0126 }
            short r13 = (short) r13     // Catch:{ all -> 0x0126 }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x0126 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0126 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0126 }
            byte r13 = r13[r4]     // Catch:{ all -> 0x0126 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0126 }
            r14 = r13 | 1470(0x5be, float:2.06E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0126 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0126 }
            r16 = 52
            byte r15 = r15[r16]     // Catch:{ all -> 0x0126 }
            short r15 = (short) r15     // Catch:{ all -> 0x0126 }
            java.lang.String r13 = length(r13, r14, r15)     // Catch:{ all -> 0x0126 }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x0126 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0126 }
            byte r15 = r15[r6]     // Catch:{ all -> 0x0126 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0126 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0126 }
            byte r4 = r16[r10]     // Catch:{ all -> 0x0126 }
            short r4 = (short) r4     // Catch:{ all -> 0x0126 }
            java.lang.String r4 = length(r15, r7, r4)     // Catch:{ all -> 0x0126 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0126 }
            r14[r5] = r4     // Catch:{ all -> 0x0126 }
            java.lang.reflect.Method r4 = r9.getMethod(r13, r14)     // Catch:{ all -> 0x0126 }
            r9 = 0
            java.lang.Object r4 = r4.invoke(r9, r11)     // Catch:{ all -> 0x0126 }
            byte[] r11 = setMin     // Catch:{ all -> 0x011d }
            byte r11 = r11[r6]     // Catch:{ all -> 0x011d }
            byte r11 = (byte) r11     // Catch:{ all -> 0x011d }
            byte[] r13 = setMin     // Catch:{ all -> 0x011d }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r13 = r13[r14]     // Catch:{ all -> 0x011d }
            short r13 = (short) r13     // Catch:{ all -> 0x011d }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x011d }
            java.lang.Class r11 = java.lang.Class.forName(r11)     // Catch:{ all -> 0x011d }
            byte[] r12 = setMin     // Catch:{ all -> 0x011d }
            r13 = 102(0x66, float:1.43E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x011d }
            byte r12 = (byte) r12     // Catch:{ all -> 0x011d }
            r13 = 1464(0x5b8, float:2.052E-42)
            short r13 = (short) r13     // Catch:{ all -> 0x011d }
            byte[] r14 = setMin     // Catch:{ all -> 0x011d }
            r15 = 11
            byte r14 = r14[r15]     // Catch:{ all -> 0x011d }
            short r14 = (short) r14     // Catch:{ all -> 0x011d }
            java.lang.String r12 = length(r12, r13, r14)     // Catch:{ all -> 0x011d }
            java.lang.reflect.Method r11 = r11.getMethod(r12, r9)     // Catch:{ all -> 0x011d }
            java.lang.Object r4 = r11.invoke(r4, r9)     // Catch:{ all -> 0x011d }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x011d }
            int r4 = r4.intValue()     // Catch:{ all -> 0x011d }
            r1[r3] = r4
            int r3 = r3 + 1
            r4 = 49
            goto L_0x008c
        L_0x011d:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0125
            throw r1
        L_0x0125:
            throw r0
        L_0x0126:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x012e
            throw r1
        L_0x012e:
            throw r0
        L_0x012f:
            r3 = 60
            r7 = 106(0x6a, float:1.49E-43)
            r9 = 33
        L_0x0135:
            int r11 = r5 + 1
            r0 = r1[r5]     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMax(r0)     // Catch:{ all -> 0x0391 }
            r5 = 10
            r13 = 34
            r14 = 22
            r15 = 24
            r12 = 18
            r4 = 23
            switch(r0) {
                case -49: goto L_0x038b;
                case -48: goto L_0x036f;
                case -47: goto L_0x036b;
                case -46: goto L_0x0367;
                case -45: goto L_0x035a;
                case -44: goto L_0x0340;
                case -43: goto L_0x033c;
                case -42: goto L_0x0338;
                case -41: goto L_0x0326;
                case -40: goto L_0x0303;
                case -39: goto L_0x02fd;
                case -38: goto L_0x02e9;
                case -37: goto L_0x02e5;
                case -36: goto L_0x02e1;
                case -35: goto L_0x02d4;
                case -34: goto L_0x02d0;
                case -33: goto L_0x02bd;
                case -32: goto L_0x02b9;
                case -31: goto L_0x02b5;
                case -30: goto L_0x02a8;
                case -29: goto L_0x0296;
                case -28: goto L_0x0284;
                case -27: goto L_0x0280;
                case -26: goto L_0x027c;
                case -25: goto L_0x0278;
                case -24: goto L_0x026b;
                case -23: goto L_0x025e;
                case -22: goto L_0x025a;
                case -21: goto L_0x0245;
                case -20: goto L_0x01f8;
                case -19: goto L_0x01e7;
                case -18: goto L_0x01d4;
                case -17: goto L_0x01d0;
                case -16: goto L_0x01cc;
                case -15: goto L_0x01bf;
                case -14: goto L_0x01af;
                case -13: goto L_0x01aa;
                case -12: goto L_0x01a2;
                case -11: goto L_0x019f;
                case -10: goto L_0x019c;
                case -9: goto L_0x0187;
                case -8: goto L_0x0184;
                case -7: goto L_0x017c;
                case -6: goto L_0x0179;
                case -5: goto L_0x0176;
                case -4: goto L_0x016a;
                case -3: goto L_0x015a;
                case -2: goto L_0x0151;
                case -1: goto L_0x014e;
                default: goto L_0x014c;
            }     // Catch:{ all -> 0x0391 }
        L_0x014c:
            goto L_0x038e
        L_0x014e:
            r5 = 95
            goto L_0x0135
        L_0x0151:
            int r0 = setMax     // Catch:{ all -> 0x0391 }
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
        L_0x0155:
            r8.setMax(r5)     // Catch:{ all -> 0x0391 }
            goto L_0x038e
        L_0x015a:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r0 = 19
            r8.setMax(r0)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            getMin = r0     // Catch:{ all -> 0x0391 }
            goto L_0x038e
        L_0x016a:
            r8.setMax(r14)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 26
            r5 = 26
            goto L_0x0135
        L_0x0176:
            r5 = 94
            goto L_0x0135
        L_0x0179:
            r5 = 35
            goto L_0x0135
        L_0x017c:
            r8.setMax(r2)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0391 }
            throw r0     // Catch:{ all -> 0x0391 }
        L_0x0184:
            r5 = 60
            goto L_0x0135
        L_0x0187:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.TitleBarRightButtonView$1 r0 = o.TitleBarRightButtonView.AnonymousClass1.just(r0)     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
        L_0x0197:
            r8.setMax(r15)     // Catch:{ all -> 0x0391 }
            goto L_0x038e
        L_0x019c:
            r5 = 72
            goto L_0x0135
        L_0x019f:
            r5 = 71
            goto L_0x0135
        L_0x01a2:
            r8.setMax(r2)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.TitleBarRightButtonView$4 r0 = (o.TitleBarRightButtonView.AnonymousClass4) r0     // Catch:{ all -> 0x0391 }
            return r0
        L_0x01aa:
            int r0 = getMin     // Catch:{ all -> 0x0391 }
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0155
        L_0x01af:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r0 = 19
            r8.setMax(r0)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            setMax = r0     // Catch:{ all -> 0x0391 }
            goto L_0x038e
        L_0x01bf:
            r8.setMax(r9)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 59
            r5 = 59
            goto L_0x0135
        L_0x01cc:
            r5 = 146(0x92, float:2.05E-43)
            goto L_0x0135
        L_0x01d0:
            r5 = 138(0x8a, float:1.93E-43)
            goto L_0x0135
        L_0x01d4:
            r8.setMax(r13)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            r4 = 57
            if (r0 == r4) goto L_0x01e1
        L_0x01dd:
            r5 = 130(0x82, float:1.82E-43)
            goto L_0x0135
        L_0x01e1:
            r0 = 30
            r5 = 30
            goto L_0x0135
        L_0x01e7:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0391 }
            java.lang.String r0 = r0.sessionId     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x01f8:
            r0 = 7
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r16 = r0
            o.setDrawDivider r16 = (o.setDrawDivider) r16     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r17 = r0
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r18 = r0
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0391 }
            o.TitleBarRightButtonView$1 r0 = r16.saveAccount(r17, r18, r19, r20, r21, r22)     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x0245:
            o.AppLogger r0 = new o.AppLogger     // Catch:{ all -> 0x0391 }
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r4 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.setEventName r4 = (o.setEventName) r4     // Catch:{ all -> 0x0391 }
            r0.<init>(r4)     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x025a:
            r5 = 115(0x73, float:1.61E-43)
            goto L_0x0135
        L_0x025e:
            r8.setMax(r13)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            r4 = 41
            if (r0 == r4) goto L_0x01dd
            if (r0 == r10) goto L_0x01e1
            goto L_0x01dd
        L_0x026b:
            r8.setMax(r9)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 93
            r5 = 93
            goto L_0x0135
        L_0x0278:
            r5 = 108(0x6c, float:1.51E-43)
            goto L_0x0135
        L_0x027c:
            r5 = 143(0x8f, float:2.0E-43)
            goto L_0x0135
        L_0x0280:
            r5 = 37
            goto L_0x0135
        L_0x0284:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0391 }
            boolean r0 = r0.success     // Catch:{ all -> 0x0391 }
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0155
        L_0x0296:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0391 }
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0155
        L_0x02a8:
            r8.setMax(r14)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 105(0x69, float:1.47E-43)
            r5 = 105(0x69, float:1.47E-43)
            goto L_0x0135
        L_0x02b5:
            r5 = 154(0x9a, float:2.16E-43)
            goto L_0x0135
        L_0x02b9:
            r5 = 28
            goto L_0x0135
        L_0x02bd:
            r8.setMax(r13)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 == 0) goto L_0x02ca
            r0 = 149(0x95, float:2.09E-43)
            r5 = 149(0x95, float:2.09E-43)
            goto L_0x0135
        L_0x02ca:
            r0 = 98
            r5 = 98
            goto L_0x0135
        L_0x02d0:
            r5 = 142(0x8e, float:1.99E-43)
            goto L_0x0135
        L_0x02d4:
            r8.setMax(r14)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 129(0x81, float:1.81E-43)
            r5 = 129(0x81, float:1.81E-43)
            goto L_0x0135
        L_0x02e1:
            r5 = 148(0x94, float:2.07E-43)
            goto L_0x0135
        L_0x02e5:
            r5 = 156(0x9c, float:2.19E-43)
            goto L_0x0135
        L_0x02e9:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0391 }
            o.setDrawDivider r0 = r0.createAccountData()     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x02fd:
            java.lang.String r0 = "save after register"
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x0303:
            r0 = 3
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r5 = r8.isInside     // Catch:{ all -> 0x0391 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r4 = r8.isInside     // Catch:{ all -> 0x0391 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ all -> 0x0391 }
            java.lang.String r0 = r0.getPhoneNumber(r5, r4)     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x0326:
            r8.getMin = r2     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.setEventName r0 = (o.setEventName) r0     // Catch:{ all -> 0x0391 }
            java.lang.String r0 = r0.userId     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x0338:
            r5 = 63
            goto L_0x0135
        L_0x033c:
            r5 = 106(0x6a, float:1.49E-43)
            goto L_0x0135
        L_0x0340:
            r8.setMax(r13)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            r4 = 78
            if (r0 == r4) goto L_0x0354
            r4 = 91
            if (r0 == r4) goto L_0x034e
            goto L_0x0354
        L_0x034e:
            r0 = 61
            r5 = 61
            goto L_0x0135
        L_0x0354:
            r0 = 110(0x6e, float:1.54E-43)
            r5 = 110(0x6e, float:1.54E-43)
            goto L_0x0135
        L_0x035a:
            r8.setMax(r14)     // Catch:{ all -> 0x0391 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0391 }
            if (r0 != 0) goto L_0x038e
            r0 = 153(0x99, float:2.14E-43)
            r5 = 153(0x99, float:2.14E-43)
            goto L_0x0135
        L_0x0367:
            r5 = 140(0x8c, float:1.96E-43)
            goto L_0x0135
        L_0x036b:
            r5 = 33
            goto L_0x0135
        L_0x036f:
            r0 = 2
            r8.getMin = r0     // Catch:{ all -> 0x0391 }
            r8.setMax(r12)     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0391 }
            r8.setMax(r4)     // Catch:{ all -> 0x0391 }
            java.lang.Object r4 = r8.isInside     // Catch:{ all -> 0x0391 }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x0391 }
            o.TitleBarRightButtonView$1 r0 = r0.map(r4)     // Catch:{ all -> 0x0391 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0391 }
            goto L_0x0197
        L_0x038b:
            r5 = 1
            goto L_0x0135
        L_0x038e:
            r5 = r11
            goto L_0x0135
        L_0x0391:
            r0 = move-exception
            byte[] r4 = setMin
            byte r5 = r4[r6]
            byte r5 = (byte) r5
            r12 = 1451(0x5ab, float:2.033E-42)
            short r12 = (short) r12
            r13 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r12, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            r5 = 158(0x9e, float:2.21E-43)
            r14 = 145(0x91, float:2.03E-43)
            if (r4 == 0) goto L_0x03bf
            r4 = 31
            if (r11 < r4) goto L_0x03bf
            r4 = 32
            if (r11 > r4) goto L_0x03bf
        L_0x03b9:
            r2 = 115(0x73, float:1.61E-43)
        L_0x03bb:
            r5 = 145(0x91, float:2.03E-43)
            goto L_0x0511
        L_0x03bf:
            byte[] r4 = setMin
            byte r15 = r4[r6]
            byte r15 = (byte) r15
            r2 = 15376(0x3c10, float:2.1546E-41)
            short r2 = (short) r2
            byte r4 = r4[r13]
            short r4 = (short) r4
            java.lang.String r4 = length(r15, r2, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x03e2
            r4 = 37
            if (r11 < r4) goto L_0x03e2
            if (r11 > r3) goto L_0x03e2
            r2 = 115(0x73, float:1.61E-43)
            goto L_0x0511
        L_0x03e2:
            byte[] r4 = setMin
            byte r15 = r4[r6]
            byte r15 = (byte) r15
            r3 = 9099(0x238b, float:1.275E-41)
            short r3 = (short) r3
            r16 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r16]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r15, r3, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0407
            r4 = 55
            if (r11 < r4) goto L_0x0407
            r4 = 56
            if (r11 > r4) goto L_0x0407
            goto L_0x03b9
        L_0x0407:
            byte[] r4 = setMin
            byte r15 = r4[r6]
            byte r15 = (byte) r15
            r16 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r16]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r3 = length(r15, r3, r4)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0427
            if (r11 < r6) goto L_0x0427
            r3 = 73
            if (r11 > r3) goto L_0x0427
            goto L_0x03b9
        L_0x0427:
            r3 = 100
            if (r11 < r3) goto L_0x0435
            if (r11 > r7) goto L_0x0435
            r2 = 107(0x6b, float:1.5E-43)
            r2 = 115(0x73, float:1.61E-43)
            r5 = 107(0x6b, float:1.5E-43)
            goto L_0x0511
        L_0x0435:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r15 = r4 | 2097(0x831, float:2.939E-42)
            short r15 = (short) r15
            r16 = 9575(0x2567, float:1.3417E-41)
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x0458
            r3 = 99
            if (r11 < r3) goto L_0x0458
            if (r11 > r7) goto L_0x0458
            goto L_0x03b9
        L_0x0458:
            r3 = 111(0x6f, float:1.56E-43)
            if (r11 < r3) goto L_0x0468
            r3 = 115(0x73, float:1.61E-43)
            if (r11 > r3) goto L_0x0468
            r2 = 27
            r2 = 115(0x73, float:1.61E-43)
            r5 = 27
            goto L_0x0511
        L_0x0468:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            byte r3 = r3[r13]
            short r3 = (short) r3
            java.lang.String r2 = length(r4, r2, r3)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0488
            r2 = 115(0x73, float:1.61E-43)
            if (r11 < r2) goto L_0x048a
            r3 = 130(0x82, float:1.82E-43)
            if (r11 > r3) goto L_0x048a
        L_0x0486:
            goto L_0x03bb
        L_0x0488:
            r2 = 115(0x73, float:1.61E-43)
        L_0x048a:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r15 = r4 | 2097(0x831, float:2.939E-42)
            short r15 = (short) r15
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r15, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x04ac
            r3 = 124(0x7c, float:1.74E-43)
            if (r11 < r3) goto L_0x04ac
            r3 = 130(0x82, float:1.82E-43)
            if (r11 > r3) goto L_0x04ac
            goto L_0x0486
        L_0x04ac:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r14 = r4 | 2097(0x831, float:2.939E-42)
            short r14 = (short) r14
            byte r3 = r3[r16]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r14, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x04ce
            r3 = 133(0x85, float:1.86E-43)
            if (r11 < r3) goto L_0x04ce
            r3 = 134(0x86, float:1.88E-43)
            if (r11 > r3) goto L_0x04ce
            goto L_0x0511
        L_0x04ce:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r15 = 55
            byte r3 = r3[r15]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r14, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x04f3
            r3 = 136(0x88, float:1.9E-43)
            if (r11 < r3) goto L_0x04f3
            r3 = 137(0x89, float:1.92E-43)
            if (r11 > r3) goto L_0x04f3
            goto L_0x0511
        L_0x04f3:
            byte[] r3 = setMin
            byte r4 = r3[r6]
            byte r4 = (byte) r4
            byte r3 = r3[r13]
            short r3 = (short) r3
            java.lang.String r3 = length(r4, r12, r3)
            java.lang.Class r3 = java.lang.Class.forName(r3)
            boolean r3 = r3.isInstance(r0)
            if (r3 == 0) goto L_0x051d
            r3 = 150(0x96, float:2.1E-43)
            if (r11 < r3) goto L_0x051d
            r3 = 154(0x9a, float:2.16E-43)
            if (r11 > r3) goto L_0x051d
        L_0x0511:
            r8.IsOverlapping = r0
            r0 = 35
            r8.setMax(r0)
            r2 = 1
            r3 = 60
            goto L_0x0135
        L_0x051d:
            throw r0
        L_0x051e:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0526
            throw r1
        L_0x0526:
            goto L_0x0528
        L_0x0527:
            throw r0
        L_0x0528:
            goto L_0x0527
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.saveAccount(o.setEventName, java.lang.String, java.lang.String, java.lang.String, java.lang.String):o.TitleBarRightButtonView$4");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x01a6, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x01b6, code lost:
        r1.setMax(10);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private o.TitleBarRightButtonView.AnonymousClass1<java.lang.Boolean> thenRegister(java.lang.String r25, java.lang.String r26, java.lang.String r27, java.lang.String r28, java.lang.String r29, java.lang.String r30) {
        /*
            r24 = this;
            o.getGroupId r9 = new o.getGroupId
            r1 = r9
            r2 = r24
            r3 = r25
            r4 = r26
            r5 = r27
            r6 = r28
            r7 = r29
            r8 = r30
            r1.<init>(r2, r3, r4, r5, r6, r7, r8)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 14621(0x391d, float:2.0488E-41)
            short r1 = (short) r1
            r2 = 360(0x168, float:5.04E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x03c6 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x03c6 }
            byte[] r1 = setMin     // Catch:{ all -> 0x03c6 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x03c6 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x03c6 }
            r7 = 2790(0xae6, float:3.91E-42)
            short r7 = (short) r7     // Catch:{ all -> 0x03c6 }
            byte[] r8 = setMin     // Catch:{ all -> 0x03c6 }
            r10 = 58
            byte r8 = r8[r10]     // Catch:{ all -> 0x03c6 }
            short r8 = (short) r8     // Catch:{ all -> 0x03c6 }
            java.lang.String r1 = length(r1, r7, r8)     // Catch:{ all -> 0x03c6 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x03c6 }
            byte[] r8 = setMin     // Catch:{ all -> 0x03c6 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r8 = r8[r11]     // Catch:{ all -> 0x03c6 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x03c6 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x03c6 }
            byte[] r12 = setMin     // Catch:{ all -> 0x03c6 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x03c6 }
            short r12 = (short) r12     // Catch:{ all -> 0x03c6 }
            java.lang.String r8 = length(r8, r11, r12)     // Catch:{ all -> 0x03c6 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x03c6 }
            byte[] r12 = setMin     // Catch:{ all -> 0x03c6 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x03c6 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x03c6 }
            byte[] r13 = setMin     // Catch:{ all -> 0x03c6 }
            byte r13 = r13[r10]     // Catch:{ all -> 0x03c6 }
            short r13 = (short) r13     // Catch:{ all -> 0x03c6 }
            java.lang.String r12 = length(r12, r7, r13)     // Catch:{ all -> 0x03c6 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x03c6 }
            r11[r5] = r12     // Catch:{ all -> 0x03c6 }
            java.lang.reflect.Method r1 = r1.getMethod(r8, r11)     // Catch:{ all -> 0x03c6 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x03c6 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x03c6 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008e:
            int r8 = r0.length
            r11 = 102(0x66, float:1.43E-43)
            if (r3 >= r8) goto L_0x0132
            r8 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x0129 }
            r12[r5] = r8     // Catch:{ all -> 0x0129 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0129 }
            byte r8 = r8[r6]     // Catch:{ all -> 0x0129 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0129 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0129 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0129 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0129 }
            short r14 = (short) r14     // Catch:{ all -> 0x0129 }
            java.lang.String r8 = length(r8, r13, r14)     // Catch:{ all -> 0x0129 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0129 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0129 }
            byte r14 = r14[r4]     // Catch:{ all -> 0x0129 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0129 }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            r17 = 52
            byte r4 = r16[r17]     // Catch:{ all -> 0x0129 }
            short r4 = (short) r4     // Catch:{ all -> 0x0129 }
            java.lang.String r4 = length(r14, r15, r4)     // Catch:{ all -> 0x0129 }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x0129 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0129 }
            byte r15 = r15[r6]     // Catch:{ all -> 0x0129 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            byte r2 = r16[r10]     // Catch:{ all -> 0x0129 }
            short r2 = (short) r2     // Catch:{ all -> 0x0129 }
            java.lang.String r2 = length(r15, r7, r2)     // Catch:{ all -> 0x0129 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0129 }
            r14[r5] = r2     // Catch:{ all -> 0x0129 }
            java.lang.reflect.Method r2 = r8.getMethod(r4, r14)     // Catch:{ all -> 0x0129 }
            r4 = 0
            java.lang.Object r2 = r2.invoke(r4, r12)     // Catch:{ all -> 0x0129 }
            byte[] r8 = setMin     // Catch:{ all -> 0x0120 }
            byte r8 = r8[r6]     // Catch:{ all -> 0x0120 }
            byte r8 = (byte) r8     // Catch:{ all -> 0x0120 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0120 }
            r14 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r14]     // Catch:{ all -> 0x0120 }
            short r12 = (short) r12     // Catch:{ all -> 0x0120 }
            java.lang.String r8 = length(r8, r13, r12)     // Catch:{ all -> 0x0120 }
            java.lang.Class r8 = java.lang.Class.forName(r8)     // Catch:{ all -> 0x0120 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0120 }
            byte r11 = r12[r11]     // Catch:{ all -> 0x0120 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0120 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0120 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0120 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0120 }
            short r13 = (short) r13     // Catch:{ all -> 0x0120 }
            java.lang.String r11 = length(r11, r12, r13)     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r8 = r8.getMethod(r11, r4)     // Catch:{ all -> 0x0120 }
            java.lang.Object r2 = r8.invoke(r2, r4)     // Catch:{ all -> 0x0120 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x0120 }
            int r2 = r2.intValue()     // Catch:{ all -> 0x0120 }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            goto L_0x008e
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0131
            throw r1
        L_0x0131:
            throw r0
        L_0x0132:
            r2 = 53
            r3 = 56
            r4 = 34
            r7 = 15
            r8 = 75
        L_0x013c:
            int r10 = r5 + 1
            r13 = 99
            r0 = r1[r5]     // Catch:{ all -> 0x028e }
            int r0 = r9.setMax(r0)     // Catch:{ all -> 0x028e }
            r5 = 2
            r14 = 33
            r15 = 24
            r11 = 18
            r12 = 23
            switch(r0) {
                case -26: goto L_0x0286;
                case -25: goto L_0x027a;
                case -24: goto L_0x0277;
                case -23: goto L_0x0274;
                case -22: goto L_0x0266;
                case -21: goto L_0x0256;
                case -20: goto L_0x0250;
                case -19: goto L_0x024d;
                case -18: goto L_0x024a;
                case -17: goto L_0x022f;
                case -16: goto L_0x021b;
                case -15: goto L_0x0217;
                case -14: goto L_0x01fd;
                case -13: goto L_0x01f9;
                case -12: goto L_0x01f0;
                case -11: goto L_0x01ec;
                case -10: goto L_0x01e3;
                case -9: goto L_0x01df;
                case -8: goto L_0x01db;
                case -7: goto L_0x01ce;
                case -6: goto L_0x01bd;
                case -5: goto L_0x01b2;
                case -4: goto L_0x01af;
                case -3: goto L_0x01ab;
                case -2: goto L_0x0158;
                case -1: goto L_0x0154;
                default: goto L_0x0152;
            }     // Catch:{ all -> 0x028e }
        L_0x0152:
            goto L_0x0289
        L_0x0154:
            r5 = 53
            goto L_0x028a
        L_0x0158:
            o.log r0 = new o.log     // Catch:{ all -> 0x028e }
            r5 = 7
            r9.getMin = r5     // Catch:{ all -> 0x028e }
            r9.setMax(r11)     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r17 = r5
            o.lock r17 = (o.lock) r17     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r18 = r5
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r19 = r5
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r20 = r5
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r21 = r5
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r22 = r5
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            r23 = r5
            java.lang.String r23 = (java.lang.String) r23     // Catch:{ all -> 0x028e }
            r16 = r0
            r16.<init>(r17, r18, r19, r20, r21, r22, r23)     // Catch:{ all -> 0x028e }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x028e }
        L_0x01a6:
            r9.setMax(r15)     // Catch:{ all -> 0x028e }
            goto L_0x0289
        L_0x01ab:
            r5 = 56
            goto L_0x028a
        L_0x01af:
            r5 = 1
            goto L_0x028a
        L_0x01b2:
            int r0 = getMin     // Catch:{ all -> 0x028e }
            r9.getMin = r0     // Catch:{ all -> 0x028e }
        L_0x01b6:
            r0 = 10
            r9.setMax(r0)     // Catch:{ all -> 0x028e }
            goto L_0x0289
        L_0x01bd:
            r5 = 1
            r9.getMin = r5     // Catch:{ all -> 0x028e }
            r9.setMax(r11)     // Catch:{ all -> 0x028e }
            r0 = 19
            r9.setMax(r0)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            setMax = r0     // Catch:{ all -> 0x028e }
            goto L_0x0289
        L_0x01ce:
            r9.setMax(r14)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            if (r0 != 0) goto L_0x0289
            r0 = 31
            r5 = 31
            goto L_0x028a
        L_0x01db:
            r5 = 102(0x66, float:1.43E-43)
            goto L_0x028a
        L_0x01df:
            r5 = 9
            goto L_0x028a
        L_0x01e3:
            r5 = 1
            r9.setMax(r5)     // Catch:{ all -> 0x028e }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x028e }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x028e }
            return r0
        L_0x01ec:
            r5 = 47
            goto L_0x028a
        L_0x01f0:
            r5 = 1
            r9.setMax(r5)     // Catch:{ all -> 0x028e }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x028e }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x028e }
            throw r0     // Catch:{ all -> 0x028e }
        L_0x01f9:
            r5 = 40
            goto L_0x028a
        L_0x01fd:
            r9.getMin = r5     // Catch:{ all -> 0x028e }
            r9.setMax(r11)     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x028e }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ all -> 0x028e }
            o.TitleBarRightButtonView$1 r0 = r0.getLocationSubdivisionBasedOnReferralCode(r5)     // Catch:{ all -> 0x028e }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x028e }
            goto L_0x01a6
        L_0x0217:
            r5 = 15
            goto L_0x028a
        L_0x021b:
            r9.setMax(r4)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            r5 = 92
            if (r0 == r5) goto L_0x022c
            if (r0 == r13) goto L_0x0227
            goto L_0x022c
        L_0x0227:
            r0 = 48
            r5 = 48
            goto L_0x028a
        L_0x022c:
            r5 = 100
            goto L_0x028a
        L_0x022f:
            r9.getMin = r5     // Catch:{ all -> 0x028e }
            r9.setMax(r11)     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r0 = r9.isInside     // Catch:{ all -> 0x028e }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x028e }
            r9.setMax(r12)     // Catch:{ all -> 0x028e }
            java.lang.Object r5 = r9.isInside     // Catch:{ all -> 0x028e }
            o.RedDotDrawable r5 = (o.RedDotDrawable) r5     // Catch:{ all -> 0x028e }
            o.TitleBarRightButtonView$1 r0 = r0.switchMap(r5)     // Catch:{ all -> 0x028e }
            r9.IsOverlapping = r0     // Catch:{ all -> 0x028e }
            goto L_0x01a6
        L_0x024a:
            r5 = 32
            goto L_0x028a
        L_0x024d:
            r5 = 75
            goto L_0x028a
        L_0x0250:
            int r0 = setMax     // Catch:{ all -> 0x028e }
            r9.getMin = r0     // Catch:{ all -> 0x028e }
            goto L_0x01b6
        L_0x0256:
            r5 = 1
            r9.getMin = r5     // Catch:{ all -> 0x028e }
            r9.setMax(r11)     // Catch:{ all -> 0x028e }
            r0 = 19
            r9.setMax(r0)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            getMin = r0     // Catch:{ all -> 0x028e }
            goto L_0x0289
        L_0x0266:
            r0 = 22
            r9.setMax(r0)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            if (r0 != 0) goto L_0x0289
            r0 = 74
            r5 = 74
            goto L_0x028a
        L_0x0274:
            r5 = 36
            goto L_0x028a
        L_0x0277:
            r5 = 34
            goto L_0x028a
        L_0x027a:
            r9.setMax(r14)     // Catch:{ all -> 0x028e }
            int r0 = r9.setMin     // Catch:{ all -> 0x028e }
            if (r0 != 0) goto L_0x0289
            r0 = 98
            r5 = 98
            goto L_0x028a
        L_0x0286:
            r5 = 39
            goto L_0x028a
        L_0x0289:
            r5 = r10
        L_0x028a:
            r11 = 102(0x66, float:1.43E-43)
            goto L_0x013c
        L_0x028e:
            r0 = move-exception
            byte[] r5 = setMin
            byte r11 = r5[r6]
            byte r11 = (byte) r11
            r12 = r11 | 976(0x3d0, float:1.368E-42)
            short r12 = (short) r12
            r14 = 54
            byte r5 = r5[r14]
            short r5 = (short) r5
            java.lang.String r5 = length(r11, r12, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02b5
            if (r10 < r7) goto L_0x02b5
            r5 = 16
            if (r10 > r5) goto L_0x02b5
        L_0x02b0:
            r5 = 99
        L_0x02b2:
            r11 = 1
            goto L_0x03ba
        L_0x02b5:
            byte[] r5 = setMin
            byte r11 = r5[r6]
            byte r11 = (byte) r11
            r12 = 14230(0x3796, float:1.994E-41)
            short r12 = (short) r12
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r5 = r5[r15]
            r16 = 1
            int r5 = r5 + -1
            short r5 = (short) r5
            java.lang.String r5 = length(r11, r12, r5)
            java.lang.Class r5 = java.lang.Class.forName(r5)
            boolean r5 = r5.isInstance(r0)
            if (r5 == 0) goto L_0x02dd
            r5 = 27
            if (r10 < r5) goto L_0x02dd
            r5 = 28
            if (r10 > r5) goto L_0x02dd
            goto L_0x02b0
        L_0x02dd:
            r5 = 49
            if (r10 < r5) goto L_0x02e6
            if (r10 > r2) goto L_0x02e6
            r5 = 38
            goto L_0x02b2
        L_0x02e6:
            byte[] r5 = setMin
            byte r11 = r5[r6]
            byte r11 = (byte) r11
            r2 = 963(0x3c3, float:1.35E-42)
            short r2 = (short) r2
            r16 = 55
            byte r5 = r5[r16]
            int r5 = -r5
            short r5 = (short) r5
            java.lang.String r2 = length(r11, r2, r5)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x030d
            r2 = 48
            if (r10 < r2) goto L_0x030d
            r2 = 49
            if (r10 > r2) goto L_0x030f
            r5 = 103(0x67, float:1.44E-43)
            goto L_0x02b2
        L_0x030d:
            r2 = 49
        L_0x030f:
            byte[] r5 = setMin
            byte r11 = r5[r6]
            byte r11 = (byte) r11
            r2 = r11 | 976(0x3d0, float:1.368E-42)
            short r2 = (short) r2
            byte r5 = r5[r14]
            short r5 = (short) r5
            java.lang.String r2 = length(r11, r2, r5)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x032f
            if (r10 < r3) goto L_0x032f
            r2 = 57
            if (r10 > r2) goto L_0x032f
            goto L_0x02b0
        L_0x032f:
            byte[] r2 = setMin
            byte r2 = r2[r6]
            byte r2 = (byte) r2
            r5 = 15410(0x3c32, float:2.1594E-41)
            short r5 = (short) r5
            r11 = r5 & 239(0xef, float:3.35E-43)
            short r11 = (short) r11
            java.lang.String r2 = length(r2, r5, r11)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0350
            r2 = 70
            if (r10 < r2) goto L_0x0350
            if (r10 > r8) goto L_0x0350
            goto L_0x02b0
        L_0x0350:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r11 = r5 | 5841(0x16d1, float:8.185E-42)
            short r11 = (short) r11
            r14 = 1197(0x4ad, float:1.677E-42)
            byte r2 = r2[r14]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0371
            if (r10 < r8) goto L_0x0371
            if (r10 > r13) goto L_0x0371
            goto L_0x02b0
        L_0x0371:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            r11 = r5 | 5841(0x16d1, float:8.185E-42)
            short r11 = (short) r11
            r14 = 1197(0x4ad, float:1.677E-42)
            byte r2 = r2[r14]
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0396
            r2 = 94
            if (r10 < r2) goto L_0x0396
            r2 = 95
            if (r10 > r2) goto L_0x0396
            goto L_0x02b0
        L_0x0396:
            byte[] r2 = setMin
            byte r5 = r2[r6]
            byte r5 = (byte) r5
            byte r2 = r2[r15]
            r11 = 1
            int r2 = r2 - r11
            short r2 = (short) r2
            java.lang.String r2 = length(r5, r12, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x03c5
            r2 = 100
            if (r10 < r2) goto L_0x03c5
            r2 = 101(0x65, float:1.42E-43)
            if (r10 > r2) goto L_0x03c5
            r2 = 103(0x67, float:1.44E-43)
            r5 = 103(0x67, float:1.44E-43)
        L_0x03ba:
            r9.IsOverlapping = r0
            r0 = 35
            r9.setMax(r0)
            r2 = 53
            goto L_0x028a
        L_0x03c5:
            throw r0
        L_0x03c6:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x03ce
            throw r1
        L_0x03ce:
            goto L_0x03d0
        L_0x03cf:
            throw r0
        L_0x03d0:
            goto L_0x03cf
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.thenRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):o.TitleBarRightButtonView$1");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x03d5, code lost:
        r0 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x044d, code lost:
        if (r9 <= 20) goto L_0x0406;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:136:0x0473, code lost:
        if (r9 <= 26) goto L_0x0404;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:149:0x04bf, code lost:
        if (r9 <= 76) goto L_0x055e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:156:0x04e6, code lost:
        if (r9 <= 76) goto L_0x055e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x0178, code lost:
        r0 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x0199, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:52:0x020e, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:82:0x0373, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x0447  */
    /* JADX WARNING: Removed duplicated region for block: B:130:0x0450  */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x046d  */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x0476  */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x04b9  */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x04c3  */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x04e4  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x04ea  */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0519  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x051e  */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x0386 A[Catch:{ all -> 0x0377, all -> 0x03d3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:93:0x0387 A[Catch:{ all -> 0x0377, all -> 0x03d3 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public o.TitleBarRightButtonView.AnonymousClass1<o.setEncryptProxy> checkRegistration(@androidx.annotation.NonNull java.lang.String r25, @androidx.annotation.NonNull java.lang.String r26, @androidx.annotation.Nullable java.lang.String r27, @androidx.annotation.Nullable java.lang.String r28) {
        /*
            r24 = this;
            o.getGroupId r7 = new o.getGroupId
            r1 = r7
            r2 = r24
            r3 = r25
            r4 = r26
            r5 = r27
            r6 = r28
            r1.<init>(r2, r3, r4, r5, r6)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 5350(0x14e6, float:7.497E-42)
            short r1 = (short) r1
            r2 = 394(0x18a, float:5.52E-43)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x0569 }
            r5 = 0
            r3[r5] = r1     // Catch:{ all -> 0x0569 }
            byte[] r1 = setMin     // Catch:{ all -> 0x0569 }
            r6 = 72
            byte r1 = r1[r6]     // Catch:{ all -> 0x0569 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x0569 }
            r8 = 2790(0xae6, float:3.91E-42)
            short r8 = (short) r8     // Catch:{ all -> 0x0569 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0569 }
            r10 = 58
            byte r9 = r9[r10]     // Catch:{ all -> 0x0569 }
            short r9 = (short) r9     // Catch:{ all -> 0x0569 }
            java.lang.String r1 = length(r1, r8, r9)     // Catch:{ all -> 0x0569 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0569 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0569 }
            r11 = 176(0xb0, float:2.47E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0569 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0569 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x0569 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0569 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x0569 }
            short r13 = (short) r13     // Catch:{ all -> 0x0569 }
            java.lang.String r9 = length(r9, r12, r13)     // Catch:{ all -> 0x0569 }
            java.lang.Class[] r12 = new java.lang.Class[r2]     // Catch:{ all -> 0x0569 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0569 }
            byte r13 = r13[r6]     // Catch:{ all -> 0x0569 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0569 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0569 }
            byte r15 = r15[r10]     // Catch:{ all -> 0x0569 }
            short r15 = (short) r15     // Catch:{ all -> 0x0569 }
            java.lang.String r13 = length(r13, r8, r15)     // Catch:{ all -> 0x0569 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x0569 }
            r12[r5] = r13     // Catch:{ all -> 0x0569 }
            java.lang.reflect.Method r1 = r1.getMethod(r9, r12)     // Catch:{ all -> 0x0569 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x0569 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0569 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008a:
            int r9 = r0.length
            r12 = 4832(0x12e0, float:6.771E-42)
            r13 = 0
            if (r3 >= r9) goto L_0x0132
            r9 = r0[r3]
            java.lang.Object[] r15 = new java.lang.Object[r2]     // Catch:{ all -> 0x0129 }
            r15[r5] = r9     // Catch:{ all -> 0x0129 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0129 }
            byte r9 = r9[r6]     // Catch:{ all -> 0x0129 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0129 }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            byte r11 = r16[r12]     // Catch:{ all -> 0x0129 }
            short r11 = (short) r11     // Catch:{ all -> 0x0129 }
            java.lang.String r9 = length(r9, r14, r11)     // Catch:{ all -> 0x0129 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x0129 }
            byte[] r11 = setMin     // Catch:{ all -> 0x0129 }
            byte r11 = r11[r4]     // Catch:{ all -> 0x0129 }
            byte r11 = (byte) r11     // Catch:{ all -> 0x0129 }
            r4 = r11 | 1470(0x5be, float:2.06E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            r17 = 52
            byte r12 = r16[r17]     // Catch:{ all -> 0x0129 }
            short r12 = (short) r12     // Catch:{ all -> 0x0129 }
            java.lang.String r4 = length(r11, r4, r12)     // Catch:{ all -> 0x0129 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0129 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0129 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0129 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            byte r2 = r16[r10]     // Catch:{ all -> 0x0129 }
            short r2 = (short) r2     // Catch:{ all -> 0x0129 }
            java.lang.String r2 = length(r12, r8, r2)     // Catch:{ all -> 0x0129 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0129 }
            r11[r5] = r2     // Catch:{ all -> 0x0129 }
            java.lang.reflect.Method r2 = r9.getMethod(r4, r11)     // Catch:{ all -> 0x0129 }
            java.lang.Object r2 = r2.invoke(r13, r15)     // Catch:{ all -> 0x0129 }
            byte[] r4 = setMin     // Catch:{ all -> 0x0120 }
            byte r4 = r4[r6]     // Catch:{ all -> 0x0120 }
            byte r4 = (byte) r4     // Catch:{ all -> 0x0120 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0120 }
            r11 = 4832(0x12e0, float:6.771E-42)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0120 }
            short r9 = (short) r9     // Catch:{ all -> 0x0120 }
            java.lang.String r4 = length(r4, r14, r9)     // Catch:{ all -> 0x0120 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0120 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0120 }
            r11 = 102(0x66, float:1.43E-43)
            byte r9 = r9[r11]     // Catch:{ all -> 0x0120 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0120 }
            r11 = 1464(0x5b8, float:2.052E-42)
            short r11 = (short) r11     // Catch:{ all -> 0x0120 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0120 }
            r14 = 11
            byte r12 = r12[r14]     // Catch:{ all -> 0x0120 }
            short r12 = (short) r12     // Catch:{ all -> 0x0120 }
            java.lang.String r9 = length(r9, r11, r12)     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r4 = r4.getMethod(r9, r13)     // Catch:{ all -> 0x0120 }
            java.lang.Object r2 = r4.invoke(r2, r13)     // Catch:{ all -> 0x0120 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x0120 }
            int r2 = r2.intValue()     // Catch:{ all -> 0x0120 }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r4 = 49
            r11 = 176(0xb0, float:2.47E-43)
            r14 = 113(0x71, float:1.58E-43)
            goto L_0x008a
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0131
            throw r1
        L_0x0131:
            throw r0
        L_0x0132:
            r8 = 19
            r0 = 0
        L_0x0135:
            int r9 = r0 + 1
            r11 = 2
            r0 = r1[r0]     // Catch:{ all -> 0x03da }
            int r0 = r7.setMax(r0)     // Catch:{ all -> 0x03da }
            r12 = 34
            r14 = 24
            r15 = 18
            r3 = 23
            switch(r0) {
                case -34: goto L_0x03bc;
                case -33: goto L_0x03ad;
                case -32: goto L_0x03a5;
                case -31: goto L_0x038a;
                case -30: goto L_0x0312;
                case -29: goto L_0x02fd;
                case -28: goto L_0x02f7;
                case -27: goto L_0x02da;
                case -26: goto L_0x02d7;
                case -25: goto L_0x02d1;
                case -24: goto L_0x02c6;
                case -23: goto L_0x02c2;
                case -22: goto L_0x0295;
                case -21: goto L_0x028f;
                case -20: goto L_0x0289;
                case -19: goto L_0x027a;
                case -18: goto L_0x0269;
                case -17: goto L_0x025c;
                case -16: goto L_0x0258;
                case -15: goto L_0x0213;
                case -14: goto L_0x01de;
                case -13: goto L_0x01ca;
                case -12: goto L_0x01c6;
                case -11: goto L_0x01c2;
                case -10: goto L_0x01b5;
                case -9: goto L_0x01b2;
                case -8: goto L_0x019d;
                case -7: goto L_0x0180;
                case -6: goto L_0x017d;
                case -5: goto L_0x017a;
                case -4: goto L_0x016c;
                case -3: goto L_0x015e;
                case -2: goto L_0x0154;
                case -1: goto L_0x0151;
                default: goto L_0x0149;
            }     // Catch:{ all -> 0x03da }
        L_0x0149:
            r16 = 176(0xb0, float:2.47E-43)
        L_0x014b:
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
            goto L_0x03d5
        L_0x0151:
            r0 = 89
            goto L_0x0135
        L_0x0154:
            int r0 = getMin     // Catch:{ all -> 0x03da }
            r7.getMin = r0     // Catch:{ all -> 0x03da }
            r0 = 10
            r7.setMax(r0)     // Catch:{ all -> 0x03da }
            goto L_0x0149
        L_0x015e:
            r3 = 1
            r7.getMin = r3     // Catch:{ all -> 0x03da }
            r7.setMax(r15)     // Catch:{ all -> 0x03da }
            r7.setMax(r8)     // Catch:{ all -> 0x03da }
            int r0 = r7.setMin     // Catch:{ all -> 0x03da }
            setMax = r0     // Catch:{ all -> 0x03da }
            goto L_0x0149
        L_0x016c:
            r0 = 33
            r7.setMax(r0)     // Catch:{ all -> 0x03da }
            int r0 = r7.setMin     // Catch:{ all -> 0x03da }
            if (r0 != 0) goto L_0x0178
            r0 = 18
            goto L_0x0135
        L_0x0178:
            r0 = r9
            goto L_0x0135
        L_0x017a:
            r0 = 87
            goto L_0x0135
        L_0x017d:
            r0 = 116(0x74, float:1.63E-43)
            goto L_0x0135
        L_0x0180:
            r7.getMin = r11     // Catch:{ all -> 0x03da }
            r7.setMax(r15)     // Catch:{ all -> 0x03da }
            r7.setMax(r3)     // Catch:{ all -> 0x03da }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x03da }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x03da }
            r7.setMax(r3)     // Catch:{ all -> 0x03da }
            java.lang.Object r3 = r7.isInside     // Catch:{ all -> 0x03da }
            o.RedDotManager r3 = (o.RedDotManager) r3     // Catch:{ all -> 0x03da }
            o.TitleBarRightButtonView$1 r0 = r0.doOnNext(r3)     // Catch:{ all -> 0x03da }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x03da }
        L_0x0199:
            r7.setMax(r14)     // Catch:{ all -> 0x03da }
            goto L_0x0149
        L_0x019d:
            o.ApiLog r0 = new o.ApiLog     // Catch:{ all -> 0x03da }
            r12 = 1
            r7.getMin = r12     // Catch:{ all -> 0x03da }
            r7.setMax(r15)     // Catch:{ all -> 0x03da }
            r7.setMax(r3)     // Catch:{ all -> 0x03da }
            java.lang.Object r3 = r7.isInside     // Catch:{ all -> 0x03da }
            o.lock r3 = (o.lock) r3     // Catch:{ all -> 0x03da }
            r0.<init>(r3)     // Catch:{ all -> 0x03da }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x03da }
            goto L_0x0199
        L_0x01b2:
            r0 = 108(0x6c, float:1.51E-43)
            goto L_0x0135
        L_0x01b5:
            r0 = 33
            r7.setMax(r0)     // Catch:{ all -> 0x03da }
            int r0 = r7.setMin     // Catch:{ all -> 0x03da }
            if (r0 != 0) goto L_0x0178
            r0 = 45
            goto L_0x0135
        L_0x01c2:
            r0 = 53
            goto L_0x0135
        L_0x01c6:
            r0 = 118(0x76, float:1.65E-43)
            goto L_0x0135
        L_0x01ca:
            r12 = 1
            r7.getMin = r12     // Catch:{ all -> 0x03da }
            r7.setMax(r15)     // Catch:{ all -> 0x03da }
            r7.setMax(r3)     // Catch:{ all -> 0x03da }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x03da }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x03da }
            o.ConnectionLog$1 r0 = r0.createRegistrationData()     // Catch:{ all -> 0x03da }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x03da }
            goto L_0x0199
        L_0x01de:
            byte[] r0 = setMin     // Catch:{ all -> 0x03da }
            byte r0 = r0[r6]     // Catch:{ all -> 0x03da }
            byte r0 = (byte) r0     // Catch:{ all -> 0x03da }
            r3 = 3032(0xbd8, float:4.249E-42)
            short r3 = (short) r3     // Catch:{ all -> 0x03da }
            byte[] r15 = setMin     // Catch:{ all -> 0x03da }
            r16 = 4832(0x12e0, float:6.771E-42)
            byte r15 = r15[r16]     // Catch:{ all -> 0x03da }
            short r15 = (short) r15     // Catch:{ all -> 0x03da }
            java.lang.String r0 = length(r0, r3, r15)     // Catch:{ all -> 0x03da }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x03da }
            byte r3 = (byte) r12     // Catch:{ all -> 0x03da }
            r12 = 9799(0x2647, float:1.3731E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x03da }
            byte[] r15 = setMin     // Catch:{ all -> 0x03da }
            r16 = 176(0xb0, float:2.47E-43)
            byte r15 = r15[r16]     // Catch:{ all -> 0x0388 }
            short r15 = (short) r15     // Catch:{ all -> 0x0388 }
            java.lang.String r3 = length(r3, r12, r15)     // Catch:{ all -> 0x0388 }
            java.lang.reflect.Field r0 = r0.getField(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r0.get(r13)     // Catch:{ all -> 0x0388 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x0388 }
        L_0x020e:
            r7.setMax(r14)     // Catch:{ all -> 0x0388 }
            goto L_0x014b
        L_0x0213:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 6
            r7.getMin = r0     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r18 = r0
            o.ConnectionLog$1 r18 = (o.ConnectionLog.AnonymousClass1) r18     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            r23 = r0
            java.lang.Boolean r23 = (java.lang.Boolean) r23     // Catch:{ all -> 0x0388 }
            o.TitleBarRightButtonView$1 r0 = r18.checkRegistrationAndSendOtp(r19, r20, r21, r22, r23)     // Catch:{ all -> 0x0388 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x0388 }
            goto L_0x020e
        L_0x0258:
            r0 = 76
            goto L_0x0135
        L_0x025c:
            r16 = 176(0xb0, float:2.47E-43)
            int r0 = setMax     // Catch:{ all -> 0x0388 }
            r7.getMin = r0     // Catch:{ all -> 0x0388 }
            r0 = 10
            r7.setMax(r0)     // Catch:{ all -> 0x0388 }
            goto L_0x014b
        L_0x0269:
            r3 = 1
            r16 = 176(0xb0, float:2.47E-43)
            r7.getMin = r3     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r8)     // Catch:{ all -> 0x0388 }
            int r0 = r7.setMin     // Catch:{ all -> 0x0388 }
            getMin = r0     // Catch:{ all -> 0x0388 }
            goto L_0x014b
        L_0x027a:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 22
            r7.setMax(r0)     // Catch:{ all -> 0x0388 }
            int r0 = r7.setMin     // Catch:{ all -> 0x0388 }
            if (r0 != 0) goto L_0x0178
            r0 = 75
            goto L_0x0135
        L_0x0289:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 121(0x79, float:1.7E-43)
            goto L_0x0135
        L_0x028f:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 94
            goto L_0x0135
        L_0x0295:
            r16 = 176(0xb0, float:2.47E-43)
            o.ZipUtils r0 = new o.ZipUtils     // Catch:{ all -> 0x0388 }
            r12 = 4
            r7.getMin = r12     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r12 = r7.isInside     // Catch:{ all -> 0x0388 }
            o.lock r12 = (o.lock) r12     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r15 = r7.isInside     // Catch:{ all -> 0x0388 }
            java.lang.String r15 = (java.lang.String) r15     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x0388 }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r3 = r7.isInside     // Catch:{ all -> 0x0388 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ all -> 0x0388 }
            r0.<init>(r12, r15, r2, r3)     // Catch:{ all -> 0x0388 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x0388 }
            goto L_0x020e
        L_0x02c2:
            r0 = 19
            goto L_0x0135
        L_0x02c6:
            r2 = 1
            r16 = 176(0xb0, float:2.47E-43)
            r7.setMax(r2)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0388 }
            throw r0     // Catch:{ all -> 0x0388 }
        L_0x02d1:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 122(0x7a, float:1.71E-43)
            goto L_0x0135
        L_0x02d7:
            r0 = 1
            goto L_0x0135
        L_0x02da:
            r16 = 176(0xb0, float:2.47E-43)
            r7.getMin = r11     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x0388 }
            o.RedDotDrawable r2 = (o.RedDotDrawable) r2     // Catch:{ all -> 0x0388 }
            o.TitleBarRightButtonView$1 r0 = r0.map(r2)     // Catch:{ all -> 0x0388 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x0388 }
            goto L_0x020e
        L_0x02f7:
            r16 = 176(0xb0, float:2.47E-43)
            r0 = 25
            goto L_0x0135
        L_0x02fd:
            r2 = 1
            r16 = 176(0xb0, float:2.47E-43)
            r7.getMin = r2     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0388 }
            o.setStatusCode r0 = r0.registrationMapper     // Catch:{ all -> 0x0388 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x0388 }
            goto L_0x020e
        L_0x0312:
            r2 = 1
            r16 = 176(0xb0, float:2.47E-43)
            r7.getMin = r2     // Catch:{ all -> 0x0388 }
            r7.setMax(r15)     // Catch:{ all -> 0x0388 }
            r7.setMax(r3)     // Catch:{ all -> 0x0388 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x0388 }
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x037b }
            r3[r5] = r0     // Catch:{ all -> 0x037b }
            byte[] r0 = setMin     // Catch:{ all -> 0x037b }
            byte r0 = r0[r6]     // Catch:{ all -> 0x037b }
            byte r0 = (byte) r0     // Catch:{ all -> 0x037b }
            r2 = 9081(0x2379, float:1.2725E-41)
            short r2 = (short) r2     // Catch:{ all -> 0x037b }
            byte[] r12 = setMin     // Catch:{ all -> 0x037b }
            r18 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r18]     // Catch:{ all -> 0x0379 }
            short r12 = (short) r12     // Catch:{ all -> 0x0379 }
            java.lang.String r0 = length(r0, r2, r12)     // Catch:{ all -> 0x0379 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x0379 }
            byte[] r2 = setMin     // Catch:{ all -> 0x0379 }
            r19 = 113(0x71, float:1.58E-43)
            byte r2 = r2[r19]     // Catch:{ all -> 0x0377 }
            byte r2 = (byte) r2     // Catch:{ all -> 0x0377 }
            r12 = 3602(0xe12, float:5.047E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0377 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0377 }
            r20 = 102(0x66, float:1.43E-43)
            byte r15 = r15[r20]     // Catch:{ all -> 0x0377 }
            short r15 = (short) r15     // Catch:{ all -> 0x0377 }
            java.lang.String r2 = length(r2, r12, r15)     // Catch:{ all -> 0x0377 }
            r12 = 1
            java.lang.Class[] r15 = new java.lang.Class[r12]     // Catch:{ all -> 0x0377 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0377 }
            byte r12 = r12[r6]     // Catch:{ all -> 0x0377 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0377 }
            r4 = 633(0x279, float:8.87E-43)
            short r4 = (short) r4     // Catch:{ all -> 0x0377 }
            byte[] r20 = setMin     // Catch:{ all -> 0x0377 }
            byte r8 = r20[r10]     // Catch:{ all -> 0x0377 }
            short r8 = (short) r8     // Catch:{ all -> 0x0377 }
            java.lang.String r4 = length(r12, r4, r8)     // Catch:{ all -> 0x0377 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0377 }
            r15[r5] = r4     // Catch:{ all -> 0x0377 }
            java.lang.reflect.Method r0 = r0.getMethod(r2, r15)     // Catch:{ all -> 0x0377 }
            java.lang.Object r0 = r0.invoke(r13, r3)     // Catch:{ all -> 0x0377 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x03d3 }
        L_0x0373:
            r7.setMax(r14)     // Catch:{ all -> 0x03d3 }
            goto L_0x03d5
        L_0x0377:
            r0 = move-exception
            goto L_0x0380
        L_0x0379:
            r0 = move-exception
            goto L_0x037e
        L_0x037b:
            r0 = move-exception
            r18 = 4832(0x12e0, float:6.771E-42)
        L_0x037e:
            r19 = 113(0x71, float:1.58E-43)
        L_0x0380:
            java.lang.Throwable r2 = r0.getCause()     // Catch:{ all -> 0x03d3 }
            if (r2 == 0) goto L_0x0387
            throw r2     // Catch:{ all -> 0x03d3 }
        L_0x0387:
            throw r0     // Catch:{ all -> 0x03d3 }
        L_0x0388:
            r0 = move-exception
            goto L_0x03dd
        L_0x038a:
            r16 = 176(0xb0, float:2.47E-43)
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
            o.getIgnoreInputAPIList r0 = new o.getIgnoreInputAPIList     // Catch:{ all -> 0x03d3 }
            r2 = 1
            r7.getMin = r2     // Catch:{ all -> 0x03d3 }
            r7.setMax(r15)     // Catch:{ all -> 0x03d3 }
            r7.setMax(r3)     // Catch:{ all -> 0x03d3 }
            java.lang.Object r2 = r7.isInside     // Catch:{ all -> 0x03d3 }
            o.setStatusCode r2 = (o.setStatusCode) r2     // Catch:{ all -> 0x03d3 }
            r0.<init>(r2)     // Catch:{ all -> 0x03d3 }
            r7.IsOverlapping = r0     // Catch:{ all -> 0x03d3 }
            goto L_0x0373
        L_0x03a5:
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
            r0 = 54
            goto L_0x0135
        L_0x03ad:
            r2 = 1
            r16 = 176(0xb0, float:2.47E-43)
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
            r7.setMax(r2)     // Catch:{ all -> 0x03d3 }
            java.lang.Object r0 = r7.isInside     // Catch:{ all -> 0x03d3 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x03d3 }
            return r0
        L_0x03bc:
            r16 = 176(0xb0, float:2.47E-43)
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
            r7.setMax(r12)     // Catch:{ all -> 0x03d3 }
            int r0 = r7.setMin     // Catch:{ all -> 0x03d3 }
            r2 = 17
            if (r0 == r2) goto L_0x03d0
            r2 = 62
            r0 = 96
            goto L_0x03d6
        L_0x03d0:
            r0 = 46
            goto L_0x03d6
        L_0x03d3:
            r0 = move-exception
            goto L_0x03e1
        L_0x03d5:
            r0 = r9
        L_0x03d6:
            r8 = 19
            goto L_0x0135
        L_0x03da:
            r0 = move-exception
            r16 = 176(0xb0, float:2.47E-43)
        L_0x03dd:
            r18 = 4832(0x12e0, float:6.771E-42)
            r19 = 113(0x71, float:1.58E-43)
        L_0x03e1:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            r4 = 963(0x3c3, float:1.35E-42)
            short r4 = (short) r4
            r8 = 55
            byte r2 = r2[r8]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r4, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            r12 = 120(0x78, float:1.68E-43)
            if (r2 == 0) goto L_0x040a
            r2 = 1
            if (r9 < r2) goto L_0x040a
            if (r9 > r11) goto L_0x040a
        L_0x0404:
            r12 = 86
        L_0x0406:
            r17 = 1
            goto L_0x055e
        L_0x040a:
            byte[] r2 = setMin
            byte r2 = r2[r6]
            byte r2 = (byte) r2
            r11 = 15410(0x3c32, float:2.1594E-41)
            short r11 = (short) r11
            r14 = r11 & 239(0xef, float:3.35E-43)
            short r14 = (short) r14
            java.lang.String r2 = length(r2, r11, r14)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x042c
            r2 = 14
            if (r9 < r2) goto L_0x042c
            r2 = 15
            if (r9 > r2) goto L_0x042c
        L_0x042b:
            goto L_0x0406
        L_0x042c:
            byte[] r2 = setMin
            byte r11 = r2[r6]
            byte r11 = (byte) r11
            r14 = 1451(0x5ab, float:2.033E-42)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r11, r14, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0450
            r2 = 19
            if (r9 < r2) goto L_0x0452
            r11 = 20
            if (r9 > r11) goto L_0x0452
            goto L_0x042b
        L_0x0450:
            r2 = 19
        L_0x0452:
            byte[] r11 = setMin
            byte r2 = r11[r6]
            byte r2 = (byte) r2
            r3 = r2 | 976(0x3d0, float:1.368E-42)
            short r3 = (short) r3
            r21 = 54
            byte r11 = r11[r21]
            short r11 = (short) r11
            java.lang.String r2 = length(r2, r3, r11)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0476
            r2 = 25
            if (r9 < r2) goto L_0x0478
            r3 = 26
            if (r9 > r3) goto L_0x0478
            goto L_0x0404
        L_0x0476:
            r2 = 25
        L_0x0478:
            byte[] r3 = setMin
            byte r11 = r3[r6]
            byte r11 = (byte) r11
            r2 = r11 | 5841(0x16d1, float:8.185E-42)
            short r2 = (short) r2
            r21 = 1197(0x4ad, float:1.677E-42)
            byte r3 = r3[r21]
            short r3 = (short) r3
            java.lang.String r2 = length(r11, r2, r3)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x049c
            r2 = 41
            if (r9 < r2) goto L_0x049c
            r2 = 42
            if (r9 > r2) goto L_0x049c
            goto L_0x042b
        L_0x049c:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            r11 = 14230(0x3796, float:1.994E-41)
            short r11 = (short) r11
            byte r2 = r2[r15]
            r17 = 1
            int r2 = r2 + -1
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r11, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04c3
            r2 = 54
            if (r9 < r2) goto L_0x04c5
            r3 = 76
            if (r9 > r3) goto L_0x04c5
            goto L_0x055e
        L_0x04c3:
            r2 = 54
        L_0x04c5:
            byte[] r3 = setMin
            byte r11 = r3[r6]
            byte r11 = (byte) r11
            r2 = r11 | 5841(0x16d1, float:8.185E-42)
            short r2 = (short) r2
            r21 = 1197(0x4ad, float:1.677E-42)
            byte r3 = r3[r21]
            short r3 = (short) r3
            java.lang.String r2 = length(r11, r2, r3)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04ea
            r2 = 70
            if (r9 < r2) goto L_0x04ea
            r2 = 76
            if (r9 > r2) goto L_0x04ec
            goto L_0x055e
        L_0x04ea:
            r2 = 76
        L_0x04ec:
            byte[] r3 = setMin
            byte r11 = r3[r6]
            byte r11 = (byte) r11
            r2 = r11 | 4944(0x1350, float:6.928E-42)
            short r2 = (short) r2
            r21 = 13
            byte r3 = r3[r21]
            int r3 = -r3
            short r3 = (short) r3
            java.lang.String r2 = length(r11, r2, r3)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0511
            r2 = 94
            if (r9 < r2) goto L_0x0511
            r2 = 95
            if (r9 > r2) goto L_0x0511
            goto L_0x055e
        L_0x0511:
            r2 = 103(0x67, float:1.44E-43)
            if (r9 < r2) goto L_0x051e
            r2 = 108(0x6c, float:1.51E-43)
            if (r9 > r2) goto L_0x051e
            r2 = 93
            r12 = 93
            goto L_0x055e
        L_0x051e:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r14, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x053f
            r2 = 109(0x6d, float:1.53E-43)
            if (r9 < r2) goto L_0x053f
            r2 = 110(0x6e, float:1.54E-43)
            if (r9 > r2) goto L_0x053f
            r12 = 86
            goto L_0x055e
        L_0x053f:
            byte[] r2 = setMin
            byte r3 = r2[r6]
            byte r3 = (byte) r3
            byte r2 = r2[r8]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r4, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0568
            r2 = 111(0x6f, float:1.56E-43)
            if (r9 < r2) goto L_0x0568
            r2 = 116(0x74, float:1.63E-43)
            if (r9 > r2) goto L_0x0568
        L_0x055e:
            r7.IsOverlapping = r0
            r0 = 35
            r7.setMax(r0)
            r0 = r12
            goto L_0x03d6
        L_0x0568:
            throw r0
        L_0x0569:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0571
            throw r1
        L_0x0571:
            goto L_0x0573
        L_0x0572:
            throw r0
        L_0x0573:
            goto L_0x0572
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.checkRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String):o.TitleBarRightButtonView$1");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:216:0x05aa, code lost:
        if (r7 <= 177) goto L_0x0511;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x0197, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:53:0x01b6, code lost:
        r0 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:65:0x022a, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:193:0x051f  */
    /* JADX WARNING: Removed duplicated region for block: B:194:0x0529  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public o.TitleBarRightButtonView.AnonymousClass1<java.lang.Boolean> register(java.lang.String r25, java.lang.String r26, java.lang.String r27, java.io.File r28, java.lang.String r29) {
        /*
            r24 = this;
            o.getGroupId r8 = new o.getGroupId
            r1 = r8
            r2 = r24
            r3 = r25
            r4 = r26
            r5 = r27
            r6 = r28
            r7 = r29
            r1.<init>(r2, r3, r4, r5, r6, r7)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r1 = 11555(0x2d23, float:1.6192E-41)
            short r1 = (short) r1
            r2 = 956(0x3bc, float:1.34E-42)
            short r2 = (short) r2
            java.lang.String r0 = length(r0, r1, r2)
            int r1 = getMax
            r1 = r1 & 494(0x1ee, float:6.92E-43)
            byte r1 = (byte) r1
            r2 = 9652(0x25b4, float:1.3525E-41)
            short r2 = (short) r2
            byte[] r3 = setMin
            r4 = 49
            byte r3 = r3[r4]
            short r3 = (short) r3
            java.lang.String r1 = length(r1, r2, r3)
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ all -> 0x0626 }
            r4 = 0
            r3[r4] = r1     // Catch:{ all -> 0x0626 }
            byte[] r1 = setMin     // Catch:{ all -> 0x0626 }
            r5 = 72
            byte r1 = r1[r5]     // Catch:{ all -> 0x0626 }
            byte r1 = (byte) r1     // Catch:{ all -> 0x0626 }
            r6 = 2790(0xae6, float:3.91E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0626 }
            byte[] r7 = setMin     // Catch:{ all -> 0x0626 }
            r9 = 58
            byte r7 = r7[r9]     // Catch:{ all -> 0x0626 }
            short r7 = (short) r7     // Catch:{ all -> 0x0626 }
            java.lang.String r1 = length(r1, r6, r7)     // Catch:{ all -> 0x0626 }
            java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0626 }
            byte[] r7 = setMin     // Catch:{ all -> 0x0626 }
            r10 = 176(0xb0, float:2.47E-43)
            byte r7 = r7[r10]     // Catch:{ all -> 0x0626 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x0626 }
            r11 = 12725(0x31b5, float:1.7832E-41)
            short r11 = (short) r11     // Catch:{ all -> 0x0626 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0626 }
            r13 = 113(0x71, float:1.58E-43)
            byte r12 = r12[r13]     // Catch:{ all -> 0x0626 }
            short r12 = (short) r12     // Catch:{ all -> 0x0626 }
            java.lang.String r7 = length(r7, r11, r12)     // Catch:{ all -> 0x0626 }
            java.lang.Class[] r11 = new java.lang.Class[r2]     // Catch:{ all -> 0x0626 }
            byte[] r12 = setMin     // Catch:{ all -> 0x0626 }
            byte r12 = r12[r5]     // Catch:{ all -> 0x0626 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x0626 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0626 }
            byte r13 = r13[r9]     // Catch:{ all -> 0x0626 }
            short r13 = (short) r13     // Catch:{ all -> 0x0626 }
            java.lang.String r12 = length(r12, r6, r13)     // Catch:{ all -> 0x0626 }
            java.lang.Class r12 = java.lang.Class.forName(r12)     // Catch:{ all -> 0x0626 }
            r11[r4] = r12     // Catch:{ all -> 0x0626 }
            java.lang.reflect.Method r1 = r1.getMethod(r7, r11)     // Catch:{ all -> 0x0626 }
            java.lang.Object r0 = r1.invoke(r0, r3)     // Catch:{ all -> 0x0626 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x0626 }
            int r1 = r0.length
            int[] r1 = new int[r1]
            r3 = 0
        L_0x008c:
            int r7 = r0.length
            r11 = 0
            if (r3 >= r7) goto L_0x0132
            r7 = r0[r3]
            java.lang.Object[] r12 = new java.lang.Object[r2]     // Catch:{ all -> 0x0129 }
            r12[r4] = r7     // Catch:{ all -> 0x0129 }
            byte[] r7 = setMin     // Catch:{ all -> 0x0129 }
            byte r7 = r7[r5]     // Catch:{ all -> 0x0129 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x0129 }
            r13 = 14246(0x37a6, float:1.9963E-41)
            short r13 = (short) r13     // Catch:{ all -> 0x0129 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0129 }
            r15 = 4832(0x12e0, float:6.771E-42)
            byte r14 = r14[r15]     // Catch:{ all -> 0x0129 }
            short r14 = (short) r14     // Catch:{ all -> 0x0129 }
            java.lang.String r7 = length(r7, r13, r14)     // Catch:{ all -> 0x0129 }
            java.lang.Class r7 = java.lang.Class.forName(r7)     // Catch:{ all -> 0x0129 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0129 }
            r15 = 49
            byte r14 = r14[r15]     // Catch:{ all -> 0x0129 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0129 }
            r15 = r14 | 1470(0x5be, float:2.06E-42)
            short r15 = (short) r15     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            r17 = 52
            byte r10 = r16[r17]     // Catch:{ all -> 0x0129 }
            short r10 = (short) r10     // Catch:{ all -> 0x0129 }
            java.lang.String r10 = length(r14, r15, r10)     // Catch:{ all -> 0x0129 }
            java.lang.Class[] r14 = new java.lang.Class[r2]     // Catch:{ all -> 0x0129 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0129 }
            byte r15 = r15[r5]     // Catch:{ all -> 0x0129 }
            byte r15 = (byte) r15     // Catch:{ all -> 0x0129 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0129 }
            byte r2 = r16[r9]     // Catch:{ all -> 0x0129 }
            short r2 = (short) r2     // Catch:{ all -> 0x0129 }
            java.lang.String r2 = length(r15, r6, r2)     // Catch:{ all -> 0x0129 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0129 }
            r14[r4] = r2     // Catch:{ all -> 0x0129 }
            java.lang.reflect.Method r2 = r7.getMethod(r10, r14)     // Catch:{ all -> 0x0129 }
            java.lang.Object r2 = r2.invoke(r11, r12)     // Catch:{ all -> 0x0129 }
            byte[] r7 = setMin     // Catch:{ all -> 0x0120 }
            byte r7 = r7[r5]     // Catch:{ all -> 0x0120 }
            byte r7 = (byte) r7     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0120 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0120 }
            short r10 = (short) r10     // Catch:{ all -> 0x0120 }
            java.lang.String r7 = length(r7, r13, r10)     // Catch:{ all -> 0x0120 }
            java.lang.Class r7 = java.lang.Class.forName(r7)     // Catch:{ all -> 0x0120 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0120 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0120 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0120 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0120 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0120 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0120 }
            short r13 = (short) r13     // Catch:{ all -> 0x0120 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0120 }
            java.lang.reflect.Method r7 = r7.getMethod(r10, r11)     // Catch:{ all -> 0x0120 }
            java.lang.Object r2 = r7.invoke(r2, r11)     // Catch:{ all -> 0x0120 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ all -> 0x0120 }
            int r2 = r2.intValue()     // Catch:{ all -> 0x0120 }
            r1[r3] = r2
            int r3 = r3 + 1
            r2 = 1
            r10 = 176(0xb0, float:2.47E-43)
            goto L_0x008c
        L_0x0120:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0128
            throw r1
        L_0x0128:
            throw r0
        L_0x0129:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0131
            throw r1
        L_0x0131:
            throw r0
        L_0x0132:
            r3 = 7
            r0 = 0
        L_0x0134:
            int r7 = r0 + 1
            r10 = 5
            r12 = 10
            r13 = 18
            r0 = r1[r0]     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMax(r0)     // Catch:{ all -> 0x0464 }
            r14 = 22
            r15 = 24
            r6 = 34
            r2 = 33
            r9 = 23
            switch(r0) {
                case -65: goto L_0x045b;
                case -64: goto L_0x044e;
                case -63: goto L_0x044b;
                case -62: goto L_0x0447;
                case -61: goto L_0x0443;
                case -60: goto L_0x0438;
                case -59: goto L_0x0434;
                case -58: goto L_0x03e5;
                case -57: goto L_0x03e0;
                case -56: goto L_0x03db;
                case -55: goto L_0x03cf;
                case -54: goto L_0x03ca;
                case -53: goto L_0x03be;
                case -52: goto L_0x03ac;
                case -51: goto L_0x03a8;
                case -50: goto L_0x039c;
                case -49: goto L_0x038a;
                case -48: goto L_0x0386;
                case -47: goto L_0x0382;
                case -46: goto L_0x0377;
                case -45: goto L_0x0366;
                case -44: goto L_0x0360;
                case -43: goto L_0x035c;
                case -42: goto L_0x0358;
                case -41: goto L_0x0354;
                case -40: goto L_0x0349;
                case -39: goto L_0x0345;
                case -38: goto L_0x0341;
                case -37: goto L_0x0336;
                case -36: goto L_0x0332;
                case -35: goto L_0x032e;
                case -34: goto L_0x0319;
                case -33: goto L_0x0306;
                case -32: goto L_0x02f1;
                case -31: goto L_0x02de;
                case -30: goto L_0x02ce;
                case -29: goto L_0x02ca;
                case -28: goto L_0x02c6;
                case -27: goto L_0x02c2;
                case -26: goto L_0x02b5;
                case -25: goto L_0x02b1;
                case -24: goto L_0x02ad;
                case -23: goto L_0x02a2;
                case -22: goto L_0x0233;
                case -21: goto L_0x022f;
                case -20: goto L_0x01e0;
                case -19: goto L_0x01dc;
                case -18: goto L_0x01d8;
                case -17: goto L_0x01d4;
                case -16: goto L_0x01c9;
                case -15: goto L_0x01c5;
                case -14: goto L_0x01c1;
                case -13: goto L_0x01bd;
                case -12: goto L_0x01b9;
                case -11: goto L_0x01ab;
                case -10: goto L_0x019b;
                case -9: goto L_0x0193;
                case -8: goto L_0x017f;
                case -7: goto L_0x017c;
                case -6: goto L_0x0179;
                case -5: goto L_0x0168;
                case -4: goto L_0x015f;
                case -3: goto L_0x015c;
                case -2: goto L_0x0153;
                case -1: goto L_0x0151;
                default: goto L_0x014e;
            }     // Catch:{ all -> 0x0464 }
        L_0x014e:
            r5 = 1
            goto L_0x045f
        L_0x0151:
            r0 = 7
            goto L_0x0134
        L_0x0153:
            r2 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x0464 }
            return r0
        L_0x015c:
            r0 = 202(0xca, float:2.83E-43)
            goto L_0x0134
        L_0x015f:
            r2 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x0464 }
            throw r0     // Catch:{ all -> 0x0464 }
        L_0x0168:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            r2 = 64
            if (r0 == r2) goto L_0x0176
            r2 = 91
            r0 = 84
            goto L_0x0134
        L_0x0176:
            r0 = 44
            goto L_0x0134
        L_0x0179:
            r0 = 93
            goto L_0x0134
        L_0x017c:
            r0 = 157(0x9d, float:2.2E-43)
            goto L_0x0134
        L_0x017f:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            r2 = 43
            if (r0 == r2) goto L_0x0190
            r2 = 54
            if (r0 == r2) goto L_0x018d
            goto L_0x0190
        L_0x018d:
            r0 = 171(0xab, float:2.4E-43)
            goto L_0x0134
        L_0x0190:
            r0 = 162(0xa2, float:2.27E-43)
            goto L_0x0134
        L_0x0193:
            int r0 = setMax     // Catch:{ all -> 0x0464 }
            r8.getMin = r0     // Catch:{ all -> 0x0464 }
        L_0x0197:
            r8.setMax(r12)     // Catch:{ all -> 0x0464 }
            goto L_0x014e
        L_0x019b:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r0 = 19
            r8.setMax(r0)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            getMin = r0     // Catch:{ all -> 0x0464 }
            goto L_0x014e
        L_0x01ab:
            r8.setMax(r14)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x01b6
            r0 = 39
            goto L_0x0134
        L_0x01b6:
            r0 = r7
            goto L_0x0134
        L_0x01b9:
            r0 = 278(0x116, float:3.9E-43)
            goto L_0x0134
        L_0x01bd:
            r0 = 69
            goto L_0x0134
        L_0x01c1:
            r0 = 11
            goto L_0x0134
        L_0x01c5:
            r0 = 16
            goto L_0x0134
        L_0x01c9:
            r8.setMax(r14)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x01b6
            r0 = 65
            goto L_0x0134
        L_0x01d4:
            r0 = 42
            goto L_0x0134
        L_0x01d8:
            r0 = 88
            goto L_0x0134
        L_0x01dc:
            r0 = 170(0xaa, float:2.38E-43)
            goto L_0x0134
        L_0x01e0:
            r8.getMin = r3     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r16 = r0
            o.lock r16 = (o.lock) r16     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r17 = r0
            java.lang.String r17 = (java.lang.String) r17     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r18 = r0
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r20 = r0
            java.io.File r20 = (java.io.File) r20     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0464 }
            o.TitleBarRightButtonView$1 r0 = r16.doUploadAvatarFirst(r17, r18, r19, r20, r21, r22)     // Catch:{ all -> 0x0464 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0464 }
        L_0x022a:
            r8.setMax(r15)     // Catch:{ all -> 0x0464 }
            goto L_0x014e
        L_0x022f:
            r0 = 231(0xe7, float:3.24E-43)
            goto L_0x0134
        L_0x0233:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            java.lang.Object[] r6 = new java.lang.Object[r2]     // Catch:{ all -> 0x0299 }
            r6[r4] = r0     // Catch:{ all -> 0x0299 }
            byte[] r0 = setMin     // Catch:{ all -> 0x0299 }
            r2 = 6
            byte r0 = r0[r2]     // Catch:{ all -> 0x0299 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x0299 }
            r9 = 1421(0x58d, float:1.991E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x0299 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0299 }
            byte r14 = r14[r2]     // Catch:{ all -> 0x0299 }
            short r14 = (short) r14     // Catch:{ all -> 0x0299 }
            java.lang.String r0 = length(r0, r9, r14)     // Catch:{ all -> 0x0299 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x0299 }
            byte[] r9 = setMin     // Catch:{ all -> 0x0299 }
            r14 = 102(0x66, float:1.43E-43)
            byte r9 = r9[r14]     // Catch:{ all -> 0x0299 }
            byte r9 = (byte) r9     // Catch:{ all -> 0x0299 }
            r14 = 1457(0x5b1, float:2.042E-42)
            short r14 = (short) r14     // Catch:{ all -> 0x0299 }
            byte[] r15 = setMin     // Catch:{ all -> 0x0299 }
            r16 = 52
            byte r15 = r15[r16]     // Catch:{ all -> 0x0299 }
            short r15 = (short) r15     // Catch:{ all -> 0x0299 }
            java.lang.String r9 = length(r9, r14, r15)     // Catch:{ all -> 0x0299 }
            r14 = 1
            java.lang.Class[] r15 = new java.lang.Class[r14]     // Catch:{ all -> 0x0299 }
            byte[] r14 = setMin     // Catch:{ all -> 0x0299 }
            byte r14 = r14[r5]     // Catch:{ all -> 0x0299 }
            byte r14 = (byte) r14     // Catch:{ all -> 0x0299 }
            r5 = 10599(0x2967, float:1.4852E-41)
            short r5 = (short) r5     // Catch:{ all -> 0x0299 }
            byte[] r17 = setMin     // Catch:{ all -> 0x0299 }
            byte r2 = r17[r2]     // Catch:{ all -> 0x0299 }
            short r2 = (short) r2     // Catch:{ all -> 0x0299 }
            java.lang.String r2 = length(r14, r5, r2)     // Catch:{ all -> 0x0299 }
            java.lang.Class r2 = java.lang.Class.forName(r2)     // Catch:{ all -> 0x0299 }
            r15[r4] = r2     // Catch:{ all -> 0x0299 }
            java.lang.reflect.Method r0 = r0.getMethod(r9, r15)     // Catch:{ all -> 0x0299 }
            java.lang.Object r0 = r0.invoke(r11, r6)     // Catch:{ all -> 0x0299 }
            java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ all -> 0x0299 }
            boolean r0 = r0.booleanValue()     // Catch:{ all -> 0x0299 }
            r8.getMin = r0     // Catch:{ all -> 0x0464 }
            goto L_0x0197
        L_0x0299:
            r0 = move-exception
            java.lang.Throwable r2 = r0.getCause()     // Catch:{ all -> 0x0464 }
            if (r2 == 0) goto L_0x02a1
            throw r2     // Catch:{ all -> 0x0464 }
        L_0x02a1:
            throw r0     // Catch:{ all -> 0x0464 }
        L_0x02a2:
            r8.setMax(r2)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x045f
            r0 = 81
            goto L_0x0460
        L_0x02ad:
            r0 = 223(0xdf, float:3.12E-43)
            goto L_0x0134
        L_0x02b1:
            r0 = 131(0x83, float:1.84E-43)
            goto L_0x0460
        L_0x02b5:
            r0 = 125(0x7d, float:1.75E-43)
            r8.setMax(r0)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x045f
            r0 = 87
            goto L_0x0460
        L_0x02c2:
            r0 = 76
            goto L_0x0460
        L_0x02c6:
            r0 = 12
            goto L_0x0460
        L_0x02ca:
            r0 = 78
            goto L_0x0460
        L_0x02ce:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 == 0) goto L_0x02da
            r2 = 1
            r0 = 225(0xe1, float:3.15E-43)
            goto L_0x0460
        L_0x02da:
            r0 = 17
            goto L_0x0460
        L_0x02de:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0464 }
            o.getPerformanceTracker r0 = r0.deviceInformationProvider     // Catch:{ all -> 0x0464 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0464 }
            goto L_0x022a
        L_0x02f1:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            o.getPerformanceTracker r0 = (o.getPerformanceTracker) r0     // Catch:{ all -> 0x0464 }
            java.lang.String r0 = r0.getDeviceUUID()     // Catch:{ all -> 0x0464 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0464 }
            goto L_0x022a
        L_0x0306:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0464 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x0464 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0464 }
            goto L_0x022a
        L_0x0319:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r8.setMax(r9)     // Catch:{ all -> 0x0464 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0464 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x0464 }
            java.lang.String r0 = r0.getReferralCode()     // Catch:{ all -> 0x0464 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0464 }
            goto L_0x022a
        L_0x032e:
            r0 = 259(0x103, float:3.63E-43)
            goto L_0x0460
        L_0x0332:
            r0 = 253(0xfd, float:3.55E-43)
            goto L_0x0460
        L_0x0336:
            r8.setMax(r14)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x045f
            r0 = 109(0x6d, float:1.53E-43)
            goto L_0x0460
        L_0x0341:
            r0 = 40
            goto L_0x0460
        L_0x0345:
            r0 = 94
            goto L_0x0460
        L_0x0349:
            r8.setMax(r14)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x045f
            r0 = 130(0x82, float:1.82E-43)
            goto L_0x0460
        L_0x0354:
            r0 = 14
            goto L_0x0460
        L_0x0358:
            r0 = 90
            goto L_0x0460
        L_0x035c:
            r0 = 158(0x9e, float:2.21E-43)
            goto L_0x0460
        L_0x0360:
            int r0 = getMin     // Catch:{ all -> 0x0464 }
            r8.getMin = r0     // Catch:{ all -> 0x0464 }
            goto L_0x0197
        L_0x0366:
            r2 = 1
            r8.getMin = r2     // Catch:{ all -> 0x0464 }
            r8.setMax(r13)     // Catch:{ all -> 0x0464 }
            r0 = 19
            r8.setMax(r0)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            setMax = r0     // Catch:{ all -> 0x0464 }
            goto L_0x014e
        L_0x0377:
            r8.setMax(r2)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 != 0) goto L_0x045f
            r0 = 154(0x9a, float:2.16E-43)
            goto L_0x0460
        L_0x0382:
            r0 = 104(0x68, float:1.46E-43)
            goto L_0x0460
        L_0x0386:
            r0 = 105(0x69, float:1.47E-43)
            goto L_0x0460
        L_0x038a:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            r2 = 59
            if (r0 == r2) goto L_0x0398
            r2 = 94
            r0 = 1
            goto L_0x0460
        L_0x0398:
            r0 = 257(0x101, float:3.6E-43)
            goto L_0x0460
        L_0x039c:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            if (r0 == 0) goto L_0x044b
            r2 = 1
            r0 = 176(0xb0, float:2.47E-43)
            goto L_0x0460
        L_0x03a8:
            r0 = 134(0x86, float:1.88E-43)
            goto L_0x0460
        L_0x03ac:
            r8.setMax(r6)     // Catch:{ all -> 0x0464 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0464 }
            r5 = 1
            if (r0 == 0) goto L_0x03bb
            if (r0 == r5) goto L_0x03b7
            goto L_0x03bb
        L_0x03b7:
            r0 = 159(0x9f, float:2.23E-43)
            goto L_0x0460
        L_0x03bb:
            r0 = 5
            goto L_0x0460
        L_0x03be:
            r5 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0459 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0459 }
            if (r0 != 0) goto L_0x045f
            r0 = 201(0xc9, float:2.82E-43)
            goto L_0x0460
        L_0x03ca:
            r5 = 1
            r0 = 156(0x9c, float:2.19E-43)
            goto L_0x0460
        L_0x03cf:
            r5 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0459 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0459 }
            if (r0 != 0) goto L_0x045f
            r0 = 222(0xde, float:3.11E-43)
            goto L_0x0460
        L_0x03db:
            r5 = 1
            r0 = 279(0x117, float:3.91E-43)
            goto L_0x0460
        L_0x03e0:
            r5 = 1
            r0 = 97
            goto L_0x0460
        L_0x03e5:
            r5 = 1
            r8.getMin = r3     // Catch:{ all -> 0x0459 }
            r8.setMax(r13)     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r17 = r0
            o.lock r17 = (o.lock) r17     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r18 = r0
            java.lang.String r18 = (java.lang.String) r18     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r19 = r0
            java.lang.String r19 = (java.lang.String) r19     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r21 = r0
            java.lang.String r21 = (java.lang.String) r21     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r22 = r0
            java.lang.String r22 = (java.lang.String) r22     // Catch:{ all -> 0x0459 }
            r8.setMax(r9)     // Catch:{ all -> 0x0459 }
            java.lang.Object r0 = r8.isInside     // Catch:{ all -> 0x0459 }
            r23 = r0
            java.lang.String r23 = (java.lang.String) r23     // Catch:{ all -> 0x0459 }
            o.TitleBarRightButtonView$1 r0 = r17.thenRegister(r18, r19, r20, r21, r22, r23)     // Catch:{ all -> 0x0459 }
            r8.IsOverlapping = r0     // Catch:{ all -> 0x0459 }
            r8.setMax(r15)     // Catch:{ all -> 0x0459 }
            goto L_0x045f
        L_0x0434:
            r5 = 1
            r0 = 110(0x6e, float:1.54E-43)
            goto L_0x0460
        L_0x0438:
            r5 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0459 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0459 }
            if (r0 != 0) goto L_0x045f
            r0 = 252(0xfc, float:3.53E-43)
            goto L_0x0460
        L_0x0443:
            r5 = 1
            r0 = 82
            goto L_0x0460
        L_0x0447:
            r5 = 1
            r0 = 66
            goto L_0x0460
        L_0x044b:
            r0 = 84
            goto L_0x0460
        L_0x044e:
            r5 = 1
            r8.setMax(r2)     // Catch:{ all -> 0x0459 }
            int r0 = r8.setMin     // Catch:{ all -> 0x0459 }
            if (r0 != 0) goto L_0x045f
            r0 = 277(0x115, float:3.88E-43)
            goto L_0x0460
        L_0x0459:
            r0 = move-exception
            goto L_0x0466
        L_0x045b:
            r5 = 1
            r0 = 92
            goto L_0x0460
        L_0x045f:
            r0 = r7
        L_0x0460:
            r5 = 72
            goto L_0x0134
        L_0x0464:
            r0 = move-exception
            r5 = 1
        L_0x0466:
            r2 = 2
            r6 = 96
            if (r7 < r2) goto L_0x0477
            if (r7 > r10) goto L_0x0477
            r2 = 68
            r2 = 223(0xdf, float:3.12E-43)
            r3 = 72
            r12 = 68
            goto L_0x061a
        L_0x0477:
            byte[] r2 = setMin
            r9 = 72
            byte r10 = r2[r9]
            byte r9 = (byte) r10
            r10 = 963(0x3c3, float:1.35E-42)
            short r10 = (short) r10
            r14 = 55
            byte r2 = r2[r14]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r10, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04a3
            r2 = 17
            if (r7 < r2) goto L_0x04a3
            if (r7 > r13) goto L_0x04a3
        L_0x049b:
            r2 = 223(0xdf, float:3.12E-43)
            r3 = 72
        L_0x049f:
            r12 = 96
            goto L_0x061a
        L_0x04a3:
            byte[] r2 = setMin
            r9 = 72
            byte r10 = r2[r9]
            byte r9 = (byte) r10
            r10 = 9099(0x238b, float:1.275E-41)
            short r10 = (short) r10
            r13 = 4829(0x12dd, float:6.767E-42)
            byte r2 = r2[r13]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r10, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04ca
            r2 = 35
            if (r7 < r2) goto L_0x04ca
            r2 = 40
            if (r7 > r2) goto L_0x04ca
            goto L_0x049b
        L_0x04ca:
            byte[] r2 = setMin
            r9 = 72
            byte r14 = r2[r9]
            byte r9 = (byte) r14
            r14 = r9 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            r15 = 1197(0x4ad, float:1.677E-42)
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r14, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x04f0
            r2 = 78
            if (r7 < r2) goto L_0x04f0
            r2 = 79
            if (r7 > r2) goto L_0x04f0
            goto L_0x049b
        L_0x04f0:
            byte[] r2 = setMin
            r9 = 72
            byte r14 = r2[r9]
            byte r9 = (byte) r14
            byte r2 = r2[r13]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r10, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0517
            r2 = 106(0x6a, float:1.49E-43)
            if (r7 < r2) goto L_0x0517
            r2 = 107(0x6b, float:1.5E-43)
            if (r7 > r2) goto L_0x0517
        L_0x0511:
            r2 = 223(0xdf, float:3.12E-43)
        L_0x0513:
            r3 = 72
            goto L_0x061a
        L_0x0517:
            r2 = 160(0xa0, float:2.24E-43)
            if (r7 < r2) goto L_0x0529
            r2 = 162(0xa2, float:2.27E-43)
            if (r7 > r2) goto L_0x0529
            r2 = 155(0x9b, float:2.17E-43)
            r2 = 223(0xdf, float:3.12E-43)
            r3 = 72
            r12 = 155(0x9b, float:2.17E-43)
            goto L_0x061a
        L_0x0529:
            r2 = 166(0xa6, float:2.33E-43)
            if (r7 < r2) goto L_0x053b
            r2 = 170(0xaa, float:2.38E-43)
            if (r7 > r2) goto L_0x053b
            r2 = 133(0x85, float:1.86E-43)
            r2 = 223(0xdf, float:3.12E-43)
            r3 = 72
            r12 = 133(0x85, float:1.86E-43)
            goto L_0x061a
        L_0x053b:
            byte[] r2 = setMin
            r9 = 72
            byte r14 = r2[r9]
            byte r9 = (byte) r14
            r14 = 1451(0x5ab, float:2.033E-42)
            short r14 = (short) r14
            r15 = 13952(0x3680, float:1.9551E-41)
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r14, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0561
            r2 = 172(0xac, float:2.41E-43)
            if (r7 < r2) goto L_0x0561
            r2 = 176(0xb0, float:2.47E-43)
            if (r7 > r2) goto L_0x0561
            goto L_0x0511
        L_0x0561:
            byte[] r2 = setMin
            r9 = 72
            byte r3 = r2[r9]
            byte r3 = (byte) r3
            r9 = r3 | 976(0x3d0, float:1.368E-42)
            short r9 = (short) r9
            r17 = 54
            byte r2 = r2[r17]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r9, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0587
            r2 = 173(0xad, float:2.42E-43)
            if (r7 < r2) goto L_0x0587
            r2 = 174(0xae, float:2.44E-43)
            if (r7 > r2) goto L_0x0587
            goto L_0x0511
        L_0x0587:
            byte[] r2 = setMin
            r3 = 72
            byte r9 = r2[r3]
            byte r3 = (byte) r9
            r9 = r3 | 2097(0x831, float:2.939E-42)
            short r9 = (short) r9
            r17 = 9575(0x2567, float:1.3417E-41)
            byte r2 = r2[r17]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r9, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05ae
            r2 = 176(0xb0, float:2.47E-43)
            if (r7 < r2) goto L_0x05b0
            r3 = 177(0xb1, float:2.48E-43)
            if (r7 > r3) goto L_0x05b0
            goto L_0x0511
        L_0x05ae:
            r2 = 176(0xb0, float:2.47E-43)
        L_0x05b0:
            byte[] r3 = setMin
            r9 = 72
            byte r2 = r3[r9]
            byte r2 = (byte) r2
            r9 = 15376(0x3c10, float:2.1546E-41)
            short r9 = (short) r9
            byte r3 = r3[r15]
            short r3 = (short) r3
            java.lang.String r2 = length(r2, r9, r3)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05d5
            r2 = 196(0xc4, float:2.75E-43)
            if (r7 < r2) goto L_0x05d5
            r2 = 197(0xc5, float:2.76E-43)
            if (r7 > r2) goto L_0x05d5
            goto L_0x0511
        L_0x05d5:
            byte[] r2 = setMin
            r3 = 72
            byte r9 = r2[r3]
            byte r3 = (byte) r9
            byte r2 = r2[r15]
            short r2 = (short) r2
            java.lang.String r2 = length(r3, r14, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x05f7
            r2 = 202(0xca, float:2.83E-43)
            if (r7 < r2) goto L_0x05f7
            r2 = 223(0xdf, float:3.12E-43)
            if (r7 > r2) goto L_0x05f7
            goto L_0x0513
        L_0x05f7:
            byte[] r2 = setMin
            r3 = 72
            byte r9 = r2[r3]
            byte r9 = (byte) r9
            byte r2 = r2[r13]
            int r2 = -r2
            short r2 = (short) r2
            java.lang.String r2 = length(r9, r10, r2)
            java.lang.Class r2 = java.lang.Class.forName(r2)
            boolean r2 = r2.isInstance(r0)
            if (r2 == 0) goto L_0x0625
            r2 = 218(0xda, float:3.05E-43)
            if (r7 < r2) goto L_0x0625
            r2 = 223(0xdf, float:3.12E-43)
            if (r7 > r2) goto L_0x0625
            goto L_0x049f
        L_0x061a:
            r8.IsOverlapping = r0
            r0 = 35
            r8.setMax(r0)
            r0 = r12
            r3 = 7
            goto L_0x0460
        L_0x0625:
            throw r0
        L_0x0626:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x062e
            throw r1
        L_0x062e:
            goto L_0x0630
        L_0x062f:
            throw r0
        L_0x0630:
            goto L_0x062f
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.register(java.lang.String, java.lang.String, java.lang.String, java.io.File, java.lang.String):o.TitleBarRightButtonView$1");
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:118:0x0339, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x0367, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:145:0x03c7, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:0x0458, code lost:
        if (r10 <= 4) goto L_0x045a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:185:0x04c2, code lost:
        if (r10 <= 58) goto L_0x045a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:201:0x0501, code lost:
        if (r10 <= 120) goto L_0x045a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x015f, code lost:
        r1.setMax(10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x017d, code lost:
        r0 = r10;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x0199, code lost:
        r1.setMax(24);
     */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x0454  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x045e  */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x04be  */
    /* JADX WARNING: Removed duplicated region for block: B:186:0x04c5  */
    /* JADX WARNING: Removed duplicated region for block: B:195:0x04db  */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x04df  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public o.TitleBarRightButtonView.AnonymousClass1<o.setEncryptProxy> resendOtp(java.lang.String r30) {
        /*
            r29 = this;
            o.getGroupId r1 = new o.getGroupId
            r2 = r29
            r0 = r30
            r1.<init>(r2, r0)
            int r0 = getMax
            r0 = r0 & 493(0x1ed, float:6.91E-43)
            byte r0 = (byte) r0
            r3 = 6902(0x1af6, float:9.672E-42)
            short r3 = (short) r3
            r4 = 519(0x207, float:7.27E-43)
            short r4 = (short) r4
            java.lang.String r0 = length(r0, r3, r4)
            int r3 = getMax
            r3 = r3 & 494(0x1ee, float:6.92E-43)
            byte r3 = (byte) r3
            r4 = 9652(0x25b4, float:1.3525E-41)
            short r4 = (short) r4
            byte[] r5 = setMin
            r6 = 49
            byte r5 = r5[r6]
            short r5 = (short) r5
            java.lang.String r3 = length(r3, r4, r5)
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ all -> 0x05d2 }
            r7 = 0
            r5[r7] = r3     // Catch:{ all -> 0x05d2 }
            byte[] r3 = setMin     // Catch:{ all -> 0x05d2 }
            r8 = 72
            byte r3 = r3[r8]     // Catch:{ all -> 0x05d2 }
            byte r3 = (byte) r3     // Catch:{ all -> 0x05d2 }
            r9 = 2790(0xae6, float:3.91E-42)
            short r9 = (short) r9     // Catch:{ all -> 0x05d2 }
            byte[] r10 = setMin     // Catch:{ all -> 0x05d2 }
            r11 = 58
            byte r10 = r10[r11]     // Catch:{ all -> 0x05d2 }
            short r10 = (short) r10     // Catch:{ all -> 0x05d2 }
            java.lang.String r3 = length(r3, r9, r10)     // Catch:{ all -> 0x05d2 }
            java.lang.Class r3 = java.lang.Class.forName(r3)     // Catch:{ all -> 0x05d2 }
            byte[] r10 = setMin     // Catch:{ all -> 0x05d2 }
            r12 = 176(0xb0, float:2.47E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x05d2 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x05d2 }
            r12 = 12725(0x31b5, float:1.7832E-41)
            short r12 = (short) r12     // Catch:{ all -> 0x05d2 }
            byte[] r13 = setMin     // Catch:{ all -> 0x05d2 }
            r14 = 113(0x71, float:1.58E-43)
            byte r13 = r13[r14]     // Catch:{ all -> 0x05d2 }
            short r13 = (short) r13     // Catch:{ all -> 0x05d2 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x05d2 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x05d2 }
            byte[] r13 = setMin     // Catch:{ all -> 0x05d2 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x05d2 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x05d2 }
            byte[] r15 = setMin     // Catch:{ all -> 0x05d2 }
            byte r15 = r15[r11]     // Catch:{ all -> 0x05d2 }
            short r15 = (short) r15     // Catch:{ all -> 0x05d2 }
            java.lang.String r13 = length(r13, r9, r15)     // Catch:{ all -> 0x05d2 }
            java.lang.Class r13 = java.lang.Class.forName(r13)     // Catch:{ all -> 0x05d2 }
            r12[r7] = r13     // Catch:{ all -> 0x05d2 }
            java.lang.reflect.Method r3 = r3.getMethod(r10, r12)     // Catch:{ all -> 0x05d2 }
            java.lang.Object r0 = r3.invoke(r0, r5)     // Catch:{ all -> 0x05d2 }
            java.lang.Object[] r0 = (java.lang.Object[]) r0     // Catch:{ all -> 0x05d2 }
            int r3 = r0.length
            int[] r3 = new int[r3]
            r5 = 0
        L_0x0083:
            int r10 = r0.length
            r12 = 4832(0x12e0, float:6.771E-42)
            if (r5 >= r10) goto L_0x012a
            r10 = r0[r5]
            java.lang.Object[] r15 = new java.lang.Object[r4]     // Catch:{ all -> 0x0121 }
            r15[r7] = r10     // Catch:{ all -> 0x0121 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0121 }
            byte r10 = r10[r8]     // Catch:{ all -> 0x0121 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0121 }
            r14 = 14246(0x37a6, float:1.9963E-41)
            short r14 = (short) r14     // Catch:{ all -> 0x0121 }
            byte[] r16 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r16[r12]     // Catch:{ all -> 0x0121 }
            short r13 = (short) r13     // Catch:{ all -> 0x0121 }
            java.lang.String r10 = length(r10, r14, r13)     // Catch:{ all -> 0x0121 }
            java.lang.Class r10 = java.lang.Class.forName(r10)     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r13[r6]     // Catch:{ all -> 0x0121 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0121 }
            r6 = r13 | 1470(0x5be, float:2.06E-42)
            short r6 = (short) r6     // Catch:{ all -> 0x0121 }
            byte[] r18 = setMin     // Catch:{ all -> 0x0121 }
            r19 = 52
            byte r12 = r18[r19]     // Catch:{ all -> 0x0121 }
            short r12 = (short) r12     // Catch:{ all -> 0x0121 }
            java.lang.String r6 = length(r13, r6, r12)     // Catch:{ all -> 0x0121 }
            java.lang.Class[] r12 = new java.lang.Class[r4]     // Catch:{ all -> 0x0121 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0121 }
            byte r13 = r13[r8]     // Catch:{ all -> 0x0121 }
            byte r13 = (byte) r13     // Catch:{ all -> 0x0121 }
            byte[] r18 = setMin     // Catch:{ all -> 0x0121 }
            byte r4 = r18[r11]     // Catch:{ all -> 0x0121 }
            short r4 = (short) r4     // Catch:{ all -> 0x0121 }
            java.lang.String r4 = length(r13, r9, r4)     // Catch:{ all -> 0x0121 }
            java.lang.Class r4 = java.lang.Class.forName(r4)     // Catch:{ all -> 0x0121 }
            r12[r7] = r4     // Catch:{ all -> 0x0121 }
            java.lang.reflect.Method r4 = r10.getMethod(r6, r12)     // Catch:{ all -> 0x0121 }
            r6 = 0
            java.lang.Object r4 = r4.invoke(r6, r15)     // Catch:{ all -> 0x0121 }
            byte[] r6 = setMin     // Catch:{ all -> 0x0118 }
            byte r6 = r6[r8]     // Catch:{ all -> 0x0118 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 4832(0x12e0, float:6.771E-42)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            short r10 = (short) r10     // Catch:{ all -> 0x0118 }
            java.lang.String r6 = length(r6, r14, r10)     // Catch:{ all -> 0x0118 }
            java.lang.Class r6 = java.lang.Class.forName(r6)     // Catch:{ all -> 0x0118 }
            byte[] r10 = setMin     // Catch:{ all -> 0x0118 }
            r12 = 102(0x66, float:1.43E-43)
            byte r10 = r10[r12]     // Catch:{ all -> 0x0118 }
            byte r10 = (byte) r10     // Catch:{ all -> 0x0118 }
            r12 = 1464(0x5b8, float:2.052E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x0118 }
            byte[] r13 = setMin     // Catch:{ all -> 0x0118 }
            r14 = 11
            byte r13 = r13[r14]     // Catch:{ all -> 0x0118 }
            short r13 = (short) r13     // Catch:{ all -> 0x0118 }
            java.lang.String r10 = length(r10, r12, r13)     // Catch:{ all -> 0x0118 }
            r12 = 0
            java.lang.reflect.Method r6 = r6.getMethod(r10, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Object r4 = r6.invoke(r4, r12)     // Catch:{ all -> 0x0118 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ all -> 0x0118 }
            int r4 = r4.intValue()     // Catch:{ all -> 0x0118 }
            r3[r5] = r4
            int r5 = r5 + 1
            r4 = 1
            r6 = 49
            r14 = 113(0x71, float:1.58E-43)
            goto L_0x0083
        L_0x0118:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0120
            throw r1
        L_0x0120:
            throw r0
        L_0x0121:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x0129
            throw r1
        L_0x0129:
            throw r0
        L_0x012a:
            r9 = 33
            r0 = 0
        L_0x012d:
            int r10 = r0 + 1
            r14 = 22
            r15 = 2
            r0 = r3[r0]     // Catch:{ all -> 0x042f }
            int r0 = r1.setMax(r0)     // Catch:{ all -> 0x042f }
            r12 = 10
            r13 = 34
            r5 = 24
            r6 = 18
            r4 = 23
            switch(r0) {
                case -44: goto L_0x041f;
                case -43: goto L_0x03d2;
                case -42: goto L_0x038d;
                case -41: goto L_0x0385;
                case -40: goto L_0x0381;
                case -39: goto L_0x0373;
                case -38: goto L_0x036f;
                case -37: goto L_0x036c;
                case -36: goto L_0x0352;
                case -35: goto L_0x033e;
                case -34: goto L_0x0324;
                case -33: goto L_0x0309;
                case -32: goto L_0x0305;
                case -31: goto L_0x02ff;
                case -30: goto L_0x02f2;
                case -29: goto L_0x02dc;
                case -28: goto L_0x02cc;
                case -27: goto L_0x02c8;
                case -26: goto L_0x02b2;
                case -25: goto L_0x0242;
                case -24: goto L_0x022f;
                case -23: goto L_0x022b;
                case -22: goto L_0x0227;
                case -21: goto L_0x020c;
                case -20: goto L_0x0208;
                case -19: goto L_0x01ff;
                case -18: goto L_0x01ec;
                case -17: goto L_0x01e8;
                case -16: goto L_0x01e4;
                case -15: goto L_0x01e0;
                case -14: goto L_0x01dc;
                case -13: goto L_0x01d1;
                case -12: goto L_0x01c0;
                case -11: goto L_0x01bb;
                case -10: goto L_0x01b7;
                case -9: goto L_0x019d;
                case -8: goto L_0x0185;
                case -7: goto L_0x0182;
                case -6: goto L_0x017f;
                case -5: goto L_0x0173;
                case -4: goto L_0x0163;
                case -3: goto L_0x015b;
                case -2: goto L_0x0152;
                case -1: goto L_0x014f;
                default: goto L_0x0145;
            }     // Catch:{ all -> 0x042f }
        L_0x0145:
            r9 = 83
        L_0x0147:
            r12 = 1
        L_0x0148:
            r13 = 4832(0x12e0, float:6.771E-42)
            r15 = 0
            r19 = 113(0x71, float:1.58E-43)
            goto L_0x042a
        L_0x014f:
            r0 = 115(0x73, float:1.61E-43)
            goto L_0x012d
        L_0x0152:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x042f }
            java.lang.Throwable r0 = (java.lang.Throwable) r0     // Catch:{ all -> 0x042f }
            throw r0     // Catch:{ all -> 0x042f }
        L_0x015b:
            int r0 = setMax     // Catch:{ all -> 0x042f }
            r1.getMin = r0     // Catch:{ all -> 0x042f }
        L_0x015f:
            r1.setMax(r12)     // Catch:{ all -> 0x042f }
            goto L_0x0145
        L_0x0163:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x042f }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            getMin = r0     // Catch:{ all -> 0x042f }
            goto L_0x0145
        L_0x0173:
            r1.setMax(r14)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            if (r0 != 0) goto L_0x017d
            r0 = 26
            goto L_0x012d
        L_0x017d:
            r0 = r10
            goto L_0x012d
        L_0x017f:
            r0 = 59
            goto L_0x012d
        L_0x0182:
            r0 = 104(0x68, float:1.46E-43)
            goto L_0x012d
        L_0x0185:
            o.getPageLogToken r0 = new o.getPageLogToken     // Catch:{ all -> 0x042f }
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x02ad }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x042f }
            o.lock r4 = (o.lock) r4     // Catch:{ all -> 0x042f }
            r0.<init>(r4)     // Catch:{ all -> 0x042f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
        L_0x0199:
            r1.setMax(r5)     // Catch:{ all -> 0x042f }
            goto L_0x0145
        L_0x019d:
            r1.getMin = r15     // Catch:{ all -> 0x042f }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x042f }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x042f }
            o.RedDotManager r4 = (o.RedDotManager) r4     // Catch:{ all -> 0x042f }
            o.TitleBarRightButtonView$1 r0 = r0.doOnNext(r4)     // Catch:{ all -> 0x042f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
            goto L_0x0199
        L_0x01b7:
            r0 = 74
            goto L_0x012d
        L_0x01bb:
            int r0 = getMin     // Catch:{ all -> 0x042f }
            r1.getMin = r0     // Catch:{ all -> 0x042f }
            goto L_0x015f
        L_0x01c0:
            r4 = 1
            r1.getMin = r4     // Catch:{ all -> 0x042f }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r0 = 19
            r1.setMax(r0)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            setMax = r0     // Catch:{ all -> 0x042f }
            goto L_0x0145
        L_0x01d1:
            r1.setMax(r9)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            if (r0 != 0) goto L_0x017d
            r0 = 57
            goto L_0x012d
        L_0x01dc:
            r0 = 142(0x8e, float:1.99E-43)
            goto L_0x012d
        L_0x01e0:
            r0 = 65
            goto L_0x012d
        L_0x01e4:
            r0 = 108(0x6c, float:1.51E-43)
            goto L_0x012d
        L_0x01e8:
            r0 = 83
            goto L_0x012d
        L_0x01ec:
            r1.setMax(r13)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            if (r0 == 0) goto L_0x01fb
            r4 = 1
            if (r0 == r4) goto L_0x01f7
            goto L_0x01fb
        L_0x01f7:
            r0 = 98
            goto L_0x012d
        L_0x01fb:
            r0 = 62
            goto L_0x012d
        L_0x01ff:
            r4 = 1
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x042f }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x042f }
            return r0
        L_0x0208:
            r0 = 61
            goto L_0x012d
        L_0x020c:
            r1.getMin = r15     // Catch:{ all -> 0x042f }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x042f }
            o.TitleBarRightButtonView$1 r0 = (o.TitleBarRightButtonView.AnonymousClass1) r0     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x042f }
            o.RedDotDrawable r4 = (o.RedDotDrawable) r4     // Catch:{ all -> 0x042f }
            o.TitleBarRightButtonView$1 r0 = r0.map(r4)     // Catch:{ all -> 0x042f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
            goto L_0x0199
        L_0x0227:
            r0 = 33
            goto L_0x012d
        L_0x022b:
            r0 = 82
            goto L_0x012d
        L_0x022f:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x02ad }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x042f }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x042f }
            o.setStatusCode r0 = r0.registrationMapper     // Catch:{ all -> 0x042f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
            goto L_0x0199
        L_0x0242:
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x02ad }
            r1.setMax(r6)     // Catch:{ all -> 0x02ad }
            r1.setMax(r4)     // Catch:{ all -> 0x02ad }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x02ad }
            java.lang.Object[] r4 = new java.lang.Object[r12]     // Catch:{ all -> 0x02a4 }
            r4[r7] = r0     // Catch:{ all -> 0x02a4 }
            byte[] r0 = setMin     // Catch:{ all -> 0x02a4 }
            byte r0 = r0[r8]     // Catch:{ all -> 0x02a4 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x02a4 }
            r6 = 9081(0x2379, float:1.2725E-41)
            short r6 = (short) r6     // Catch:{ all -> 0x02a4 }
            byte[] r12 = setMin     // Catch:{ all -> 0x02a4 }
            r13 = 4832(0x12e0, float:6.771E-42)
            byte r12 = r12[r13]     // Catch:{ all -> 0x02a4 }
            short r12 = (short) r12     // Catch:{ all -> 0x02a4 }
            java.lang.String r0 = length(r0, r6, r12)     // Catch:{ all -> 0x02a4 }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x02a4 }
            byte[] r6 = setMin     // Catch:{ all -> 0x02a4 }
            r12 = 113(0x71, float:1.58E-43)
            byte r6 = r6[r12]     // Catch:{ all -> 0x02a4 }
            byte r6 = (byte) r6     // Catch:{ all -> 0x02a4 }
            r12 = 3602(0xe12, float:5.047E-42)
            short r12 = (short) r12     // Catch:{ all -> 0x02a4 }
            byte[] r13 = setMin     // Catch:{ all -> 0x02a4 }
            r21 = 102(0x66, float:1.43E-43)
            byte r13 = r13[r21]     // Catch:{ all -> 0x02a4 }
            short r13 = (short) r13     // Catch:{ all -> 0x02a4 }
            java.lang.String r6 = length(r6, r12, r13)     // Catch:{ all -> 0x02a4 }
            r12 = 1
            java.lang.Class[] r13 = new java.lang.Class[r12]     // Catch:{ all -> 0x02a4 }
            byte[] r12 = setMin     // Catch:{ all -> 0x02a4 }
            byte r12 = r12[r8]     // Catch:{ all -> 0x02a4 }
            byte r12 = (byte) r12     // Catch:{ all -> 0x02a4 }
            r15 = 633(0x279, float:8.87E-43)
            short r15 = (short) r15     // Catch:{ all -> 0x02a4 }
            byte[] r22 = setMin     // Catch:{ all -> 0x02a4 }
            byte r9 = r22[r11]     // Catch:{ all -> 0x02a4 }
            short r9 = (short) r9     // Catch:{ all -> 0x02a4 }
            java.lang.String r9 = length(r12, r15, r9)     // Catch:{ all -> 0x02a4 }
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch:{ all -> 0x02a4 }
            r13[r7] = r9     // Catch:{ all -> 0x02a4 }
            java.lang.reflect.Method r0 = r0.getMethod(r6, r13)     // Catch:{ all -> 0x02a4 }
            r6 = 0
            java.lang.Object r0 = r0.invoke(r6, r4)     // Catch:{ all -> 0x02a4 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
            goto L_0x0199
        L_0x02a4:
            r0 = move-exception
            java.lang.Throwable r4 = r0.getCause()     // Catch:{ all -> 0x042f }
            if (r4 == 0) goto L_0x02ac
            throw r4     // Catch:{ all -> 0x042f }
        L_0x02ac:
            throw r0     // Catch:{ all -> 0x042f }
        L_0x02ad:
            r0 = move-exception
            r9 = 83
            goto L_0x0433
        L_0x02b2:
            o.getIgnoreInputAPIList r0 = new o.getIgnoreInputAPIList     // Catch:{ all -> 0x042f }
            r9 = 1
            r1.getMin = r9     // Catch:{ all -> 0x042f }
            r1.setMax(r6)     // Catch:{ all -> 0x042f }
            r1.setMax(r4)     // Catch:{ all -> 0x042f }
            java.lang.Object r4 = r1.isInside     // Catch:{ all -> 0x042f }
            o.setStatusCode r4 = (o.setStatusCode) r4     // Catch:{ all -> 0x042f }
            r0.<init>(r4)     // Catch:{ all -> 0x042f }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x042f }
            goto L_0x0199
        L_0x02c8:
            r0 = 84
            goto L_0x042b
        L_0x02cc:
            r1.setMax(r13)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            if (r0 == 0) goto L_0x02d8
            r4 = 1
            r0 = 145(0x91, float:2.03E-43)
            goto L_0x042b
        L_0x02d8:
            r0 = 67
            goto L_0x042b
        L_0x02dc:
            r1.setMax(r13)     // Catch:{ all -> 0x042f }
            int r0 = r1.setMin     // Catch:{ all -> 0x042f }
            r4 = 16
            r9 = 83
            if (r0 == r4) goto L_0x02ee
            if (r0 == r9) goto L_0x02ea
            goto L_0x02ee
        L_0x02ea:
            r0 = 155(0x9b, float:2.17E-43)
            goto L_0x042b
        L_0x02ee:
            r0 = 147(0x93, float:2.06E-43)
            goto L_0x042b
        L_0x02f2:
            r9 = 83
            r1.setMax(r14)     // Catch:{ all -> 0x0321 }
            int r0 = r1.setMin     // Catch:{ all -> 0x0321 }
            if (r0 != 0) goto L_0x042a
            r0 = 97
            goto L_0x042b
        L_0x02ff:
            r9 = 83
            r0 = 106(0x6a, float:1.49E-43)
            goto L_0x042b
        L_0x0305:
            r0 = 72
            goto L_0x012d
        L_0x0309:
            r5 = 1
            r9 = 83
            r1.getMin = r5     // Catch:{ all -> 0x0321 }
            r1.setMax(r6)     // Catch:{ all -> 0x0321 }
            r1.setMax(r4)     // Catch:{ all -> 0x0321 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0321 }
            int r0 = super.hashCode()     // Catch:{ all -> 0x0321 }
            r1.getMin = r0     // Catch:{ all -> 0x0321 }
            r1.setMax(r12)     // Catch:{ all -> 0x0321 }
            goto L_0x0147
        L_0x0321:
            r0 = move-exception
            goto L_0x0432
        L_0x0324:
            r9 = 83
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x03d0 }
            r1.setMax(r6)     // Catch:{ all -> 0x0321 }
            r1.setMax(r4)     // Catch:{ all -> 0x0321 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0321 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0321 }
            o.ConnectionLog$1 r0 = r0.createRegistrationData()     // Catch:{ all -> 0x0321 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0321 }
        L_0x0339:
            r1.setMax(r5)     // Catch:{ all -> 0x0321 }
            goto L_0x0147
        L_0x033e:
            r9 = 83
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x03d0 }
            r1.setMax(r6)     // Catch:{ all -> 0x0321 }
            r1.setMax(r4)     // Catch:{ all -> 0x0321 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x0321 }
            o.lock r0 = (o.lock) r0     // Catch:{ all -> 0x0321 }
            o.getLogType r0 = r0.regManager     // Catch:{ all -> 0x0321 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x0321 }
            goto L_0x0339
        L_0x0352:
            r9 = 83
            r12 = 1
            r1.getMin = r12     // Catch:{ all -> 0x03d0 }
            r1.setMax(r6)     // Catch:{ all -> 0x03d0 }
            r1.setMax(r4)     // Catch:{ all -> 0x03d0 }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x03d0 }
            o.getLogType r0 = (o.getLogType) r0     // Catch:{ all -> 0x03d0 }
            java.lang.String r0 = r0.getPhoneNumber()     // Catch:{ all -> 0x03d0 }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03d0 }
        L_0x0367:
            r1.setMax(r5)     // Catch:{ all -> 0x03d0 }
            goto L_0x0148
        L_0x036c:
            r0 = 3
            goto L_0x012d
        L_0x036f:
            r0 = 119(0x77, float:1.67E-43)
            goto L_0x012d
        L_0x0373:
            r9 = 83
            r12 = 1
            r1.setMax(r14)     // Catch:{ all -> 0x03d0 }
            int r0 = r1.setMin     // Catch:{ all -> 0x03d0 }
            if (r0 != 0) goto L_0x042a
            r0 = 141(0x8d, float:1.98E-43)
            goto L_0x042b
        L_0x0381:
            r0 = 58
            goto L_0x012d
        L_0x0385:
            r9 = 83
            r12 = 1
            java.lang.String r0 = ""
            r1.IsOverlapping = r0     // Catch:{ all -> 0x03d0 }
            goto L_0x0367
        L_0x038d:
            r9 = 83
            r12 = 1
            byte[] r0 = setMin     // Catch:{ all -> 0x03d0 }
            byte r0 = r0[r8]     // Catch:{ all -> 0x03d0 }
            byte r0 = (byte) r0     // Catch:{ all -> 0x03d0 }
            r4 = 3032(0xbd8, float:4.249E-42)
            short r4 = (short) r4     // Catch:{ all -> 0x03d0 }
            byte[] r6 = setMin     // Catch:{ all -> 0x03d0 }
            r13 = 4832(0x12e0, float:6.771E-42)
            byte r6 = r6[r13]     // Catch:{ all -> 0x03ce }
            short r6 = (short) r6     // Catch:{ all -> 0x03ce }
            java.lang.String r0 = length(r0, r4, r6)     // Catch:{ all -> 0x03ce }
            java.lang.Class r0 = java.lang.Class.forName(r0)     // Catch:{ all -> 0x03ce }
            byte[] r4 = setMin     // Catch:{ all -> 0x03ce }
            r6 = 10472(0x28e8, float:1.4674E-41)
            byte r4 = r4[r6]     // Catch:{ all -> 0x03ce }
            byte r4 = (byte) r4     // Catch:{ all -> 0x03ce }
            r6 = 618(0x26a, float:8.66E-43)
            short r6 = (short) r6     // Catch:{ all -> 0x03ce }
            byte[] r15 = setMin     // Catch:{ all -> 0x03ce }
            r19 = 113(0x71, float:1.58E-43)
            byte r15 = r15[r19]     // Catch:{ all -> 0x03cb }
            short r15 = (short) r15     // Catch:{ all -> 0x03cb }
            java.lang.String r4 = length(r4, r6, r15)     // Catch:{ all -> 0x03cb }
            java.lang.reflect.Field r0 = r0.getField(r4)     // Catch:{ all -> 0x03cb }
            r15 = 0
            java.lang.Object r0 = r0.get(r15)     // Catch:{ all -> 0x041d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x041d }
        L_0x03c7:
            r1.setMax(r5)     // Catch:{ all -> 0x041d }
            goto L_0x042a
        L_0x03cb:
            r0 = move-exception
            r15 = 0
            goto L_0x0438
        L_0x03ce:
            r0 = move-exception
            goto L_0x0435
        L_0x03d0:
            r0 = move-exception
            goto L_0x0433
        L_0x03d2:
            r9 = 83
            r12 = 1
            r13 = 4832(0x12e0, float:6.771E-42)
            r15 = 0
            r19 = 113(0x71, float:1.58E-43)
            r0 = 6
            r1.getMin = r0     // Catch:{ all -> 0x041d }
            r1.setMax(r6)     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r23 = r0
            o.ConnectionLog$1 r23 = (o.ConnectionLog.AnonymousClass1) r23     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r24 = r0
            java.lang.String r24 = (java.lang.String) r24     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r25 = r0
            java.lang.String r25 = (java.lang.String) r25     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r26 = r0
            java.lang.String r26 = (java.lang.String) r26     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r27 = r0
            java.lang.String r27 = (java.lang.String) r27     // Catch:{ all -> 0x041d }
            r1.setMax(r4)     // Catch:{ all -> 0x041d }
            java.lang.Object r0 = r1.isInside     // Catch:{ all -> 0x041d }
            r28 = r0
            java.lang.Boolean r28 = (java.lang.Boolean) r28     // Catch:{ all -> 0x041d }
            o.TitleBarRightButtonView$1 r0 = r23.checkRegistrationAndSendOtp(r24, r25, r26, r27, r28)     // Catch:{ all -> 0x041d }
            r1.IsOverlapping = r0     // Catch:{ all -> 0x041d }
            goto L_0x03c7
        L_0x041d:
            r0 = move-exception
            goto L_0x0438
        L_0x041f:
            r9 = 83
            r12 = 1
            r13 = 4832(0x12e0, float:6.771E-42)
            r15 = 0
            r19 = 113(0x71, float:1.58E-43)
            r0 = 27
            goto L_0x042b
        L_0x042a:
            r0 = r10
        L_0x042b:
            r9 = 33
            goto L_0x012d
        L_0x042f:
            r0 = move-exception
            r9 = 83
        L_0x0432:
            r12 = 1
        L_0x0433:
            r13 = 4832(0x12e0, float:6.771E-42)
        L_0x0435:
            r15 = 0
            r19 = 113(0x71, float:1.58E-43)
        L_0x0438:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = 9099(0x238b, float:1.275E-41)
            short r6 = (short) r6
            r17 = 4829(0x12dd, float:6.767E-42)
            byte r4 = r4[r17]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x045e
            r4 = 3
            if (r10 < r4) goto L_0x045f
            r6 = 4
            if (r10 > r6) goto L_0x045f
        L_0x045a:
            r21 = 64
            goto L_0x05c5
        L_0x045e:
            r4 = 3
        L_0x045f:
            byte[] r6 = setMin
            byte r4 = r6[r8]
            byte r4 = (byte) r4
            r5 = r4 | 976(0x3d0, float:1.368E-42)
            short r5 = (short) r5
            r17 = 54
            byte r6 = r6[r17]
            short r6 = (short) r6
            java.lang.String r4 = length(r4, r5, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0481
            r4 = 21
            if (r10 < r4) goto L_0x0481
            if (r10 > r14) goto L_0x0481
            goto L_0x045a
        L_0x0481:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = 1451(0x5ab, float:2.033E-42)
            short r6 = (short) r6
            r14 = 13952(0x3680, float:1.9551E-41)
            byte r4 = r4[r14]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04a5
            r4 = 31
            if (r10 < r4) goto L_0x04a5
            r4 = 33
            if (r10 > r4) goto L_0x04a5
            goto L_0x045a
        L_0x04a5:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            r5 = 15410(0x3c32, float:2.1594E-41)
            short r5 = (short) r5
            r6 = r5 & 239(0xef, float:3.35E-43)
            short r6 = (short) r6
            java.lang.String r4 = length(r4, r5, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x04c5
            r4 = 33
            if (r10 < r4) goto L_0x04c7
            if (r10 > r11) goto L_0x04c7
            goto L_0x045a
        L_0x04c5:
            r4 = 33
        L_0x04c7:
            r14 = 68
            if (r10 < r14) goto L_0x04d3
            if (r10 > r8) goto L_0x04d3
            r5 = 144(0x90, float:2.02E-43)
            r21 = 144(0x90, float:2.02E-43)
            goto L_0x05c5
        L_0x04d3:
            r14 = 99
            if (r10 < r14) goto L_0x04df
            r14 = 103(0x67, float:1.44E-43)
            if (r10 > r14) goto L_0x04df
            r21 = 1
            goto L_0x05c5
        L_0x04df:
            byte[] r14 = setMin
            byte r4 = r14[r8]
            byte r4 = (byte) r4
            r7 = r4 | 4944(0x1350, float:6.928E-42)
            short r7 = (short) r7
            r20 = 13
            byte r14 = r14[r20]
            int r14 = -r14
            short r14 = (short) r14
            java.lang.String r4 = length(r4, r7, r14)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0505
            r4 = 119(0x77, float:1.67E-43)
            if (r10 < r4) goto L_0x0507
            r7 = 120(0x78, float:1.68E-43)
            if (r10 > r7) goto L_0x0507
            goto L_0x045a
        L_0x0505:
            r4 = 119(0x77, float:1.67E-43)
        L_0x0507:
            byte[] r7 = setMin
            byte r14 = r7[r8]
            byte r14 = (byte) r14
            r4 = r14 | 2097(0x831, float:2.939E-42)
            short r4 = (short) r4
            r20 = 9575(0x2567, float:1.3417E-41)
            byte r7 = r7[r20]
            short r7 = (short) r7
            java.lang.String r4 = length(r14, r4, r7)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x052c
            r4 = 137(0x89, float:1.92E-43)
            if (r10 < r4) goto L_0x052c
            r4 = 142(0x8e, float:1.99E-43)
            if (r10 > r4) goto L_0x052c
            goto L_0x045a
        L_0x052c:
            r4 = 151(0x97, float:2.12E-43)
            if (r10 < r4) goto L_0x053a
            r4 = 155(0x9b, float:2.17E-43)
            if (r10 > r4) goto L_0x053a
            r4 = 103(0x67, float:1.44E-43)
            r21 = 103(0x67, float:1.44E-43)
            goto L_0x05c5
        L_0x053a:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            r14 = 963(0x3c3, float:1.35E-42)
            short r14 = (short) r14
            r20 = 55
            byte r4 = r4[r20]
            int r4 = -r4
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0561
            r4 = 147(0x93, float:2.06E-43)
            if (r10 < r4) goto L_0x0561
            r4 = 148(0x94, float:2.07E-43)
            if (r10 > r4) goto L_0x0561
        L_0x055e:
            r21 = 2
            goto L_0x05c5
        L_0x0561:
            byte[] r4 = setMin
            byte r7 = r4[r8]
            byte r7 = (byte) r7
            r14 = r7 | 5841(0x16d1, float:8.185E-42)
            short r14 = (short) r14
            r16 = 1197(0x4ad, float:1.677E-42)
            byte r4 = r4[r16]
            short r4 = (short) r4
            java.lang.String r4 = length(r7, r14, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x0585
            r4 = 148(0x94, float:2.07E-43)
            if (r10 < r4) goto L_0x0585
            r4 = 155(0x9b, float:2.17E-43)
            if (r10 > r4) goto L_0x0585
        L_0x0584:
            goto L_0x055e
        L_0x0585:
            byte[] r4 = setMin
            byte r4 = r4[r8]
            byte r4 = (byte) r4
            java.lang.String r4 = length(r4, r5, r6)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x05a1
            r4 = 149(0x95, float:2.09E-43)
            if (r10 < r4) goto L_0x05a1
            r4 = 150(0x96, float:2.1E-43)
            if (r10 > r4) goto L_0x05a1
            goto L_0x0584
        L_0x05a1:
            byte[] r4 = setMin
            byte r5 = r4[r8]
            byte r5 = (byte) r5
            r6 = r5 | 2097(0x831, float:2.939E-42)
            short r6 = (short) r6
            r7 = 9575(0x2567, float:1.3417E-41)
            byte r4 = r4[r7]
            short r4 = (short) r4
            java.lang.String r4 = length(r5, r6, r4)
            java.lang.Class r4 = java.lang.Class.forName(r4)
            boolean r4 = r4.isInstance(r0)
            if (r4 == 0) goto L_0x05d1
            r4 = 150(0x96, float:2.1E-43)
            if (r10 < r4) goto L_0x05d1
            r4 = 155(0x9b, float:2.17E-43)
            if (r10 > r4) goto L_0x05d1
            goto L_0x055e
        L_0x05c5:
            r1.IsOverlapping = r0
            r0 = 35
            r1.setMax(r0)
            r0 = r21
            r7 = 0
            goto L_0x042b
        L_0x05d1:
            throw r0
        L_0x05d2:
            r0 = move-exception
            java.lang.Throwable r1 = r0.getCause()
            if (r1 == 0) goto L_0x05da
            throw r1
        L_0x05da:
            goto L_0x05dc
        L_0x05db:
            throw r0
        L_0x05dc:
            goto L_0x05db
        */
        throw new UnsupportedOperationException("Method not decompiled: o.lock.resendOtp(java.lang.String):o.TitleBarRightButtonView$1");
    }

    @Inject
    public lock(DialogLayout dialogLayout, positiveButtonClicked positivebuttonclicked, getLogType getlogtype, waitOnFinalized waitonfinalized, setParentId setparentid, setStatusCode setstatuscode, access$2300 access_2300, CommonExitPerform.CollectJsApiHandler collectJsApiHandler, PackageInstallCallback packageInstallCallback, BackKeyDownPoint backKeyDownPoint, getPerformanceTracker getperformancetracker, getPageId getpageid, CreatePromptParam.PositiveListener positiveListener) {
        try {
            this.accountEntityDataFactory = dialogLayout;
            try {
                this.avatarEntityDataFactory = positivebuttonclicked;
                try {
                    this.pushNotificationEntityDataFactory = collectJsApiHandler;
                    try {
                        this.generalPreferencesDataFactory = packageInstallCallback;
                        try {
                            this.regManager = getlogtype;
                            try {
                                this.deepLinkPayloadManager = waitonfinalized;
                                this.registrationEntityDataFactory = setparentid;
                            } catch (ClassCastException e) {
                                e = e;
                                throw e;
                            }
                        } catch (NumberFormatException e2) {
                            e = e2;
                            throw e;
                        }
                    } catch (NullPointerException e3) {
                        e = e3;
                        throw e;
                    }
                } catch (IllegalArgumentException e4) {
                    e = e4;
                    throw e;
                }
            } catch (ArrayStoreException e5) {
                e = e5;
                throw e;
            }
            try {
                this.registrationMapper = setstatuscode;
                try {
                    this.securityEntityDataFactory = access_2300;
                    try {
                        this.securityGuardFacade = backKeyDownPoint;
                        this.deviceInformationProvider = getperformancetracker;
                        this.deepLinkEntityDataFactory = getpageid;
                        this.geocodeEntityRepository = positiveListener;
                    } catch (IllegalStateException e6) {
                        e = e6;
                        throw e;
                    }
                } catch (ArrayStoreException e7) {
                    e = e7;
                    throw e;
                }
            } catch (IndexOutOfBoundsException e8) {
                e = e8;
                throw e;
            }
        } catch (UnsupportedOperationException e9) {
            e = e9;
            throw e;
        }
    }
}
