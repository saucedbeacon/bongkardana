package com.alibaba.griver.api.common.config;

import java.util.HashMap;
import java.util.Map;

public class GriverConfigConstants {
    public static final String APP_PREDOWNLOAD_CONFIG = "appPreDownloadConfig";
    public static final String DEFAULT_ABOUT_URL = "https://cdn.marmot-cloud.com/page/miniprogram-about/index.html";
    public static final String DEFAULT_ACCESS_EXTERNAL_PATH_WHITE_LIST = "";
    public static final String DEFAULT_APP_INFO_UPDATE = "{\"preReqRate\":604800,\"updateReqRate\":1800,\"app_async_update_delay\":5,\"expireTime\":30}";
    public static final String DEFAULT_APP_POOL_SIZE = "3";
    public static final int DEFAULT_ASYNC_DELAY = 5;
    public static final long DEFAULT_ASYNC_UPDATE_PERIOD = 1800;
    public static final String DEFAULT_CHOOSE_FILE_SIZE_THRESHOLD = "50";
    public static final String DEFAULT_CONFIG_ARRIVAL_TEST = "{\"enable\":true,\"value\":\"10\"}";
    public static final String DEFAULT_CUSTOM_WEB_SETTINGS = "YES";
    public static final String DEFAULT_DIAG_DEV_TOOL_URL = "https://cdn.marmot-cloud.com/page/g_diagnostic_tool/index.html";
    public static final String DEFAULT_DISABLED = "NO";
    public static final String DEFAULT_DISABLE_AUTO_DOWNLOAD = "NO";
    public static final String DEFAULT_DOWNLOAD_APP_PATH = "inner";
    public static final int DEFAULT_DOWNLOAD_APP_RETRY_TIME = 2;
    public static final String DEFAULT_EMBEDED_WEBVIEW_HTTP_CONTROL = "{\"enable\":false,\"whitelist\":[]}";
    public static final boolean DEFAULT_EMBEDED_WEBVIEW_HTTP_ENABLE = false;
    public static final String DEFAULT_ENABLED = "YES";
    public static final String DEFAULT_ENABLE_BASE64_TO_IS = "YES";
    public static final String DEFAULT_ENABLE_INTERCEPT_JS_IN_PUSHWINDOW = "no";
    public static final String DEFAULT_ENABLE_WEBVIEW_DATABASE = "NO";
    public static final String DEFAULT_H5_CONFIG_CONTROL = "{\"disableAutoDownload\": false}";
    public static final String DEFAULT_H5_PATCH_JS_BRIDGE = "";
    public static final int DEFAULT_HTTP_REQUEST_TIMEOUT = 60000;
    public static final String DEFAULT_JSAPI_MONITOR_SAMPLE_RATE = "0.1";
    public static final String DEFAULT_MONITOR_ANALYTICS_CONFIG = "{\"enable\":true,\"blacklist\":[]}";
    public static final boolean DEFAULT_MONITOR_ANALYTICS_ENABLE = true;
    public static final String DEFAULT_MONITOR_SWITCH = "{\"mainSwitchEnable\":true,\"jSApiSwitchEnable\":false}";
    public static final String DEFAULT_MP_APP_PROCESS_SIZE = "1";
    public static final String DEFAULT_MP_ENABLE_AUTH_CONTENT = "NO";
    public static final String DEFAULT_MP_MULTI_PROCESS_SWITCH = "NO";
    public static final String DEFAULT_MP_USE_NATIVE_CANVAS_VIEW = "NO";
    public static final String DEFAULT_MP_USE_SYSTEM_EMBEDVIEW = "YES";
    public static final long DEFAULT_PREPARE_APP_TIMEOUT = 30;
    public static final String DEFAULT_REQUEST_HTTP_CONTROL = "{\"enable\":false,\"whitelist\":[]}";
    public static final boolean DEFAULT_REQUEST_HTTP_ENABLE = false;
    public static final String DEFAULT_RESERVED_PARAMS_LIST = "[\"isTinyApp\",\"isH5app\",\"onlineHost\",\"bundlePath\",\"enableTabBar\",\"tabBarItems\",\"templateApp\",\"templateAppId\",\"tabItemCount\",\"tabBarJson\",\"launchParamsTag\",\"tinyPubRes\",\"restartFromToken\",\"restartFromLpid\",\"isRestart\",\"appVersion\",\"version\",\"nbupdate\",\"nboffline\",\"nburl\",\"nboffmode\",\"nup\",\"nol\",\"nbu\",\"isRemoteDebug\",\"MINI-PROGRAM-WEB-VIEW-TAG\",\"startAppSessionId\",\"appEngineType\",\"appxRouteFramework\"]";
    public static final String DEFAULT_SHOULD_VERIFY_APP = "YES";
    public static final long DEFAULT_SYNC_UPDATE_PERIOD = 604800;
    public static final String DEFAULT_SYSTEM_JSAPI_LIST = "[\"createWorker\",\"registerWorker\",\"NBComponent.render\",\"NBComponent.sendMessage\",\"postWebViewMessage\",\"internalAPI\",\"loadSubPackage\",\"checkJSAPI\",\"postMessage\",\"switchTab\",\"navigateToMiniProgram\",\"navigateBackMiniProgram\",\"getRunScene\",\"popTo\",\"pushWindow\",\"popWindow\",\"handleLoggingAction\",\"h5PageReload\"]";
    public static final String DEFAULT_USE_CUSTOM_CHROME_CLIENT = "YES";
    public static final String DEFAULT_WEBVIEW_CONFIG = "{\n  \"h5_enableExternalWebView\": \"YES\",\n  \"h5_externalWebViewSdkVersion\": {\n    \"min\": 11,\n    \"max\": 29\n  }\n}";
    public static final String DEFAULT_WHITE_SCREEN_CONFIG = "{\"enable\": true, \"HTMLWhiteScreenThreshold\": 10, \"MiniWhiteScreenThreshold\": 5}";
    public static final boolean DEFAULT_WHITE_SCREEN_ENABLE = true;
    public static final int DEFAULT_WHITE_SCREEN_H5_THRESHOLD = 10;
    public static final int DEFAULT_WHITE_SCREEN_MINI_THRESHOLD = 5;
    public static final String DEFAULT_WORKER_CONFIG = "{\n\"h5_force_web_worker\": \"NO\"\n}";
    public static final String KEY_ABOUT_PAGE_URL = "about_page_url_overwrite";
    public static final String KEY_ACCESS_EXTERNAL_PATH_WHITE_LIST = "allow_access_external_storage_white_list";
    public static final String KEY_APP_CONFIGURATION = "apps";
    public static final String KEY_APP_INFO_UPDATE_CONFIG = "h5_package_config";
    public static final String KEY_APP_INFO_UPDATE_CONFIG_OVERRIDING = "h5_package_config_overriding";
    public static final String KEY_APP_POOL_SIZE = "mini_app_pool_size";
    public static final String KEY_APP_SHARED_PACKAGES = "sharedPackages";
    public static final String KEY_BRIDGE_NOT_FOUND_EVENT_SWITCH = "switch_not_found_event_disabled";
    public static final String KEY_CHOOSE_FILE_SIZE_THRESHOLD = "mp_choose_file_size_threshold";
    public static final String KEY_CONFIG_ARRIVAL_TEST = "mini_config_arrival_test";
    public static final String KEY_CUSTOM_WEB_SETTINGS = "h5_custom_websettings";
    public static final String KEY_DIAG_DEV_TOOL_DISABLED = "diag_dev_tool_disabled";
    public static final String KEY_DIAG_DEV_TOOL_URL = "diag_dev_tool_url_overwrite";
    public static final String KEY_DOWNLOAD_APP_PATH = "app_download_path";
    public static final String KEY_DOWNLOAD_APP_RETRY_TIME = "app_download_retry_time";
    public static final String KEY_EMBEDED_WEBVIEW_HTTP_CONTROL = "embedWebViewHttpControl";
    public static final String KEY_ENABLE_BASE64_TO_IS = "h5_base64ToInputStream";
    public static final String KEY_ENABLE_INTERCEPT_JS_IN_PUSHWINDOW = "h5_enableInterceptJavascriptInPushWindow";
    public static final String KEY_ENABLE_WEBVIEW_DATABASE = "h5_enableDatabase";
    public static final String KEY_H5_CONFIG_CONTROL = "h5_container_control_config";
    public static final String KEY_H5_PATCH_JS_BRIDGE = "h5_patchJsBridge";
    public static final String KEY_H5_URL_BLACK_LIST = "blacklist";
    public static final String KEY_H5_URL_WHITE_LIST = "whitelist";
    public static final String KEY_JSAPI_BAN_CONFIG = "h5_jsapi_ban_config";
    public static final String KEY_JSAPI_PERMISSION = "jsapiPermission";
    public static final String KEY_LOAD_LOCAL_IMAGE_PATH_WHITE_LIST = "h5_load_local_image_path_white_list";
    public static final String KEY_MINI_CONFIGURATION = "mini";
    public static final String KEY_MONITOR_ANALYTICS_BLACKLIST = "blacklist";
    public static final String KEY_MONITOR_ANALYTICS_CONFIG = "miniAnalyticsMonitorConfig";
    public static final String KEY_MONITOR_ANALYTICS_ENABLE = "enable";
    public static final String KEY_MONITOR_SWITCH = "h5_container_monitor_switch";
    public static final String KEY_MP_APP_PROCESS_SIZE = "mp_app_process_size";
    public static final String KEY_MP_MULTI_PROCESS_SWITCH = "mp_multi_process_switch";
    public static final String KEY_MP_USE_NATIVE_CANVAS_VIEW = "mini_use_native_canvas_view";
    public static final String KEY_MP_USE_SYSTEM_EMBED_VIEW = "mini_use_system_embedView";
    public static final String KEY_REQUEST_HTTP_CONTROL = "requestAPIHttpControl";
    public static final String KEY_REQUEST_TIMEOUT = "mini_request_timeout";
    public static final String KEY_RESERVED_STARTUP_PARAMS = "mini_reserved_launch_param";
    public static final String KEY_SHOULD_VERIFY_APP = "h5_shouldverifyapp";
    public static final String KEY_SYSTEM_BRIDGE_LIST = "h5_system_jsapi_list";
    public static final String KEY_UPLOAD_APP_WHITE_LIST = "mini_upload_app_white_list";
    public static final String KEY_UPLOAD_LOCAL_PATH_WHITE_LIST = "mini_upload_local_path_white_list";
    public static final String KEY_USE_CUSTOM_CHROME_CLIENT = "h5_use_custom_webChromeClient";
    public static final String KEY_WEBSOCKET_HOST_URL = "webSocketURLPrefixForDebug";
    public static final String KEY_WEBVIEW_CONFIG = "h5_webViewConfig";
    public static final String KEY_WHITE_SCREEN_CONFIG = "whiteScreenConfig";
    public static final String KEY_WORKER_CONFIG = "h5_workerConfig";
    public static final String KEY_WRITE_DEBUG_MONITOR = "mini_write_debug_monitor";
    public static final String NOT_FOUND_EVENT_DISABLED = "yes";
    public static final String PARAM_APP_INFO_ASYNC_UPDATE = "updateReqRate";
    public static final String PARAM_APP_INFO_ASYNC_UPDATE_DELAY = "app_async_update_delay";
    public static final String PARAM_APP_INFO_SYNC_UPDATE = "preReqRate";
    public static final String PARAM_DISABLE_AUTO_DOWNLOAD = "disableAutoDownload";
    public static final String PARAM_EMBEDED_WEBVIEW_HTTP_ENABLE = "enable";
    public static final String PARAM_EMBEDED_WEBVIEW_HTTP_WHITELIST = "whitelist";
    public static final String PARAM_ENABLE_EXTERNAL_WEBVIEW = "h5_enableExternalWebView";
    public static final String PARAM_EXTERNAL_WEBVIEW_MODEL = "h5_externalWebViewModel";
    public static final String PARAM_EXTERNAL_WEBVIEW_SDK_VERSION = "h5_externalWebViewSdkVersion";
    public static final String PARAM_EXTERNAL_WEBVIEW_UC = "h5_externalWebView4UC";
    public static final String PARAM_EXTERNAL_WEBVIEW_USAGE_RULE = "h5_externalWebViewUsageRule";
    public static final String PARAM_FORCE_WEB_WORKER = "h5_force_web_worker";
    public static final String PARAM_MONITOR_JSAPI_SWITCH = "jSApiSwitchEnable";
    public static final String PARAM_MONITOR_MAIN_SWITCH = "mainSwitchEnable";
    public static final String PARAM_PREPARE_APP_TIMEOUT = "expireTime";
    public static final String PARAM_REQUEST_HTTP_ENABLE = "enable";
    public static final String PARAM_REQUEST_HTTP_WHITELIST = "whitelist";
    public static final String PARAM_WHITE_SCREEN_ENABLE = "enable";
    public static final String PARAM_WHITE_SCREEN_H5_THRESHOLD = "HTMLWhiteScreenThreshold";
    public static final String PARAM_WHITE_SCREEN_MINI_THRESHOLD = "MiniWhiteScreenThreshold";
    public static Map<String, String> insideStringConfig;

    static {
        HashMap hashMap = new HashMap();
        insideStringConfig = hashMap;
        hashMap.put(KEY_REQUEST_TIMEOUT, "60000");
        insideStringConfig.put(KEY_MONITOR_SWITCH, DEFAULT_MONITOR_SWITCH);
        insideStringConfig.put(KEY_APP_POOL_SIZE, "3");
        insideStringConfig.put(KEY_SHOULD_VERIFY_APP, "YES");
        insideStringConfig.put(KEY_APP_INFO_UPDATE_CONFIG, DEFAULT_APP_INFO_UPDATE);
        insideStringConfig.put(KEY_DOWNLOAD_APP_RETRY_TIME, "2");
        insideStringConfig.put("ta_snapshotWhiteList", "[\"all\"]");
        insideStringConfig.put("h5_nebulaUseNIO", "YES");
        insideStringConfig.put(KEY_ENABLE_BASE64_TO_IS, "YES");
        insideStringConfig.put(KEY_WEBVIEW_CONFIG, DEFAULT_WEBVIEW_CONFIG);
        insideStringConfig.put(KEY_WORKER_CONFIG, DEFAULT_WORKER_CONFIG);
        insideStringConfig.put(KEY_WEBSOCKET_HOST_URL, "wss://miniprogram.alipay.com");
        insideStringConfig.put(KEY_ACCESS_EXTERNAL_PATH_WHITE_LIST, "");
        insideStringConfig.put(KEY_SYSTEM_BRIDGE_LIST, DEFAULT_SYSTEM_JSAPI_LIST);
        insideStringConfig.put(KEY_H5_CONFIG_CONTROL, DEFAULT_H5_CONFIG_CONTROL);
        insideStringConfig.put(KEY_ENABLE_INTERCEPT_JS_IN_PUSHWINDOW, "no");
        insideStringConfig.put(KEY_MP_MULTI_PROCESS_SWITCH, "NO");
        insideStringConfig.put(KEY_MP_APP_PROCESS_SIZE, "1");
        insideStringConfig.put(KEY_MP_USE_SYSTEM_EMBED_VIEW, "YES");
        insideStringConfig.put(KEY_MP_USE_NATIVE_CANVAS_VIEW, "NO");
        insideStringConfig.put(KEY_RESERVED_STARTUP_PARAMS, DEFAULT_RESERVED_PARAMS_LIST);
        insideStringConfig.put(KEY_WHITE_SCREEN_CONFIG, DEFAULT_WHITE_SCREEN_CONFIG);
        insideStringConfig.put(KEY_EMBEDED_WEBVIEW_HTTP_CONTROL, "{\"enable\":false,\"whitelist\":[]}");
        insideStringConfig.put(KEY_REQUEST_HTTP_CONTROL, "{\"enable\":false,\"whitelist\":[]}");
        insideStringConfig.put(KEY_CONFIG_ARRIVAL_TEST, DEFAULT_CONFIG_ARRIVAL_TEST);
        insideStringConfig.put(KEY_DIAG_DEV_TOOL_DISABLED, "NO");
        insideStringConfig.put(KEY_DIAG_DEV_TOOL_URL, DEFAULT_DIAG_DEV_TOOL_URL);
        insideStringConfig.put(KEY_ABOUT_PAGE_URL, DEFAULT_ABOUT_URL);
    }

    public static void putDefaultConfig(Map<String, String> map) {
        if (map != null && map.size() > 0) {
            insideStringConfig.putAll(map);
        }
    }
}
